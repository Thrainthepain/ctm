{"version":3,"file":"@charts-C4xQ0T1A.js","sources":["../../../node_modules/d3-shape/node_modules/d3-path/src/path.js","../../../node_modules/d3-shape/src/constant.js","../../../node_modules/d3-shape/src/math.js","../../../node_modules/d3-shape/src/arc.js","../../../node_modules/d3-shape/src/curve/linear.js","../../../node_modules/d3-shape/src/point.js","../../../node_modules/d3-shape/src/line.js","../../../node_modules/d3-shape/src/area.js","../../../node_modules/d3-shape/src/array.js","../../../node_modules/d3-shape/src/noop.js","../../../node_modules/d3-shape/src/curve/basis.js","../../../node_modules/d3-shape/src/curve/basisClosed.js","../../../node_modules/d3-shape/src/curve/basisOpen.js","../../../node_modules/d3-shape/src/curve/bundle.js","../../../node_modules/d3-shape/src/curve/cardinal.js","../../../node_modules/d3-shape/src/curve/cardinalClosed.js","../../../node_modules/d3-shape/src/curve/cardinalOpen.js","../../../node_modules/d3-shape/src/curve/catmullRom.js","../../../node_modules/d3-shape/src/curve/catmullRomClosed.js","../../../node_modules/d3-shape/src/curve/catmullRomOpen.js","../../../node_modules/d3-shape/src/curve/linearClosed.js","../../../node_modules/d3-shape/src/curve/monotone.js","../../../node_modules/d3-shape/src/curve/natural.js","../../../node_modules/d3-shape/src/curve/step.js","../../../node_modules/d3-shape/src/offset/none.js","../../../node_modules/d3-shape/src/order/none.js","../../../node_modules/d3-shape/src/stack.js","../../../node_modules/d3-shape/src/offset/expand.js","../../../node_modules/d3-shape/src/offset/diverging.js","../../../node_modules/d3-shape/src/offset/silhouette.js","../../../node_modules/d3-shape/src/offset/wiggle.js","../../../node_modules/d3-shape/src/order/appearance.js","../../../node_modules/d3-shape/src/order/ascending.js","../../../node_modules/d3-shape/src/order/descending.js","../../../node_modules/d3-shape/src/order/insideOut.js","../../../node_modules/d3-shape/src/order/reverse.js","../../../node_modules/d3-color/src/define.js","../../../node_modules/d3-color/src/color.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Type.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Array.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/List.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Children.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js","../../../node_modules/tslib/tslib.es6.mjs","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Object.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Color.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Math.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/States.js","../../../node_modules/@amcharts/amcharts5/.internal/core/Registry.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Order.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Template.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Container.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Text.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Label.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js","../../../node_modules/@amcharts/amcharts5/locales/en.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Language.js","../../../node_modules/@amcharts/amcharts5/.internal/core/Theme.js","../../../node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js","../../../node_modules/svg-arc-to-cubic-bezier/modules/index.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js","../../../node_modules/@amcharts/amcharts5/.internal/core/Root.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Data.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Component.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/gradients/Gradient.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/gradients/LinearGradient.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Time.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialText.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialLabel.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Slice.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","../../../node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","../../../node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","../../../node_modules/@amcharts/amcharts5/.internal/themes/AnimatedTheme.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChartDefaultTheme.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChart.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Grid.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/XYCursor.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/XYSeries.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Axis.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/ValueAxis.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/DateAxis.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabel.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisTick.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRenderer.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererX.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererY.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/xy/series/LineSeries.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/flow/FlowDefaultTheme.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/flow/Flow.js","../../../node_modules/d3-chord/src/math.js","../../../node_modules/d3-chord/src/chord.js","../../../node_modules/d3-path/src/path.js","../../../node_modules/d3-chord/src/array.js","../../../node_modules/d3-chord/src/constant.js","../../../node_modules/d3-chord/src/ribbon.js","../../../node_modules/d3-array/src/ascending.js","../../../node_modules/d3-array/src/descending.js","../../../node_modules/d3-zoom/src/transform.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/flow/FlowNode.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/flow/FlowNodes.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/flow/ChordNodes.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/flow/FlowLink.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/flow/ChordLink.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/flow/Chord.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/flow/ChordLinkDirected.js","../../../node_modules/@amcharts/amcharts5/.internal/charts/flow/ChordDirected.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export var slice = Array.prototype.slice;\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop.js\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n","import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none.js\";\n\nexport default function(series) {\n  var peaks = series.map(peak);\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n","import none from \"./none.js\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import appearance from \"./appearance.js\";\nimport {sum} from \"./ascending.js\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none.js\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Asserts that the condition is true.\r\n *\r\n * @param condition  Condition to check\r\n * @param message    Message to display in the error\r\n * @ignore\r\n */\r\nexport function assert(condition, message = \"Assertion failed\") {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        let converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\") {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        let num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    let negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    let digits = parsed[1];\r\n    let decimals = parsed[2] || \"\";\r\n    let res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        let exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            let zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            let zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map","import * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    const length = array.length;\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    const length = array.length;\r\n    for (let i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    const length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    const length = input.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    let found = false;\r\n    let index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexport function removeFirst(array, element) {\r\n    let index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    let index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nexport function pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    let ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    const length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end = array.length) {\r\n    const output = new Array(end - start);\r\n    for (let i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndexReverse(array, matches) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    const index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findReverse(array, matches) {\r\n    const index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findMap(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getFirstSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nexport function keepIf(array, keep) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    constructor(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ArrayDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends DisposerClass {\r\n    constructor(disposers) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposers = disposers;\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n    get disposers() {\r\n        return this._disposers;\r\n    }\r\n}\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _dispose() {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n            this._disposer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    get() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    set(value, disposer) {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    reset() {\r\n        this.set(undefined, undefined);\r\n    }\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    increment() {\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(() => {\r\n            --this._counter;\r\n            if (this._counter === 0) {\r\n                this.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Disposer.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nexport class EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            const a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, (x) => {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    hasListeners() {\r\n        return this._listeners.length !== 0;\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    hasListenersByType(type) {\r\n        return $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n    }\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    enable() {\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    enableType(type) {\r\n        delete this._disabled[type];\r\n    }\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    disableType(type, amount = Infinity) {\r\n        this._disabled[type] = amount;\r\n    }\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    _removeListener(listener) {\r\n        if (this._iterating === 0) {\r\n            const index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    }\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    _removeExistingListener(once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    isEnabled(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n    }\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    removeType(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.type === type) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    has(type, callback, context) {\r\n        const index = $array.findIndex(this._listeners, (info) => {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    }\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    _shouldDispatch(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        const count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    _eachListener(fn) {\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, (killed) => {\r\n                    this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    dispatch(type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener((listener) => {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        const info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(() => {\r\n                info.killed = true;\r\n                this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    onAll(callback, context, shouldClone = true) {\r\n        return this._on(false, null, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    on(type, callback, context, shouldClone = true) {\r\n        return this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    once(type, callback, context, shouldClone = true) {\r\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    }\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    off(type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nexport class TargetedEventDispatcher extends EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    constructor(target) {\r\n        super();\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n//# sourceMappingURL=EventDispatcher.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return $array.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._onSetIndex(a, value_a, value_b);\r\n            this._values[b] = value_a;\r\n            this._onSetIndex(b, value_b, value_a);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            $array.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        $array.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        $array.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        $array.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        $array.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nexport class ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            $array.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            if (this.autoDispose) {\r\n                $array.each(this._values, (x) => {\r\n                    x.dispose();\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nexport class ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nexport class Children extends List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            $array.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Children.js.map","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p1000`\r\n */\r\nexport class Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport const p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport const p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport const p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import * as $array from \"./Array\";\r\nexport function keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nexport function each(object, f) {\r\n    keys(object).forEach((key) => {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (let key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), (key) => {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    each(source, (key, value) => {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map","import * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    //console.log(type, dom);\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    //console.log(event);\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerleave\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerleave\": return \"mouseleave\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\r\nexport function getEventTarget(event) {\r\n    if (event.composedPath) {\r\n        const path = event.composedPath();\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return path[0];\r\n        }\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n            $object.each(styles, (key, value) => {\r\n                this.setStyle(key, value);\r\n            });\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = new CSSStyleRule();\r\n        }\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = $array.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleSheet extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        $array.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nexport function addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nexport function getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long = false, savings = false, utc = false) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return wtz;\r\n}\r\nexport function getTimezoneOffset(timezone) {\r\n    const date = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString('en-US', { timeZone: 'UTC' }));\r\n    const tzDate = new Date(date.toLocaleString('en-US', { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @ignore Exclude from docs\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\nexport function alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n * @deprecated\r\n */\r\n// export function unshiftThemeClass(settings: any, themeClass: string) {\r\n// \tlet themeClasses = settings.themeClasses;\r\n// \tif (!themeClasses) {\r\n// \t\tthemeClasses = [];\r\n// \t}\r\n// \tthemeClasses.unshift(themeClass);\r\n// \tsettings.themeClasses = themeClasses;\r\n// }\r\n/**\r\n * @ignore\r\n * @deprecated\r\n */\r\n// export function pushThemeClass(settings: any, themeClass: string) {\r\n// \tlet themeClasses = settings.themeClasses;\r\n// \tif (!themeClasses) {\r\n// \t\tthemeClasses = [];\r\n// \t}\r\n// \tthemeClasses.push(themeClass);\r\n// \tsettings.themeClasses = themeClasses;\r\n// }\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nexport class Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return $utils.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = $utils.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if ($type.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if ($type.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n//# sourceMappingURL=Color.js.map","import { __awaiter } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            $object.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return true;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return false;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map","import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    return !(bounds1.bottom < bounds2.top || bounds2.bottom < bounds1.top || bounds1.right < bounds2.left || bounds2.right < bounds1.left);\r\n}\r\n//# sourceMappingURL=Math.js.map","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map","import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n        $object.each(settings, (key) => {\r\n            this._userSettings[key] = true;\r\n        });\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        $object.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n//# sourceMappingURL=States.js.map","/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.4.1\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nexport const registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n//# sourceMappingURL=Registry.js.map","/**\r\n * @ignore\r\n */\r\nexport function compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareArray(left, right, f) {\r\n    const leftLength = left.length;\r\n    const rightLength = right.length;\r\n    const length = Math.min(leftLength, rightLength);\r\n    for (let i = 0; i < length; ++i) {\r\n        const order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","import { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nexport class Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new Disposer(() => {\r\n            if ($array.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nexport class Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nexport class Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        $object.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (!this.isDisposed()) {\r\n            let playing = false;\r\n            $object.each(this._animatingSettings, (key, animation) => {\r\n                if (animation._stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation._playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n            });\r\n            $object.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation._stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation._playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n            });\r\n            return playing;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @ignore\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        $array.each($object.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nexport class Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!(key in this._settings)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!(key in this._settings)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        $object.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        $object.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        $object.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        $object.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        $array.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        $array.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            $object.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            $object.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = $array.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return $array.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        $array.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        $array.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes() {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            $array.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                $array.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected) {\r\n            $array.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                $array.each(themes, (themes) => {\r\n                    $array.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            $array.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = $array.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = $order.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        $object.each(this._disposerProperties, (_, disposers) => {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            $array.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n//# sourceMappingURL=Entity.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nexport class TemplateState {\r\n    constructor(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    set(key, value) {\r\n        this._settings[key] = value;\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    remove(key) {\r\n        delete this._settings[key];\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this._settings[key] = settings[key];\r\n        });\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    _apply(other, seen) {\r\n        $object.each(this._settings, (key, value) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                seen[key] = true;\r\n                other.setRaw(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class TemplateStates {\r\n    constructor(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new TemplateState(name, this._template, settings);\r\n            this._states[name] = state;\r\n            this._template._stateChanged(name);\r\n            return state;\r\n        }\r\n    }\r\n    remove(name) {\r\n        delete this._states[name];\r\n        this._template._stateChanged(name);\r\n    }\r\n    _apply(entity, state) {\r\n        $object.each(this._states, (key, value) => {\r\n            let seen = state.states[key];\r\n            if (seen == null) {\r\n                seen = state.states[key] = {};\r\n            }\r\n            const other = entity.states.create(key, {});\r\n            value._apply(other, seen);\r\n        });\r\n    }\r\n}\r\nexport class TemplateAdapters {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(callbacks, callback);\r\n            if (callbacks.length === 0) {\r\n                delete this._callbacks[key];\r\n            }\r\n        });\r\n    }\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n        }\r\n    }\r\n    _apply(entity) {\r\n        const disposers = [];\r\n        $object.each(this._callbacks, (key, callbacks) => {\r\n            $array.each(callbacks, (callback) => {\r\n                disposers.push(entity.adapters.add(key, callback));\r\n            });\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n// TODO maybe extend from Properties ?\r\nexport class Template {\r\n    constructor(settings, isReal) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(settings) {\r\n        return new Template(settings, true);\r\n    }\r\n    /**\r\n     * Array of all entities using this template.\r\n     */\r\n    get entities() {\r\n        return this._entities;\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    set(key, value) {\r\n        if (this._settings[key] !== value) {\r\n            this.setRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplateProperty(this, key, value);\r\n            });\r\n        }\r\n    }\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            delete this._settings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    removeAll() {\r\n        $object.each(this._settings, (key, _value) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setPrivateRaw(key, value) {\r\n        this._privateSettings[key] = value;\r\n        return value;\r\n    }\r\n    setPrivate(key, value) {\r\n        if (this._privateSettings[key] !== value) {\r\n            this.setPrivateRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplatePrivateProperty(this, key, value);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            delete this._privateSettings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplatePrivateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    setAll(value) {\r\n        $object.each(value, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    _apply(entity, state) {\r\n        const disposers = [];\r\n        $object.each(this._settingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.on(key, event));\r\n            });\r\n        });\r\n        $object.each(this._privateSettingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.onPrivate(key, event));\r\n            });\r\n        });\r\n        this.states._apply(entity, state);\r\n        disposers.push(this.adapters._apply(entity));\r\n        disposers.push(entity.events.copyFrom(this.events));\r\n        return new MultiDisposer(disposers);\r\n    }\r\n    _setObjectTemplate(entity) {\r\n        this._entities.push(entity);\r\n    }\r\n    _removeObjectTemplate(entity) {\r\n        $array.remove(this._entities, entity);\r\n    }\r\n    _stateChanged(name) {\r\n        this._entities.forEach((entity) => {\r\n            entity._applyStateByKey(name);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Template.js.map","import { __awaiter } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            if (this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nexport class Sprite extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof Template) && template) {\r\n                        template = Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (dataItem != oldDataItem) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                $array.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                $array.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                if (this.isHover()) {\r\n                    this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                        this.showTooltip(e.point);\r\n                    });\r\n                }\r\n                this._tooltipPointerDp = new MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => this.showTooltip(), 10);\r\n                        }),\r\n                        $utils.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isPrivateDirty(\"focusable\")) {\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\")) {\r\n                this._hoverDp = new MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                this.setPrivateRaw(\"touchHovering\", false);\r\n                                this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", false);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if ($object.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = $utils.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return $object.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n            }\r\n            let x = e.point.x - dragEvent.point.x;\r\n            let y = e.point.y - dragEvent.point.y;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\") && this.isFocus()) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if ($type.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if ($type.isNumber(privateWidth)) {\r\n            if (privateWidth > 0) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            else {\r\n                bounds.left = bounds.right + privateWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(privateHeight)) {\r\n            if (privateHeight > 0) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n            else {\r\n                bounds.top = bounds.bottom + privateHeight;\r\n            }\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            $array.removeFirst(parent._percentageSizeChildren, this);\r\n            $array.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        this.showTooltip();\r\n        this._handleOver();\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        this.hideTooltip();\r\n        this._handleOut();\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        const tooltip = this.getTooltip();\r\n        const tooltipText = this.get(\"tooltipText\");\r\n        const tooltipHTML = this.get(\"tooltipHTML\");\r\n        if ((tooltipText || tooltipHTML) && tooltip) {\r\n            const tooltipPosition = this.get(\"tooltipPosition\");\r\n            const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n            if (tooltipPosition == \"fixed\" || !point) {\r\n                this._display._setMatrix();\r\n                point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n            }\r\n            tooltip.set(\"pointTo\", point);\r\n            tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n            if (!tooltip.get(\"x\")) {\r\n                tooltip.set(\"x\", point.x);\r\n            }\r\n            if (!tooltip.get(\"y\")) {\r\n                tooltip.set(\"y\", point.y);\r\n            }\r\n            if (tooltipText) {\r\n                tooltip.label.set(\"text\", tooltipText);\r\n            }\r\n            if (tooltipHTML) {\r\n                tooltip.label.set(\"html\", tooltipHTML);\r\n            }\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                tooltip.label._setDataItem(dataItem);\r\n            }\r\n            if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                this.hideTooltip();\r\n                return;\r\n            }\r\n            tooltip.label.text.markDirtyText();\r\n            const promise = tooltip.show();\r\n            this.setPrivateRaw(\"showingTooltip\", true);\r\n            return promise;\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof Percent) {\r\n                return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof Percent) {\r\n                return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if ($type.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if ($type.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if ($type.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if ($type.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if ($type.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if ($type.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if ($type.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if ($type.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return $object.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Sprite.className])\r\n});\r\n//# sourceMappingURL=Sprite.js.map","import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class Pattern extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"color\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fill\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            this._display.clear();\r\n            this._backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                this._backgroundDisplay.beginFill(fill, fillOpacity);\r\n                this._backgroundDisplay.drawRect(0, 0, width, height);\r\n                this._backgroundDisplay.endFill();\r\n            }\r\n            this._display.angle = this.get(\"rotation\", 0);\r\n            //this._display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(this._display, this._backgroundDisplay, repetition, width, height);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Pattern.className])\r\n});\r\n//# sourceMappingURL=Pattern.js.map","import { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PicturePattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n//# sourceMappingURL=PicturePattern.js.map","/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map","import { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Graphics extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw) {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            //const bounds = this._display.getLocalBounds();\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fillPattern) {\r\n                let changed = false;\r\n                if (fill && (!fillPattern.get(\"fill\") || fillPattern.get(\"fillInherited\"))) {\r\n                    fillPattern.set(\"fill\", fill);\r\n                    fillPattern.set(\"fillInherited\", true);\r\n                    changed = true;\r\n                }\r\n                if (stroke && (!fillPattern.get(\"color\") || fillPattern.get(\"colorInherited\"))) {\r\n                    fillPattern.set(\"color\", stroke);\r\n                    fillPattern.set(\"colorInherited\", true);\r\n                    changed = true;\r\n                }\r\n                if (changed) {\r\n                    // @todo: is this OK?\r\n                    fillPattern._changed();\r\n                }\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            else if (fill) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                if (strokePattern) {\r\n                    let changed = false;\r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    const pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                else if (stroke) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin);\r\n                    this._display.endStroke();\r\n                }\r\n            }\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Graphics.className])\r\n});\r\n//# sourceMappingURL=Graphics.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Rectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        this._display.drawRect(0, 0, this.width(), this.height());\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Rectangle.className])\r\n});\r\n//# sourceMappingURL=Rectangle.js.map","import { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nexport class Layout extends Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Layout.className])\r\n});\r\n//# sourceMappingURL=Layout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class HorizontalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth <= 0 || availableWidth == Infinity) {\r\n            availableWidth = .1;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n//# sourceMappingURL=HorizontalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class VerticalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight <= 0 || availableHeight == Infinity) {\r\n            availableHeight = .1;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n//# sourceMappingURL=VerticalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class GridLayout extends Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxColumnHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxColumnHeight;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        eachChildren(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([GridLayout.className])\r\n});\r\n//# sourceMappingURL=GridLayout.js.map","import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nexport class TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $type.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n//# sourceMappingURL=TextFormatter.js.map","/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map","import { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        $array.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        $array.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        $array.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes() {\r\n        if (super._applyThemes()) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes();\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        let width = this.get(\"width\");\r\n        let height = this.get(\"height\");\r\n        let pWidth = this.getPrivate(\"width\");\r\n        let pHeight = this.getPrivate(\"height\");\r\n        let bounds = {\r\n            left: 0,\r\n            top: 0,\r\n            right: this.width(),\r\n            bottom: this.height(),\r\n        };\r\n        let layout = this.get(\"layout\");\r\n        let horizontal = false;\r\n        let vertical = false;\r\n        if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n            horizontal = true;\r\n        }\r\n        if (layout instanceof VerticalLayout) {\r\n            vertical = true;\r\n        }\r\n        if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n            // void\r\n        }\r\n        else {\r\n            let m = Number.MAX_VALUE;\r\n            let l = m;\r\n            let r = -m;\r\n            let t = m;\r\n            let b = -m;\r\n            const paddingLeft = this.get(\"paddingLeft\", 0);\r\n            const paddingTop = this.get(\"paddingTop\", 0);\r\n            const paddingRight = this.get(\"paddingRight\", 0);\r\n            const paddingBottom = this.get(\"paddingBottom\", 0);\r\n            this.children.each((child) => {\r\n                if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                    let childBounds = child.adjustedLocalBounds();\r\n                    let childX = child.x();\r\n                    let childY = child.y();\r\n                    let cl = childX + childBounds.left;\r\n                    let cr = childX + childBounds.right;\r\n                    let ct = childY + childBounds.top;\r\n                    let cb = childY + childBounds.bottom;\r\n                    if (horizontal) {\r\n                        cl -= child.get(\"marginLeft\", 0);\r\n                        cr += child.get(\"marginRight\", 0);\r\n                    }\r\n                    if (vertical) {\r\n                        ct -= child.get(\"marginTop\", 0);\r\n                        cb += child.get(\"marginBottom\", 0);\r\n                    }\r\n                    if (cl < l) {\r\n                        l = cl;\r\n                    }\r\n                    if (cr > r) {\r\n                        r = cr;\r\n                    }\r\n                    if (ct < t) {\r\n                        t = ct;\r\n                    }\r\n                    if (cb > b) {\r\n                        b = cb;\r\n                    }\r\n                }\r\n            });\r\n            if (l == m) {\r\n                l = 0;\r\n            }\r\n            if (r == -m) {\r\n                r = 0;\r\n            }\r\n            if (t == m) {\r\n                t = 0;\r\n            }\r\n            if (b == -m) {\r\n                b = 0;\r\n            }\r\n            bounds.left = l - paddingLeft;\r\n            bounds.top = t - paddingTop;\r\n            bounds.right = r + paddingRight;\r\n            bounds.bottom = b + paddingBottom;\r\n        }\r\n        this._contentWidth = bounds.right - bounds.left;\r\n        this._contentHeight = bounds.bottom - bounds.top;\r\n        if ($type.isNumber(width)) {\r\n            bounds.left = 0;\r\n            bounds.right = width;\r\n        }\r\n        if ($type.isNumber(pWidth)) {\r\n            bounds.left = 0;\r\n            bounds.right = pWidth;\r\n        }\r\n        if ($type.isNumber(height)) {\r\n            bounds.top = 0;\r\n            bounds.bottom = height;\r\n        }\r\n        if ($type.isNumber(pHeight)) {\r\n            bounds.top = 0;\r\n            bounds.bottom = pHeight;\r\n        }\r\n        this._localBounds = bounds;\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            $array.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            $array.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            const html = this.get(\"html\");\r\n            if (html && html !== \"\") {\r\n                this._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\r\n            }\r\n            else {\r\n                this._root._removeHTMLContent(this);\r\n            }\r\n            this._root._positionHTMLElement(this);\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\r\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    let shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY <= 0) {\r\n                        shiftY = -start;\r\n                    }\r\n                    if (end + shiftY >= 1) {\r\n                        shiftY = 1 - end;\r\n                    }\r\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\") * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                const parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Container.className])\r\n});\r\n//# sourceMappingURL=Container.js.map","import { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport { Disposer } from \"../util/Disposer\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\")) {\r\n            let fill = this.get(\"fill\");\r\n            if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        $array.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        const text = this.get(\"text\", \"\");\r\n        return this.get(\"populateText\") ? populateString(this, text) : text;\r\n    }\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Text.className])\r\n});\r\n//# sourceMappingURL=Text.js.map","/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            $array.each(entries, (entry) => {\r\n                $array.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    $array.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n//# sourceMappingURL=ResizeSensor.js.map","import { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nexport class InterfaceColors extends Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n//# sourceMappingURL=InterfaceColors.js.map","import { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nexport class Label extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        $array.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        $array.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        if (this.isDirty(\"maxHeight\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            this._text.set(\"text\", this.get(\"text\"));\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\");\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\");\r\n                }\r\n            }\r\n            this.text.set(\"x\", x);\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if ($type.isNumber(maxWidth)) {\r\n            this.text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            this.text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if ($type.isNumber(maxHeight)) {\r\n            this.text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            this.text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        if (this.text.get(\"populateText\")) {\r\n            this.text.markDirtyText();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Label.className])\r\n});\r\n//# sourceMappingURL=Label.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class PointedRectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = $math.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = $math.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n//# sourceMappingURL=PointedRectangle.js.map","import { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nexport class Tooltip extends Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlContentHovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        this.set(\"background\", PointedRectangle.new(this._root, {\r\n            themeTags: [\"tooltip\", \"background\"]\r\n        }));\r\n        this._label = this.children.push(Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n            if (htmlElement) {\r\n                $utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\r\n                    this._htmlContentHovered = true;\r\n                });\r\n                $utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\r\n                    this._htmlContentHovered = false;\r\n                });\r\n            }\r\n        }));\r\n        this._root._tooltips.push(this);\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    dispose() {\r\n        super.dispose();\r\n        $array.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.get(\"background\")._markDirtyKey(\"width\");\r\n        }\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            if (!this._htmlContentHovered) {\r\n                                target.unhover();\r\n                            }\r\n                        }\r\n                    })\r\n                ]);\r\n                this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n                    if (this._keepHoverDp && htmlElement) {\r\n                        this._keepHoverDp.disposers.push($utils.addEventListener(htmlElement, \"pointerleave\", (ev) => {\r\n                            const outEvent = this.root._renderer.getEvent(ev);\r\n                            bg.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                originalEvent: outEvent.event,\r\n                                point: outEvent.point,\r\n                                simulated: false,\r\n                                target: bg\r\n                            });\r\n                        }));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof Color) {\r\n                this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n                background.set(\"width\", w);\r\n                background.set(\"height\", h);\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Tooltip.className])\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nexport class NumberFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = $object.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        if (this.get(\"forceLTR\") === true) {\r\n            formatted = \"‎\" + formatted;\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            let d = Math.pow(10, details.decimals.passive);\r\n            value = Math.round(value * d) / d;\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = $type.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", $type.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace($type.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n//# sourceMappingURL=NumberFormatter.js.map","function parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nexport class Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n//# sourceMappingURL=Timezone.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nexport class DateFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    format(source, format) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        if (timezone && !this._root.utc) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!$type.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = $utils.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(date, false, false, this._root.utc);\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(date, true, false, this._root.utc);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(date, false, true, this._root.utc);\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(date, true, true, this._root.utc);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? $utils.getTimezoneOffset(timezone) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!$type.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format) {\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if ($type.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!$type.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": this._root.utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, this._root.utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push($utils.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push($utils.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//# sourceMappingURL=DateFormatter.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            let ints = Math.floor(tstamp / this._getUnitValue(unit));\r\n            res = res.replace($type.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n            // Reduce timestamp\r\n            tstamp -= ints * this._getUnitValue(unit);\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            //let diffUnit = this.getValueUnit(Math.abs(maxValue - value), baseUnit);\r\n            //console.log(maxUnit, diffUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=DurationFormatter.js.map","/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","import { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport en from \"../../../locales/en\";\r\n;\r\n/**\r\n * Add localization functionality.\r\n */\r\nexport class Language extends Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", en);\r\n        super._setDefaults();\r\n    }\r\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */\r\n    setTranslationsAny(translations, locale) {\r\n        $object.each(translations, (key, val) => {\r\n            this.setTranslationAny(key, val, locale);\r\n        });\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n//# sourceMappingURL=Language.js.map","import { Template } from \"./util/Template\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nexport class Theme {\r\n    constructor(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root) {\r\n        const x = (new this(root, true));\r\n        x.setupDefaultRules();\r\n        return x;\r\n    }\r\n    setupDefaultRules() { }\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    _lookupRules(themeClass) {\r\n        return this._rules[themeClass];\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    ruleRaw(themeClass, themeTags = []) {\r\n        let rules = this._rules[themeClass];\r\n        if (!rules) {\r\n            rules = this._rules[themeClass] = [];\r\n        }\r\n        themeTags.sort($order.compare);\r\n        const { index, found } = $array.getSortedIndex(rules, (x) => {\r\n            const order = $order.compare(x.tags.length, themeTags.length);\r\n            if (order === 0) {\r\n                return $order.compareArray(x.tags, themeTags, $order.compare);\r\n            }\r\n            else {\r\n                return order;\r\n            }\r\n        });\r\n        if (found) {\r\n            return rules[index].template;\r\n        }\r\n        else {\r\n            const template = Template.new({});\r\n            rules.splice(index, 0, {\r\n                tags: themeTags,\r\n                template,\r\n            });\r\n            return template;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    rule(themeClass, themeTags = []) {\r\n        return this.ruleRaw(themeClass, themeTags);\r\n    }\r\n}\r\n//# sourceMappingURL=Theme.js.map","import { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: Color.fromHex(0xe5e5e5),\r\n            fill: Color.fromHex(0xf3f3f3),\r\n            primaryButton: Color.fromHex(0x6794dc),\r\n            primaryButtonHover: Color.fromHex(0x6771dc),\r\n            primaryButtonDown: Color.fromHex(0x68dc76),\r\n            primaryButtonActive: Color.fromHex(0x68dc76),\r\n            primaryButtonText: Color.fromHex(0xffffff),\r\n            primaryButtonStroke: Color.fromHex(0xffffff),\r\n            secondaryButton: Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: Color.fromHex(0x000000),\r\n            secondaryButtonStroke: Color.fromHex(0xffffff),\r\n            grid: Color.fromHex(0x000000),\r\n            background: Color.fromHex(0xffffff),\r\n            alternativeBackground: Color.fromHex(0x000000),\r\n            text: Color.fromHex(0x000000),\r\n            alternativeText: Color.fromHex(0xffffff),\r\n            disabled: Color.fromHex(0xadadad),\r\n            positive: Color.fromHex(0x50b300),\r\n            negative: Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: p50,\r\n            tooltipY: p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            interactiveChildren: false\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: p50,\r\n            x: p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: p50,\r\n            y: p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: p100,\r\n            height: p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: p50,\r\n            centerX: p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\",\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: p50,\r\n            centerY: p50,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        r(\"Polygon\").setAll({\r\n            animationEasing: $ease.out($ease.cubic),\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            width: p100,\r\n            centerX: p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            height: p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultTheme.js.map","/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nexport class Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix.js.map","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","/** @ignore */ /** */\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n// function distributeIdBAK(id: number): number {\r\n// \tif (id === 1) {\r\n// \t\treturn 0x000001;\r\n// \t} else {\r\n// \t\t// Finds the closest power of 2\r\n// \t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n// \t\t// Translates the id into an odd fraction index\r\n// \t\tconst index = ((base - id) * 2) + 1;\r\n// \t\t// TODO is Math.round correct ?\r\n// \t\treturn Math.round(0xffffff * (index / base));\r\n// \t}\r\n// }\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[2] | 0) + (rgb[1] << 8) + (rgb[0] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), (event) => {\r\n        const target = $utils.getEventTarget(event);\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches), target);\r\n        }\r\n        else {\r\n            f([event], target);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasDisplayObject extends DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                $utils.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._layer.dirty = true;\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive() {\r\n        return this.inactive == false && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask() {\r\n        return this._isInteractive();\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = Math.floor(tx) + .5;\r\n            ty = Math.floor(ty) + .5;\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(parentLayer) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask()) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            this._render(parentLayer);\r\n            ghostContext.restore();\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(parentLayer) {\r\n        if (this.exportable === false) {\r\n            const layer = this._layer || parentLayer;\r\n            layer.tainted = true;\r\n        }\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask() {\r\n        return this.interactiveChildren || super._isInteractiveMask();\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        $array.removeFirst(this._children, child);\r\n    }\r\n    _render(parentLayer) {\r\n        super._render(parentLayer);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        const layer = this._layer || parentLayer;\r\n        $array.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(layer);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        $array.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    path(_context) { }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginPath extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.beginPath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    beginPath() {\r\n        this._pushOp(new BeginPath());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = arcToBezier({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        $array.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        $array.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(parentLayer) {\r\n        super._render(parentLayer);\r\n        const layer = this._layer || parentLayer;\r\n        const layerDirty = layer.dirty;\r\n        const interactive = this._isInteractive();\r\n        if (layerDirty || interactive) {\r\n            const context = layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (interactive) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            $array.each(this._operations, (op) => {\r\n                if (layerDirty) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (interactive) {\r\n                    op.path(ghostContext);\r\n                    op.colorize(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            $array.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            $array.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(layer, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(layer);\r\n        const context = layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive() && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive() && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if ($type.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if ($type.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(parentLayer) {\r\n        const layer = this._layer || parentLayer;\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(layer);\r\n        }\r\n        if (this.textVisible) {\r\n            const interactive = this._isInteractive();\r\n            const context = layer.context;\r\n            const layerDirty = layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(layer);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (this._isInteractive()) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        context.save();\r\n                        context.beginPath();\r\n                        if (chunk.fill) {\r\n                            context.strokeStyle = chunk.fill.toCSS();\r\n                        }\r\n                        else if (this.style.fill && this.style.fill instanceof Color) {\r\n                            context.strokeStyle = this.style.fill.toCSS();\r\n                        }\r\n                        context.lineWidth = thickness * offset;\r\n                        context.moveTo(offsetX, y);\r\n                        context.lineTo(offsetX + chunk.width, y);\r\n                        context.stroke();\r\n                        context.restore();\r\n                    }\r\n                    if (interactive && this.interactive) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure(this.getLayer());\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(layer) {\r\n        const context = layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(layer, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this.textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = $utils.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width;\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this.textVisible = false;\r\n                        bounds.left = 0;\r\n                        bounds.top = 0;\r\n                        bounds.right = 0;\r\n                        bounds.bottom = 0;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale || this._originalScale == 1) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this.textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this.textVisible = false;\r\n                    bounds.left = 0;\r\n                    bounds.top = 0;\r\n                    bounds.right = 0;\r\n                    bounds.bottom = 0;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this.textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this.textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\r\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(parentLayer) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(parentLayer);\r\n                break;\r\n            default:\r\n                super._render(parentLayer);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(parentLayer) {\r\n        if (this.textVisible) {\r\n            const layer = this._layer || parentLayer;\r\n            this._prerender(layer);\r\n            const interactive = this._isInteractive();\r\n            const context = layer.context;\r\n            const layerDirty = layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(layer);\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                $array.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                context.rotate(lineStartAngle);\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    context.textBaseline = \"middle\";\r\n                    context.textAlign = \"center\";\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(layer) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(layer);\r\n            default:\r\n                return super._measure(layer);\r\n        }\r\n    }\r\n    _measureCircular(layer) {\r\n        const context = layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this.textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(layer, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            $array.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = $type.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    const chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this.textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (rtl) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this.textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo) => {\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(parentLayer) {\r\n        super._render(parentLayer);\r\n        if (this.image) {\r\n            const layer = this._layer || parentLayer;\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            if (layer.dirty) {\r\n                if (this.shadowColor) {\r\n                    layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive()) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRenderer extends ArrayDisposer {\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_domWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_domHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_canvasWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_canvasHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.setAttribute(\"aria-hidden\", \"true\");\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new Disposer(() => {\r\n            $object.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push($utils.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    $array.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            this._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.resize(this._canvasWidth, this._canvasHeight, this._domWidth, this._domHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._canvasWidth, this._canvasHeight, this._domWidth, this._domHeight, this.resolution);\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight) {\r\n        this._canvasWidth = canvasWidth;\r\n        this._canvasHeight = canvasHeight;\r\n        this._domWidth = domWidth;\r\n        this._domHeight = domHeight;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                layer.dirty = true;\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        if (layer.visible) {\r\n            this.resizeLayer(layer);\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = $array.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render(this.defaultLayer);\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        $array.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            const { events, target, native } = this._lastPointerMoveEvent;\r\n            //this._mouseMoveThrottler.run();\r\n            $array.each(events, (event) => {\r\n                this._dispatchGlobalMousemove(event, target, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(bbox.left - margin.left, bbox.top - margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const originalPoint = {\r\n            x: originalEvent.clientX || 0,\r\n            y: originalEvent.clientY || 0,\r\n        };\r\n        const point = {\r\n            x: originalPoint.x - (adjustPoint ? bbox.left : 0),\r\n            y: originalPoint.y - (adjustPoint ? bbox.top : 0),\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox, target) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        if (!target || !this._layerDom.contains(target)) {\r\n            return;\r\n        }\r\n        const pixel = this._ghostLayer.getImageData(point, bbox);\r\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n            return false;\r\n        }\r\n        const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    $array.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                            $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new MultiDisposer([\r\n            new Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            $utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev, target) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, target, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, target, native) => {\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, target, native);\r\n                        });\r\n                    };\r\n                    return new MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\r\n                        $array.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev, target);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev, target);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event, $utils.getEventTarget(event));\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                $array.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        let canvasWidth = Math.floor(this._canvasWidth * this.resolution);\r\n        let canvasHeight = Math.floor(this._canvasHeight * this.resolution);\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > canvasWidth)) {\r\n            let minScale = options.minWidth / canvasWidth;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > canvasHeight)) {\r\n            let minScale = options.minHeight / canvasHeight;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < canvasWidth)) {\r\n            let maxScale = options.maxWidth / canvasWidth;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > canvasHeight)) {\r\n            let maxScale = options.maxHeight / canvasHeight;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = canvasWidth * scale / this.resolution;\r\n            canvasHeight = canvasHeight * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    let extraX = 0;\r\n                    let extraY = 0;\r\n                    if (layer.margin) {\r\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\r\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\r\n                    }\r\n                    layer.view.width = canvasWidth + extraX;\r\n                    layer.view.height = canvasHeight + extraY;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                let x = 0;\r\n                let y = 0;\r\n                if (layer.margin) {\r\n                    x = -(layer.margin.left || 0) * this.resolution;\r\n                    y = -(layer.margin.top || 0) * this.resolution;\r\n                }\r\n                context.drawImage(layer.view, x, y);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        $array.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        canvasWidth += (this.margin.left + this.margin.right);\r\n        canvasHeight += (this.margin.top + this.margin.bottom);\r\n        // TODO this should take into account calculateSize\r\n        domWidth += (this.margin.left + this.margin.right);\r\n        domHeight += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        $array.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.width != null) {\r\n            canvasWidth = this.width;\r\n            domWidth = this.width;\r\n        }\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.height != null) {\r\n            canvasHeight = this.height;\r\n            domHeight = this.height;\r\n        }\r\n        if (this.margin) {\r\n            canvasWidth += (this.margin.left + this.margin.right);\r\n            canvasHeight += (this.margin.top + this.margin.bottom);\r\n            // TODO this should take into account calculateSize\r\n            domWidth += (this.margin.left + this.margin.right);\r\n            domHeight += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n//# sourceMappingURL=CanvasRenderer.js.map","import { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nexport class Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#UTC_and_time_zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Time_zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        Object.defineProperty(this, \"_paused\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: percent(100),\r\n                centerY: p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: Rectangle.new(this, {\r\n                    fill: color(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n            const a = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: color(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _getRealSize() {\r\n        return this.dom.getBoundingClientRect();\r\n    }\r\n    _getCalculatedSize(rect) {\r\n        if (this._settings.calculateSize) {\r\n            return this._settings.calculateSize(rect);\r\n        }\r\n        else {\r\n            return {\r\n                width: rect.width,\r\n                height: rect.height,\r\n            };\r\n        }\r\n    }\r\n    _init() {\r\n        const settings = this._settings;\r\n        if (settings.accessible !== false) {\r\n            if (settings.focusable) {\r\n                this._inner.setAttribute(\"focusable\", \"true\");\r\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\r\n            }\r\n            if (settings.ariaLabel) {\r\n                this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\r\n            }\r\n        }\r\n        const renderer = this._renderer;\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const width = Math.floor(size.width);\r\n        const height = Math.floor(size.height);\r\n        const realWidth = Math.floor(rect.width);\r\n        const realHeight = Math.floor(rect.height);\r\n        const rootContainer = Container.new(this, {\r\n            visible: true,\r\n            width: realWidth,\r\n            height: realHeight,\r\n        });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n        this.container = container;\r\n        renderer.resize(realWidth, realHeight, width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            // readerAlertElement.style.zIndex = \"-100000\";\r\n            // readerAlertElement.style.opacity = \"0\";\r\n            // readerAlertElement.style.top = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.width = \"1px\";\r\n            readerAlertElement.style.height = \"1px\";\r\n            readerAlertElement.style.overflow = \"hidden\";\r\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", (ev) => {\r\n                    if (ev.keyCode == 16) {\r\n                        this._isShift = true;\r\n                    }\r\n                    else if (ev.keyCode == 9) {\r\n                        this._isShift = ev.shiftKey;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", (ev) => {\r\n                    if (ev.keyCode == 16) {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.keyCode == 27) {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        switch (ev.keyCode) {\r\n                            case 13:\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case 37:\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case 39:\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case 38:\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case 40:\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const keyCode = ev.keyCode;\r\n                        switch (keyCode) {\r\n                            case 37:\r\n                            case 39:\r\n                            case 38:\r\n                            case 40:\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter((item) => {\r\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false ? true : false;\r\n                                    });\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (keyCode == 39 || keyCode == 40) ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const w = Math.floor(size.width);\r\n        const h = Math.floor(size.height);\r\n        if (w > 0 && h > 0) {\r\n            const realWidth = Math.floor(rect.width);\r\n            const realHeight = Math.floor(rect.height);\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(realWidth, realHeight, w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", realWidth);\r\n            rootContainer.setPrivate(\"height\", realHeight);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        $array.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        $array.keepIf(this._animations, (animation) => {\r\n            return animation._runAnimation(currentTime);\r\n        });\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            $object.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        $object.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        $object.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        this._positionHTMLElements();\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return $order.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        $object.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                this._animations.length === 0 &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime, now) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                if (!this._paused) {\r\n                    if (now) {\r\n                        this._ticker;\r\n                    }\r\n                    else {\r\n                        rAF(this.fps, this._ticker);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow(timeout = 10000) {\r\n        if (!this.isDisposed()) {\r\n            const endTime = performance.now() + timeout;\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                if (currentTime >= endTime) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._dirty[entity.uid] = entity;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyParent(parent) {\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._isDirtyParents = true;\r\n            this._dirtyParents[parent.uid] = parent;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._dirtyBounds[entity.uid] = entity;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addAnimation(animation) {\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new Disposer(() => {\r\n            $array.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            $array.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                $utils.removeElement(this._inner);\r\n            }\r\n            $array.remove(registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            this._readerAlertElement.innerHTML = $utils.stripTags(text);\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: p100,\r\n                height: p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            $array.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            $array.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        $array.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group && item.getPrivate(\"focusable\") !== false) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = populateString(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        $utils.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push($utils.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev, index);\r\n        }));\r\n        disposers.push($utils.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev, index);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            $array.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        let x = bounds.left - 2;\r\n        let y = bounds.top - 2;\r\n        if (width < 0) {\r\n            x += width;\r\n            width = Math.abs(width);\r\n        }\r\n        if (height < 0) {\r\n            y += height;\r\n            height = Math.abs(height);\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = y + \"px\";\r\n        focusElement.style.left = x + \"px\";\r\n        focusElement.style.width = (width + 4) + \"px\";\r\n        focusElement.style.height = (height + 4) + \"px\";\r\n    }\r\n    _handleFocus(ev, index) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        const focused = this._tabindexes[index];\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        focusableElements[index].focus();\r\n    }\r\n    _handleBlur(ev, _index) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = $utils.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.width = \"1px\";\r\n        tooltipElement.style.height = \"1px\";\r\n        tooltipElement.style.overflow = \"hidden\";\r\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n        $utils.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const bbox = this.dom.getBoundingClientRect();\r\n        return {\r\n            x: point.x - bbox.left,\r\n            y: point.y - bbox.top\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const bbox = this.dom.getBoundingClientRect();\r\n        return {\r\n            x: point.x + bbox.left,\r\n            y: point.y + bbox.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        $object.each(styles, (key, val) => {\r\n            if ($type.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        $utils.setInteractive(htmlElement, target.get(\"interactive\", false));\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            $utils.setInteractive(htmlElement, true);\r\n            this._disposers.push($utils.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        container.append(htmlElement);\r\n        $array.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        $array.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\r\n            $array.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            const bounds = target.globalBounds();\r\n            htmlElement.style.top = (bounds.top) + \"px\";\r\n            htmlElement.style.left = (bounds.left) + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.position = \"fixed\";\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                htmlElement.style.position = \"absolute\";\r\n                w = bbox.width;\r\n                h = bbox.height;\r\n                target._adjustedLocalBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n                target.setPrivate(\"minWidth\", w);\r\n                target.setPrivate(\"minHeight\", h);\r\n            }\r\n            else {\r\n                target.removePrivate(\"minWidth\");\r\n                target.removePrivate(\"minHeight\");\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n        }\r\n        $array.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n//# sourceMappingURL=Root.js.map","import { Entity } from \"../../core/util/Entity\";\r\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\r\nexport class Bullet extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        // used by MapPolygons where one data item can have multiple bullets of the same kind\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Target series object if it's a bullet for series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because bullet will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"sprite\")) {\r\n            const sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setAll({ position: \"absolute\", role: \"figure\" });\r\n                this._disposers.push(sprite);\r\n            }\r\n        }\r\n        if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\r\n            if (this.series) {\r\n                this.series._positionBullet(this);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Bullet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Bullet\"\r\n});\r\nObject.defineProperty(Bullet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Bullet.className])\r\n});\r\n//# sourceMappingURL=Bullet.js.map","import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let w = width;\r\n        let h = height;\r\n        let wSign = w / Math.abs(width);\r\n        let hSign = h / Math.abs(height);\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(crtl * wSign, 0);\r\n            display.lineTo(w - crtr * wSign, 0);\r\n            if (crtr > 0) {\r\n                display.arcTo(w, 0, w, crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(w, h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(w, h, w - crbr * wSign, h, crbr);\r\n            }\r\n            display.lineTo(crbl * wSign, h);\r\n            if (crbl > 0) {\r\n                display.arcTo(0, h, 0, h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(0, crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(0, 0, crtl * wSign, 0, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n//# sourceMappingURL=RoundedRectangle.js.map","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n//# sourceMappingURL=Button.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Circle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawCircle(0, 0, this.get(\"radius\", 10));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Circle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Circle\"\r\n});\r\nObject.defineProperty(Circle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Circle.className])\r\n});\r\n//# sourceMappingURL=Circle.js.map","import { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nexport class ListData extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n            //console.log(newValue)\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nexport class JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n//# sourceMappingURL=Data.js.map","import { __awaiter } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nexport class DataItem extends Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nexport class Component extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                $array.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                if (dataItem.bullets && dataItem.bullets.length == 0) {\r\n                    dataItem.bullets = undefined;\r\n                }\r\n                $object.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            $array.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            $array.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            $array.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            $array.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeDataItem(data) {\r\n        let dataItem = new DataItem(this, undefined, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    pushDataItem(data) {\r\n        const dataItem = this.makeDataItem(data);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Component.className])\r\n});\r\n//# sourceMappingURL=Component.js.map","import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for gradients.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\r\nexport class Gradient extends Entity {\r\n    _afterNew() {\r\n        // Applying themes because gradient will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getFill(_target) {\r\n        return {\r\n            addColorStop: (_offset, _color) => { }\r\n        };\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        //if (this.isDirty(\"target\") && this.get(\"target\")) {\r\n        //\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\r\n        //\t});\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getBounds(target) {\r\n        const gradientTarget = this.get(\"target\");\r\n        if (gradientTarget) {\r\n            let bounds = gradientTarget.globalBounds();\r\n            const p0 = target.toLocal({ x: bounds.left, y: bounds.top });\r\n            const p1 = target.toLocal({ x: bounds.right, y: bounds.top });\r\n            const p2 = target.toLocal({ x: bounds.right, y: bounds.bottom });\r\n            const p3 = target.toLocal({ x: bounds.left, y: bounds.bottom });\r\n            return {\r\n                left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n                top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n                right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n                bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n            };\r\n        }\r\n        return target._display.getLocalBounds();\r\n    }\r\n}\r\nObject.defineProperty(Gradient, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Gradient\"\r\n});\r\nObject.defineProperty(Gradient, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Gradient.className])\r\n});\r\n//# sourceMappingURL=Gradient.js.map","import { Gradient } from \"./Gradient\";\r\nimport { Color } from \"../../util/Color\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\n/**\r\n * Linear gradient.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\r\nexport class LinearGradient extends Gradient {\r\n    /**\r\n     * @ignore\r\n     */\r\n    getFill(target) {\r\n        const rotation = this.get(\"rotation\", 0);\r\n        let bounds = this.getBounds(target);\r\n        let l = bounds.left || 0;\r\n        let r = bounds.right || 0;\r\n        let t = bounds.top || 0;\r\n        let b = bounds.bottom || 0;\r\n        let cos = $math.cos(rotation);\r\n        let sin = $math.sin(rotation);\r\n        let w = cos * (r - l);\r\n        let h = sin * (b - t);\r\n        let longer = Math.max(w, h);\r\n        const gradient = this._root._renderer.createLinearGradient(l, t, l + longer * cos, t + longer * sin);\r\n        const stops = this.get(\"stops\");\r\n        if (stops) {\r\n            let i = 0;\r\n            $array.each(stops, (stop) => {\r\n                let offset = stop.offset;\r\n                if (!$type.isNumber(offset)) {\r\n                    offset = i / (stops.length - 1);\r\n                }\r\n                let opacity = stop.opacity;\r\n                if (!$type.isNumber(opacity)) {\r\n                    opacity = 1;\r\n                }\r\n                let color = stop.color;\r\n                if (color) {\r\n                    const lighten = stop.lighten;\r\n                    if (lighten) {\r\n                        color = Color.lighten(color, lighten);\r\n                    }\r\n                    const brighten = stop.brighten;\r\n                    if (brighten) {\r\n                        color = Color.brighten(color, brighten);\r\n                    }\r\n                    gradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\r\n                }\r\n                i++;\r\n            });\r\n        }\r\n        return gradient;\r\n    }\r\n}\r\nObject.defineProperty(LinearGradient, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LinearGradient\"\r\n});\r\nObject.defineProperty(LinearGradient, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Gradient.classNames.concat([LinearGradient.className])\r\n});\r\n//# sourceMappingURL=LinearGradient.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            let month = date.getUTCMonth();\r\n            date.setUTCMonth(month + count);\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        //console.log(parsedDate)\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += tzoffset - timeZoneOffset;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += tzoffset - timeZoneOffset;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        let newOffset = date.getTimezoneOffset();\r\n        if (newOffset != timeZoneOffset) {\r\n            date.setTime(date.getTime() + (timeZoneOffset - newOffset) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map","import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            let sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                sprite.setRaw(\"position\", \"absolute\");\r\n                this.bulletsContainer.children.push(sprite);\r\n            }\r\n            bullet._index = index;\r\n            bullet.series = this;\r\n            dataItem.bullets.push(bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                let value = dataItem.get(key);\r\n                if (value != null) {\r\n                    count[key]++;\r\n                    sum[key] += value;\r\n                    absSum[key] += Math.abs(value);\r\n                    average[key] = sum[key] / count[key];\r\n                    if (low[key] > value || low[key] == null) {\r\n                        low[key] = value;\r\n                    }\r\n                    if (high[key] < value || high[key] == null) {\r\n                        high[key] = value;\r\n                    }\r\n                    close[key] = value;\r\n                    if (open[key] == null) {\r\n                        open[key] = value;\r\n                        previous[key] = value;\r\n                        if (baseValueSeries) {\r\n                            open[openKey] = baseValueSeries._getBase(openKey);\r\n                        }\r\n                    }\r\n                    if (startIndex === 0) {\r\n                        dataItem.setRaw((change), value - open[openKey]);\r\n                        dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                    }\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                    previous[key] = value;\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            if (this.bullets.length > 0) {\r\n                let count = this.dataItems.length;\r\n                let startIndex = this.startIndex();\r\n                let endIndex = this.endIndex();\r\n                if (endIndex < count) {\r\n                    endIndex++;\r\n                }\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                for (let i = 0; i < startIndex; i++) {\r\n                    this._hideBullets(this.dataItems[i]);\r\n                }\r\n                for (let i = startIndex; i < endIndex; i++) {\r\n                    this._positionBullets(this.dataItems[i]);\r\n                }\r\n                for (let i = endIndex; i < count; i++) {\r\n                    this._hideBullets(this.dataItems[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    promises.push(bullet.get(\"sprite\").show(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    promises.push(bullet.get(\"sprite\").hide(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n//# sourceMappingURL=Series.js.map","import { Series } from \"./Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\r\nexport class Legend extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of all [[Container]] elements for legend items.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"itemContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\r\n                themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\r\n                background: RoundedRectangle.new(this._root, {\r\n                    themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\r\n                    themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\r\n                })\r\n            }, [this.itemContainers.template]))\r\n        });\r\n        /**\r\n         * List of legend marker elements.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\r\n            }, [this.markers.template]))\r\n        });\r\n        /**\r\n         * List of legend label elements.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * List of legend value label elements.\r\n         *\r\n         * @default new ListTemplate<label>\r\n         */\r\n        Object.defineProperty(this, \"valueLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\r\n            }, [this.valueLabels.template]))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(this, \"markerRectangles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\r\n            }, [this.markerRectangles.template]))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\r\n        this.fields.push(\"name\", \"stroke\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeItemContainer(dataItem) {\r\n        const itemContainer = this.children.push(this.itemContainers.make());\r\n        itemContainer._setDataItem(dataItem);\r\n        this.itemContainers.push(itemContainer);\r\n        itemContainer.states.create(\"disabled\", {});\r\n        return itemContainer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarker() {\r\n        const marker = this.markers.make();\r\n        this.markers.push(marker);\r\n        marker.states.create(\"disabled\", {});\r\n        return marker;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel() {\r\n        const label = this.labels.make();\r\n        label.states.create(\"disabled\", {});\r\n        return label;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeValueLabel() {\r\n        const valueLabel = this.valueLabels.make();\r\n        valueLabel.states.create(\"disabled\", {});\r\n        return valueLabel;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarkerRectangle() {\r\n        const markerRectangle = this.markerRectangles.make();\r\n        markerRectangle.states.create(\"disabled\", {});\r\n        return markerRectangle;\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const itemContainer = this.makeItemContainer(dataItem);\r\n        const nameField = this.get(\"nameField\");\r\n        const fillField = this.get(\"fillField\");\r\n        const strokeField = this.get(\"strokeField\");\r\n        if (itemContainer) {\r\n            const clickTarget = this.get(\"clickTarget\", \"itemContainer\");\r\n            const item = dataItem.dataContext;\r\n            if (item && item.set) {\r\n                item.set(\"legendDataItem\", dataItem);\r\n            }\r\n            itemContainer._setDataItem(dataItem);\r\n            dataItem.set(\"itemContainer\", itemContainer);\r\n            const marker = this.makeMarker();\r\n            if (marker) {\r\n                itemContainer.children.push(marker);\r\n                marker._setDataItem(dataItem);\r\n                dataItem.set(\"marker\", marker);\r\n                const useDefaultMarker = this.get(\"useDefaultMarker\");\r\n                const markerRectangle = marker.children.push(this.makeMarkerRectangle());\r\n                let fill = dataItem.get(\"fill\");\r\n                let stroke = dataItem.get(\"stroke\");\r\n                dataItem.set(\"markerRectangle\", markerRectangle);\r\n                if (item && item.get) {\r\n                    fill = item.get(fillField, fill);\r\n                    stroke = item.get(strokeField, stroke);\r\n                }\r\n                if (!stroke) {\r\n                    stroke = fill;\r\n                }\r\n                if (!useDefaultMarker) {\r\n                    if (item && item.createLegendMarker) {\r\n                        item.createLegendMarker();\r\n                    }\r\n                }\r\n                else {\r\n                    if (item.on) {\r\n                        item.on(fillField, () => {\r\n                            markerRectangle.set(\"fill\", item.get(fillField));\r\n                        });\r\n                        item.on(strokeField, () => {\r\n                            markerRectangle.set(\"stroke\", item.get(strokeField));\r\n                        });\r\n                    }\r\n                }\r\n                markerRectangle.setAll({ fill, stroke });\r\n                // this solves if template field is set on slice\r\n                const component = item.component;\r\n                if (component && component.updateLegendMarker) {\r\n                    component.updateLegendMarker(item);\r\n                }\r\n            }\r\n            const label = this.makeLabel();\r\n            if (label) {\r\n                itemContainer.children.push(label);\r\n                label._setDataItem(dataItem);\r\n                dataItem.set(\"label\", label);\r\n                label.text.on(\"text\", () => {\r\n                    itemContainer.setRaw(\"ariaLabel\", label.text._getText() + (this.get(\"clickTarget\") !== \"none\" ? \"; \" + this._t(\"Press ENTER to toggle\") : \"\"));\r\n                    itemContainer.markDirtyAccessibility();\r\n                });\r\n                if (item && item.get) {\r\n                    dataItem.set(\"name\", item.get(nameField));\r\n                }\r\n                let name = dataItem.get(\"name\");\r\n                if (name) {\r\n                    label.set(\"text\", name);\r\n                }\r\n            }\r\n            const valueLabel = this.makeValueLabel();\r\n            if (valueLabel) {\r\n                itemContainer.children.push(valueLabel);\r\n                valueLabel._setDataItem(dataItem);\r\n                dataItem.set(\"valueLabel\", valueLabel);\r\n            }\r\n            if (item && item.show) {\r\n                item.on(\"visible\", (visible) => {\r\n                    itemContainer.set(\"disabled\", !visible);\r\n                });\r\n                if (!item.get(\"visible\")) {\r\n                    itemContainer.set(\"disabled\", true);\r\n                }\r\n                if (clickTarget != \"none\") {\r\n                    let clickContainer = itemContainer;\r\n                    if (clickTarget == \"marker\") {\r\n                        clickContainer = marker;\r\n                    }\r\n                    this._addClickEvents(clickContainer, item, dataItem);\r\n                }\r\n            }\r\n            // Sort children\r\n            this.children.values.sort((a, b) => {\r\n                const targetA = a.dataItem.dataContext;\r\n                const targetB = b.dataItem.dataContext;\r\n                if (targetA && targetB) {\r\n                    const indexA = this.data.indexOf(targetA);\r\n                    const indexB = this.data.indexOf(targetB);\r\n                    if (indexA > indexB) {\r\n                        return 1;\r\n                    }\r\n                    else if (indexA < indexB) {\r\n                        return -1;\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n            if (item && item.updateLegendValue) {\r\n                item.updateLegendValue();\r\n            }\r\n        }\r\n    }\r\n    _addClickEvents(container, item, dataItem) {\r\n        container.set(\"cursorOverStyle\", \"pointer\");\r\n        container.events.on(\"pointerover\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.hoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"pointerout\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.unhoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"click\", () => {\r\n            const labelText = dataItem.get(\"label\").text._getText();\r\n            if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\r\n                item.show();\r\n                container.set(\"disabled\", false);\r\n                this._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\r\n            }\r\n            else if (item.hide) {\r\n                item.hide();\r\n                container.set(\"disabled\", true);\r\n                this._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const dataContext = dataItem.dataContext;\r\n        if (dataContext && dataContext.get) {\r\n            const di = dataContext.get(\"legendDataItem\");\r\n            if (di == dataItem) {\r\n                dataContext.set(\"legendDataItem\", undefined);\r\n            }\r\n        }\r\n        let itemContainer = dataItem.get(\"itemContainer\");\r\n        if (itemContainer) {\r\n            this.itemContainers.removeValue(itemContainer);\r\n            itemContainer.dispose();\r\n        }\r\n        let marker = dataItem.get(\"marker\");\r\n        if (marker) {\r\n            this.markers.removeValue(marker);\r\n            marker.dispose();\r\n        }\r\n        let markerRectangle = dataItem.get(\"markerRectangle\");\r\n        if (markerRectangle) {\r\n            this.markerRectangles.removeValue(markerRectangle);\r\n            markerRectangle.dispose();\r\n        }\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let valueLabel = dataItem.get(\"valueLabel\");\r\n        if (valueLabel) {\r\n            this.valueLabels.removeValue(valueLabel);\r\n            valueLabel.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Legend, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Legend\"\r\n});\r\nObject.defineProperty(Legend, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Legend.className])\r\n});\r\n//# sourceMappingURL=Legend.js.map","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=Draw.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n//# sourceMappingURL=Line.js.map","import { Text } from \"./Text\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport class RadialText extends Text {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeRadialText(\"\", this.textStyle)\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._display.clear();\r\n        if (this.isDirty(\"textType\")) {\r\n            this._display.textType = this.get(\"textType\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"radius\")) {\r\n            this._display.radius = this.get(\"radius\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"startAngle\")) {\r\n            this._display.startAngle = (this.get(\"startAngle\", 0) + 90) * $math.RADIANS;\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"inside\")) {\r\n            this._display.inside = this.get(\"inside\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"orientation\")) {\r\n            this._display.orientation = this.get(\"orientation\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"kerning\")) {\r\n            this._display.kerning = this.get(\"kerning\");\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RadialText, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialText\"\r\n});\r\nObject.defineProperty(RadialText, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Text.classNames.concat([RadialText.className])\r\n});\r\n//# sourceMappingURL=RadialText.js.map","// import * as $object from \"../util/Object\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { Label } from \"./Label\";\r\nimport { RadialText } from \"./RadialText\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nexport class RadialLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_flipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._textKeys.push(\"textType\", \"kerning\");\r\n        super._afterNew();\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(RadialText.new(this._root, {}));\r\n    }\r\n    /**\r\n     * Returns base radius in pixels.\r\n     *\r\n     * @return Base radius\r\n     */\r\n    baseRadius() {\r\n        const radiusPrivate = this.getPrivate(\"radius\", 0);\r\n        const innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\r\n        const baseRadius = this.get(\"baseRadius\", 0);\r\n        return innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\r\n    }\r\n    /**\r\n     * Returns radius adjustment in pixels.\r\n     *\r\n     * @return Radius\r\n     */\r\n    radius() {\r\n        const inside = this.get(\"inside\", false);\r\n        return this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\r\n            const textType = this.get(\"textType\", \"adjusted\");\r\n            const inside = this.get(\"inside\", false);\r\n            const orientation = this.get(\"orientation\");\r\n            let labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\r\n            this._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\r\n            this._text.set(\"inside\", inside);\r\n            const sin = $math.sin(labelAngle);\r\n            const cos = $math.cos(labelAngle);\r\n            let baseRadius = this.baseRadius();\r\n            let radius = this.radius();\r\n            this._display.angle = 0;\r\n            if (textType == \"circular\") {\r\n                this.setAll({\r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                    paddingLeft: 0,\r\n                    paddingRight: 0\r\n                });\r\n                // Circular labels are handled and positioned differently\r\n                this._text.set(\"orientation\", orientation);\r\n                this._text.set(\"radius\", radius);\r\n            }\r\n            else {\r\n                if (baseRadius == 0) {\r\n                    labelAngle = 0;\r\n                    radius = 0;\r\n                }\r\n                // Positioning of radial/regular labels are teh same\r\n                let x = radius * cos;\r\n                let y = radius * sin;\r\n                if (textType == \"radial\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                    if ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\r\n                        this._display.angle = labelAngle; // + 90;\r\n                        this._flipped = false;\r\n                    }\r\n                    else {\r\n                        this._display.angle = labelAngle + 180;\r\n                        this._flipped = true;\r\n                    }\r\n                    this._dirty.rotation = false;\r\n                }\r\n                else if (textType == \"adjusted\") {\r\n                    this.setRaw(\"centerX\", p50);\r\n                    this.setRaw(\"centerY\", p50);\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n                else if (textType == \"regular\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const textType = this.get(\"textType\", \"regular\");\r\n        const inside = this.get(\"inside\", false);\r\n        let dx = 0;\r\n        let dy = 0;\r\n        let labelAngle = this.get(\"labelAngle\", 0);\r\n        let bounds = this.localBounds();\r\n        let w = bounds.right - bounds.left;\r\n        let h = bounds.bottom - bounds.top;\r\n        if (textType == \"radial\") {\r\n            if (this._flipped) {\r\n                let centerX = this.get(\"centerX\");\r\n                if (centerX instanceof Percent) {\r\n                    w = w * (1 - centerX.value * 2);\r\n                }\r\n                dx = w * $math.cos(labelAngle);\r\n                dy = w * $math.sin(labelAngle);\r\n            }\r\n        }\r\n        else if (!inside && textType == \"adjusted\") {\r\n            dx = w / 2 * $math.cos(labelAngle);\r\n            dy = h / 2 * $math.sin(labelAngle);\r\n        }\r\n        this.setRaw(\"dx\", dx);\r\n        this.setRaw(\"dy\", dy);\r\n        super._updatePosition();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n}\r\nObject.defineProperty(RadialLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialLabel\"\r\n});\r\nObject.defineProperty(RadialLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([RadialLabel.className])\r\n});\r\n//# sourceMappingURL=RadialLabel.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { arc } from \"d3-shape\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a slice shape.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Slice extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"iy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_generator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n    }\r\n    _getTooltipPoint() {\r\n        let tooltipX = this.get(\"tooltipX\");\r\n        let tooltipY = this.get(\"tooltipY\");\r\n        let x = 0;\r\n        let y = 0;\r\n        if ($type.isNumber(tooltipX)) {\r\n            x = tooltipX;\r\n        }\r\n        if ($type.isNumber(tooltipY)) {\r\n            y = tooltipY;\r\n        }\r\n        let radius = this.get(\"radius\", 0);\r\n        let innerRadius = this.get(\"innerRadius\", 0);\r\n        let dRadius = this.get(\"dRadius\", 0);\r\n        let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n        radius += dRadius;\r\n        innerRadius += dInnerRadius;\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (tooltipX instanceof Percent) {\r\n            x = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value);\r\n        }\r\n        if (tooltipY instanceof Percent) {\r\n            y = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value);\r\n        }\r\n        if (this.get(\"arc\") >= 360 && innerRadius == 0) {\r\n            x = 0;\r\n            y = 0;\r\n        }\r\n        return { x, y };\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            let startAngle = this.get(\"startAngle\", 0);\r\n            let arc = this.get(\"arc\", 0);\r\n            const generator = this._generator;\r\n            if (arc < 0) {\r\n                startAngle = startAngle + arc;\r\n                arc = arc * -1;\r\n            }\r\n            if (arc > 0.1) { // this fixes bug with full circle when arc is very small\r\n                generator.cornerRadius(this.get(\"cornerRadius\", 0));\r\n            }\r\n            generator.context(this._display);\r\n            let radius = this.get(\"radius\", 0);\r\n            let innerRadius = this.get(\"innerRadius\", 0);\r\n            let dRadius = this.get(\"dRadius\", 0);\r\n            let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n            radius += dRadius;\r\n            innerRadius += dInnerRadius;\r\n            if (innerRadius < 0) {\r\n                innerRadius = radius + innerRadius;\r\n            }\r\n            generator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\r\n            let middleAngle = startAngle + arc / 2;\r\n            this.ix = $math.cos(middleAngle);\r\n            this.iy = $math.sin(middleAngle);\r\n        }\r\n        if (this.isDirty(\"shiftRadius\")) {\r\n            const shiftRadius = this.get(\"shiftRadius\", 0);\r\n            this.setRaw(\"dx\", this.ix * shiftRadius);\r\n            this.setRaw(\"dy\", this.iy * shiftRadius);\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Slice, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Slice\"\r\n});\r\nObject.defineProperty(Slice, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Slice.className])\r\n});\r\n//# sourceMappingURL=Slice.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n//# sourceMappingURL=Chart.js.map","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n//# sourceMappingURL=SerialChart.js.map","import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n//# sourceMappingURL=Tick.js.map","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n//# sourceMappingURL=ColorSet.js.map","import { Theme } from \"../core/Theme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimatedTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        this.rule(\"Component\").setAll({\r\n            interpolationDuration: 600\r\n        });\r\n        this.rule(\"Hierarchy\").set(\"animationDuration\", 600);\r\n        this.rule(\"Scrollbar\").set(\"animationDuration\", 600);\r\n        this.rule(\"Tooltip\").set(\"animationDuration\", 300);\r\n        this.rule(\"MapChart\").set(\"animationDuration\", 1000);\r\n        this.rule(\"MapChart\").set(\"wheelDuration\", 300);\r\n        this.rule(\"Entity\").setAll({\r\n            stateAnimationDuration: 600\r\n        });\r\n        this.rule(\"Sprite\").states.create(\"default\", { stateAnimationDuration: 600 });\r\n        this.rule(\"Tooltip\", [\"axis\"]).setAll({\r\n            animationDuration: 200\r\n        });\r\n        this.rule(\"WordCloud\").set(\"animationDuration\", 500);\r\n        this.rule(\"Polygon\").set(\"animationDuration\", 600);\r\n        this.rule(\"ArcDiagram\").set(\"animationDuration\", 600);\r\n    }\r\n}\r\n//# sourceMappingURL=AnimatedTheme.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const language = this._root.language;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         */\r\n        r(\"XYChart\").setAll({\r\n            colors: ColorSet.new(this._root, {}),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 16,\r\n            paddingBottom: 16,\r\n            panX: false,\r\n            panY: false,\r\n            wheelStep: 0.25,\r\n            arrangeTooltips: true,\r\n            pinchZoomX: false,\r\n            pinchZoomY: false\r\n        });\r\n        r(\"XYSeries\").setAll({\r\n            legendLabelText: \"{name}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: XYChartScrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n            paddingBottom: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingRight: 0,\r\n            colors: ColorSet.new(this._root, {\r\n                saturation: 0\r\n            })\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.5\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        // Class: RoundedRectangle\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusBL: 0,\r\n            fillOpacity: 0,\r\n            focusable: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n            cornerRadiusBL: 40,\r\n            cornerRadiusBR: 40,\r\n            cornerRadiusTL: 40,\r\n            cornerRadiusTR: 40\r\n        });\r\n        r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true\r\n        });\r\n        r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true,\r\n            minGridDistance: 5\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5,\r\n            centerY: p100,\r\n            minPosition: 0.01,\r\n            maxPosition: 0.99,\r\n            fontSize: \"0.8em\"\r\n        });\r\n        r(\"AxisLabel\", [\"category\"]).setAll({\r\n            text: \"{category}\",\r\n            populateText: true\r\n        });\r\n        r(\"AxisLabel\", [\"x\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Cursor\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYCursor\").setAll({\r\n            behavior: \"none\",\r\n            layer: 30,\r\n            exportable: false,\r\n            snapToSeriesBy: \"xy\",\r\n            moveThreshold: 1\r\n        });\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.15,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Axes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Axis\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            minZoomCount: 1,\r\n            maxZoomCount: Infinity,\r\n            maxZoomFactor: 1000,\r\n            maxDeviation: 0.1,\r\n            snapTooltip: true,\r\n            tooltipLocation: 0.5,\r\n            panX: true,\r\n            panY: true,\r\n            zoomX: true,\r\n            zoomY: true,\r\n            fixAxisSize: true\r\n        });\r\n        r(\"AxisLabel\").setAll({\r\n            location: 0.5,\r\n            multiLocation: 0,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            paddingTop: 3,\r\n            paddingBottom: 3,\r\n            paddingLeft: 5,\r\n            paddingRight: 5\r\n        });\r\n        // The following is deprecated following text measuring updates in 5.0.5\r\n        // r(\"AxisLabel\", [\"y\"]).setAll({\r\n        // \ttextAlign: \"right\"\r\n        // });\r\n        // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n        // \ttextAlign: \"left\"\r\n        // });\r\n        r(\"Container\", [\"axis\", \"header\"]).setAll({\r\n            layer: 30\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n            crisp: true\r\n        });\r\n        {\r\n            const rule = r(\"AxisRenderer\");\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"AxisRendererX\").setAll({\r\n            minGridDistance: 120,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            width: p100\r\n        });\r\n        r(\"AxisRendererY\").setAll({\r\n            minGridDistance: 40,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            height: p100\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            rule.states.create(\"hover\", { fillOpacity: 0.1 });\r\n        }\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        {\r\n            const rule = r(\"Grid\");\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.15,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Grid\", [\"base\"]).setAll({\r\n            strokeOpacity: 0.3\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n            rule.setAll({\r\n                visible: false,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                fillOpacity: 0.05,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n            isMeasured: true\r\n        });\r\n        // hides all elements of series axis range\r\n        r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n            visible: false,\r\n            isMeasured: true\r\n        });\r\n        r(\"Grid\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        {\r\n            const rule = r(\"AxisTick\");\r\n            rule.setAll({\r\n                location: 0.5,\r\n                multiLocation: 0,\r\n                strokeOpacity: 1,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                visible: false\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"CategoryAxis\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            fillRule: (dataItem, index) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        axisFill.setPrivate(\"visible\", true);\r\n                    }\r\n                    else {\r\n                        axisFill.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const gridIntervals = [\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 5 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 50 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"millisecond\", count: 500 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 5 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"second\", count: 30 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 5 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"minute\", count: 15 },\r\n            { timeUnit: \"minute\", count: 30 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"hour\", count: 3 },\r\n            { timeUnit: \"hour\", count: 6 },\r\n            { timeUnit: \"hour\", count: 12 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"day\", count: 2 },\r\n            { timeUnit: \"day\", count: 3 },\r\n            { timeUnit: \"day\", count: 4 },\r\n            { timeUnit: \"day\", count: 5 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"month\", count: 2 },\r\n            { timeUnit: \"month\", count: 3 },\r\n            { timeUnit: \"month\", count: 6 },\r\n            { timeUnit: \"year\", count: 1 },\r\n            { timeUnit: \"year\", count: 2 },\r\n            { timeUnit: \"year\", count: 5 },\r\n            { timeUnit: \"year\", count: 10 },\r\n            { timeUnit: \"year\", count: 50 },\r\n            { timeUnit: \"year\", count: 100 },\r\n            { timeUnit: \"year\", count: 200 },\r\n            { timeUnit: \"year\", count: 500 },\r\n            { timeUnit: \"year\", count: 1000 },\r\n            { timeUnit: \"year\", count: 2000 },\r\n            { timeUnit: \"year\", count: 5000 },\r\n            { timeUnit: \"year\", count: 10000 },\r\n            { timeUnit: \"year\", count: 100000 }\r\n        ];\r\n        const dateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_hour\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const periodChangeDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_day\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const tooltipDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n            \"second\": language.translate(\"_date_second_full\"),\r\n            \"minute\": language.translate(\"_date_minute_full\"),\r\n            \"hour\": language.translate(\"_date_hour_full\"),\r\n            \"day\": language.translate(\"_date_day_full\"),\r\n            \"week\": language.translate(\"_date_week_full\"),\r\n            \"month\": language.translate(\"_date_month_full\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        r(\"CategoryDateAxis\").setAll({\r\n            markUnitChange: true,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n        });\r\n        r(\"DateAxis\").setAll({\r\n            maxZoomFactor: null,\r\n            strictMinMax: true,\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            markUnitChange: true,\r\n            groupData: false,\r\n            groupCount: 500,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n            tooltipDateFormats: tooltipDateFormats,\r\n            groupIntervals: [\r\n                { timeUnit: \"millisecond\", count: 1 },\r\n                { timeUnit: \"millisecond\", count: 10 },\r\n                { timeUnit: \"millisecond\", count: 100 },\r\n                { timeUnit: \"second\", count: 1 },\r\n                { timeUnit: \"second\", count: 10 },\r\n                { timeUnit: \"minute\", count: 1 },\r\n                { timeUnit: \"minute\", count: 10 },\r\n                { timeUnit: \"hour\", count: 1 },\r\n                { timeUnit: \"day\", count: 1 },\r\n                { timeUnit: \"week\", count: 1 },\r\n                { timeUnit: \"month\", count: 1 },\r\n                { timeUnit: \"year\", count: 1 }\r\n            ],\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const endValue = dataItem.get(\"endValue\");\r\n                    const intervalDuration = axis.intervalDuration();\r\n                    const baseInterval = axis.getPrivate(\"baseInterval\");\r\n                    const gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n                    let min = axis.getPrivate(\"min\", 0);\r\n                    min = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                    if (value != null && endValue != null) {\r\n                        const val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n                        if (val == Math.round(val)) {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"GaplessDateAxis\").setAll({\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const index = dataItem.get(\"index\");\r\n                    let visible = false;\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        visible = true;\r\n                    }\r\n                    axisFill.setPrivate(\"visible\", visible);\r\n                }\r\n            }\r\n        });\r\n        r(\"ValueAxis\").setAll({\r\n            baseValue: 0,\r\n            logarithmic: false,\r\n            strictMinMax: false,\r\n            autoZoom: true,\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const step = axis.getPrivate(\"step\");\r\n                    if ($type.isNumber(value) && $type.isNumber(step)) {\r\n                        if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"DurationAxis\").setAll({\r\n            baseUnit: \"second\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Series\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYSeries\").setAll({\r\n            maskBullets: true,\r\n            stackToNegative: true,\r\n            locationX: 0.5,\r\n            locationY: 0.5,\r\n            snapTooltip: false,\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\",\r\n            seriesTooltipTarget: \"series\"\r\n        });\r\n        r(\"BaseColumnSeries\").setAll({\r\n            adjustBulletPosition: true\r\n        });\r\n        r(\"ColumnSeries\").setAll({\r\n            clustered: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(70),\r\n            height: percent(70),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"LineSeries\").setAll({\r\n            connect: true,\r\n            autoGapCount: 1.1,\r\n            stackToNegative: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n            position: \"absolute\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n            visible: false,\r\n            fillOpacity: 0,\r\n            position: \"absolute\",\r\n            strokeWidth: 0,\r\n            strokeOpacity: 0,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, h / 2);\r\n                    display.lineTo(w, h / 2);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(w, 0);\r\n                    display.lineTo(w, h);\r\n                    display.lineTo(0, h);\r\n                    display.lineTo(0, 0);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"SmoothedXYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedXLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"Candlestick\").setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(50),\r\n            height: percent(50),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"OHLC\").setAll({\r\n            width: percent(80),\r\n            height: percent(80)\r\n        });\r\n        r(\"CandlestickSeries\").setAll({\r\n            lowValueXGrouped: \"low\",\r\n            lowValueYGrouped: \"low\",\r\n            highValueXGrouped: \"high\",\r\n            highValueYGrouped: \"high\",\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\"\r\n        });\r\n        // These rules can be used for regular columns, too\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // Hollow\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=XYChartDefaultTheme.js.map","import { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $order from \"../../core/util/Order\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\r\nexport class XYChart extends SerialChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of horizontal axes.\r\n         */\r\n        Object.defineProperty(this, \"xAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A list of vertical axes.\r\n         */\r\n        Object.defineProperty(this, \"yAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A [[Container]] located on top of the chart, used to store top horizontal\r\n         * axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle the chart, used to store vertical axes\r\n         * and plot area container.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"yAxesAndPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on bottom of the chart, used to store bottom\r\n         * horizontal axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bottomAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on left of the chart, used to store left-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"leftAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store actual\r\n         * plots (series).\r\n         *\r\n         * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n         * you need to modify background or outline for chart's plot area, you can\r\n         * use `plotContainer.get(\"background\")` for that.*\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] used for any elements that need to be displayed over\r\n         * regular `plotContainer`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis background grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A [[Container]] located on right of the chart, used to store right-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"rightAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis headers are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"axisHeadersContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A button that is shown when chart is not fully zoomed out.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(this, \"zoomOutButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.topPlotContainer.children.push(Button.new(this._root, {\r\n                themeTags: [\"zoom\"],\r\n                icon: Graphics.new(this._root, {\r\n                    themeTags: [\"button\", \"icon\"]\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_otherCharts\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downStartX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStartY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this._disposers.push(this.xAxes);\r\n        this._disposers.push(this.yAxes);\r\n        const root = this._root;\r\n        let verticalLayout = this._root.verticalLayout;\r\n        const zoomOutButton = this.zoomOutButton;\r\n        zoomOutButton.events.on(\"click\", () => {\r\n            this.zoomOut();\r\n        });\r\n        zoomOutButton.set(\"opacity\", 0);\r\n        zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\r\n        this.chartContainer.set(\"layout\", verticalLayout);\r\n        const plotContainer = this.plotContainer;\r\n        plotContainer.children.push(this.seriesContainer);\r\n        this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\r\n        this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\r\n        plotContainer.children.push(this.topGridContainer);\r\n        plotContainer.children.push(this.bulletsContainer);\r\n        // Setting trasnparent background so that full body of the plot container\r\n        // is interactive\r\n        plotContainer.set(\"interactive\", true);\r\n        plotContainer.set(\"interactiveChildren\", false);\r\n        plotContainer.set(\"background\", Rectangle.new(root, {\r\n            themeTags: [\"xy\", \"background\"],\r\n            fill: Color.fromHex(0x000000),\r\n            fillOpacity: 0\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handlePlotDown(event.originalEvent);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handlePlotUp(event.originalEvent);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            this._handlePlotMove(event.originalEvent);\r\n        }));\r\n        this._maskGrid();\r\n        this._setUpTouch();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n            this._setUpTouch();\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        if (!this.plotContainer._display.cancelTouch) {\r\n            this.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n        }\r\n    }\r\n    _maskGrid() {\r\n        this.gridContainer.set(\"maskContent\", true);\r\n        this.topGridContainer.set(\"maskContent\", true);\r\n    }\r\n    _removeSeries(series) {\r\n        series._unstack();\r\n        if (series._posXDp) {\r\n            series._posXDp.dispose();\r\n        }\r\n        if (series._posYDp) {\r\n            series._posYDp.dispose();\r\n        }\r\n        series.set(\"baseAxis\", undefined);\r\n        const xAxis = series.get(\"xAxis\");\r\n        if (xAxis) {\r\n            $array.remove(xAxis.series, series);\r\n            xAxis.markDirtyExtremes();\r\n        }\r\n        const yAxis = series.get(\"yAxis\");\r\n        if (yAxis) {\r\n            $array.remove(yAxis.series, series);\r\n            yAxis.markDirtyExtremes();\r\n        }\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (snapToSeries) {\r\n                $array.remove(snapToSeries, series);\r\n            }\r\n        }\r\n        super._removeSeries(series);\r\n    }\r\n    /**\r\n     * This method is invoked when mouse wheel is used over chart's plot\r\n     * container, and handles zooming/pan.\r\n     *\r\n     * You can invoke this method manually, if you need to mimic chart's wheel\r\n     * behavior over other elements of the chart.\r\n     */\r\n    handleWheel(event) {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        const wheelEvent = event.originalEvent;\r\n        // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n        // some page element is over the chart.\r\n        if ($utils.isLocalEvent(wheelEvent, this)) {\r\n            wheelEvent.preventDefault();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }));\r\n        const wheelStep = this.get(\"wheelStep\", 0.2);\r\n        const shiftY = wheelEvent.deltaY / 100;\r\n        const shiftX = wheelEvent.deltaX / 100;\r\n        const wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\r\n        const wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\r\n        if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftX * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftY * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftX * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftY * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start - delta;\r\n                    let newEnd = end - delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _handleSetWheel() {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        if (wheelX !== \"none\" || wheelY !== \"none\") {\r\n            this._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\r\n                this.handleWheel(event);\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _getWheelSign(axis) {\r\n        let sign = 1;\r\n        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n            sign = -1;\r\n        }\r\n        return sign;\r\n    }\r\n    _fixWheel(start, end) {\r\n        const diff = end - start;\r\n        if (start < 0) {\r\n            start = 0;\r\n            end = start + diff;\r\n        }\r\n        if (end > 1) {\r\n            end = 1;\r\n            start = end - diff;\r\n        }\r\n        return [start, end];\r\n    }\r\n    _handlePlotDown(event) {\r\n        if (event.button == 2) {\r\n            return;\r\n        }\r\n        const plotContainer = this.plotContainer;\r\n        let local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const touchEvent = event;\r\n            const pointerId = touchEvent.pointerId;\r\n            if (pointerId) {\r\n                if ($object.keys(plotContainer._downPoints).length > 0) {\r\n                    const xAxis = this.xAxes.getIndex(0);\r\n                    const yAxis = this.yAxes.getIndex(0);\r\n                    if (xAxis) {\r\n                        this._downStartX = xAxis.get(\"start\", 0);\r\n                        this._downEndX = xAxis.get(\"end\", 1);\r\n                    }\r\n                    if (yAxis) {\r\n                        this._downStartY = yAxis.get(\"start\", 0);\r\n                        this._downEndY = yAxis.get(\"end\", 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.get(\"panX\") || this.get(\"panY\")) {\r\n            if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\r\n                //this._downPoint = local;\r\n                this._downPoint = { x: event.clientX, y: event.clientY };\r\n                const panX = this.get(\"panX\");\r\n                const panY = this.get(\"panY\");\r\n                if (panX) {\r\n                    this.xAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                if (panY) {\r\n                    this.yAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                const eventType = \"panstarted\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleWheelAnimation(animation) {\r\n        if (animation) {\r\n            animation.events.on(\"stopped\", () => {\r\n                this._dispatchWheelAnimation();\r\n            });\r\n        }\r\n        else {\r\n            this._dispatchWheelAnimation();\r\n        }\r\n    }\r\n    _dispatchWheelAnimation() {\r\n        const eventType = \"wheelended\";\r\n        if (this.events.isEnabled(eventType)) {\r\n            this.events.dispatch(eventType, { type: eventType, target: this });\r\n        }\r\n    }\r\n    _handlePlotUp(event) {\r\n        const downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                let local = this.plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n                if (local.x == downPoint.x && local.y == downPoint.y) {\r\n                    const eventType = \"pancancelled\";\r\n                    if (this.events.isEnabled(eventType)) {\r\n                        this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\r\n                    }\r\n                }\r\n                const eventType = \"panended\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\r\n                }\r\n            }\r\n        }\r\n        // TODO: handle multitouch\r\n        this._downPoint = undefined;\r\n        this.xAxes.each((xAxis) => {\r\n            xAxis._isPanning = false;\r\n        });\r\n        this.yAxes.each((yAxis) => {\r\n            yAxis._isPanning = false;\r\n        });\r\n    }\r\n    _handlePlotMove(event) {\r\n        const plotContainer = this.plotContainer;\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const touchEvent = event;\r\n            const pointerId = touchEvent.pointerId;\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n                if ($object.keys(plotContainer._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        let downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            downPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\r\n            let local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n            const panX = this.get(\"panX\");\r\n            const panY = this.get(\"panY\");\r\n            if (panX) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.disableType(\"rangechanged\");\r\n                }\r\n                this.xAxes.each((axis) => {\r\n                    if (axis.get(\"panX\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaX *= -1;\r\n                        }\r\n                        let start = panStart + deltaX;\r\n                        let end = panEnd + deltaX;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n            if (panY) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.disableType(\"rangechanged\");\r\n                }\r\n                this.yAxes.each((axis) => {\r\n                    if (axis.get(\"panY\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaY *= -1;\r\n                        }\r\n                        let start = panStart - deltaY;\r\n                        let end = panEnd - deltaY;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handlePinch() {\r\n        const plotContainer = this.plotContainer;\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(plotContainer._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            const w = plotContainer.width();\r\n            const h = plotContainer.height();\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                movePoint0 = plotContainer.toLocal(movePoint0);\r\n                movePoint1 = plotContainer.toLocal(movePoint1);\r\n                downPoint0 = plotContainer.toLocal(downPoint0);\r\n                downPoint1 = plotContainer.toLocal(downPoint1);\r\n                if (this.get(\"pinchZoomX\")) {\r\n                    const downStartX = this._downStartX;\r\n                    const downEndX = this._downEndX;\r\n                    if (downStartX != null && downEndX != null) {\r\n                        if (downPoint0.x > downPoint1.x) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\r\n                        let downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\r\n                        let movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\r\n                        let movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartX * d + downPos0 - movePos0 * d;\r\n                        let e = downEndX * d + downPos1 - movePos1 * d;\r\n                        this.xAxes.each((xAxis) => {\r\n                            let sa = xAxis.fixPosition(s);\r\n                            let ea = xAxis.fixPosition(e);\r\n                            xAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n                if (this.get(\"pinchZoomY\")) {\r\n                    const downStartY = this._downStartY;\r\n                    const downEndY = this._downEndY;\r\n                    if (downStartY != null && downEndY != null) {\r\n                        if (downPoint0.y < downPoint1.y) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\r\n                        let downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\r\n                        let movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\r\n                        let movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartY * d + downPos0 - movePos0 * d;\r\n                        let e = downEndY * d + downPos1 - movePos1 * d;\r\n                        this.yAxes.each((yAxis) => {\r\n                            let sa = yAxis.fixPosition(s);\r\n                            let ea = yAxis.fixPosition(e);\r\n                            yAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleCursorPosition() {\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const cursorPoint = cursor.getPrivate(\"point\");\r\n            let snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (cursor._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            if (snapToSeries && cursorPoint) {\r\n                const snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\r\n                const dataItems = [];\r\n                $array.each(snapToSeries, (series) => {\r\n                    if (!series.isHidden() && !series.isHiding()) {\r\n                        if (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\r\n                            const startIndex = series.startIndex();\r\n                            const endIndex = series.endIndex();\r\n                            for (let i = startIndex; i < endIndex; i++) {\r\n                                const dataItem = series.dataItems[i];\r\n                                if (dataItem && !dataItem.isHidden()) {\r\n                                    dataItems.push(dataItem);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const tooltipDataItem = series.get(\"tooltipDataItem\");\r\n                            if (tooltipDataItem) {\r\n                                dataItems.push(tooltipDataItem);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                let minDistance = Infinity;\r\n                let closestItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    const point = dataItem.get(\"point\");\r\n                    if (point) {\r\n                        let distance = 0;\r\n                        if (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\r\n                            distance = Math.abs(cursorPoint.x - point.x);\r\n                        }\r\n                        else if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\r\n                            distance = Math.abs(cursorPoint.y - point.y);\r\n                        }\r\n                        else {\r\n                            distance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\r\n                        }\r\n                        if (distance < minDistance) {\r\n                            minDistance = distance;\r\n                            closestItem = dataItem;\r\n                        }\r\n                    }\r\n                });\r\n                $array.each(snapToSeries, (series) => {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                });\r\n                if (closestItem) {\r\n                    let series = closestItem.component;\r\n                    series.showDataItemTooltip(closestItem);\r\n                    const point = closestItem.get(\"point\");\r\n                    if (point) {\r\n                        // removing x and y to solve #72225\r\n                        cursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateCursor() {\r\n        let cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.updateCursor();\r\n        }\r\n    }\r\n    _addCursor(cursor) {\r\n        this.plotContainer.children.push(cursor);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this.series.each((series) => {\r\n            this._colorize(series);\r\n        });\r\n        if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        if (this.isDirty(\"cursor\")) {\r\n            const previous = this._prevSettings.cursor;\r\n            const cursor = this.get(\"cursor\");\r\n            if (cursor !== previous) {\r\n                this._disposeProperty(\"cursor\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (cursor) {\r\n                    cursor._setChart(this);\r\n                    this._addCursor(cursor);\r\n                    this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\r\n                        this._handleCursorSelectEnd();\r\n                    }));\r\n                }\r\n                //this.setRaw(\"cursor\", cursor) // to reset previous value\r\n                this._prevSettings.cursor = cursor;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarX\")) {\r\n            const previous = this._prevSettings.scrollbarX;\r\n            const scrollbarX = this.get(\"scrollbarX\");\r\n            if (scrollbarX !== previous) {\r\n                this._disposeProperty(\"scrollbarX\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarX) {\r\n                    if (!scrollbarX.parent) {\r\n                        this.topAxesContainer.children.push(scrollbarX);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarX.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.xAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarX = scrollbarX;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarY\")) {\r\n            const previous = this._prevSettings.scrollbarY;\r\n            const scrollbarY = this.get(\"scrollbarY\");\r\n            if (scrollbarY !== previous) {\r\n                this._disposeProperty(\"scrollbarY\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarY) {\r\n                    if (!scrollbarY.parent) {\r\n                        this.rightAxesContainer.children.push(scrollbarY);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarY.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.yAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarY = scrollbarY;\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        const xAxis = series.get(\"xAxis\");\r\n        const yAxis = series.get(\"yAxis\");\r\n        $array.move(xAxis.series, series);\r\n        $array.move(yAxis.series, series);\r\n        series._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        series._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        if (!series.get(\"baseAxis\")) {\r\n            if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\r\n                series.set(\"baseAxis\", yAxis);\r\n            }\r\n            else {\r\n                series.set(\"baseAxis\", xAxis);\r\n            }\r\n        }\r\n        if (series.get(\"stacked\")) {\r\n            series._markDirtyKey(\"stacked\");\r\n            $array.each(series.dataItems, (dataItem) => {\r\n                dataItem.set(\"stackToItemY\", undefined);\r\n                dataItem.set(\"stackToItemX\", undefined);\r\n            });\r\n        }\r\n        series._markDirtyAxes();\r\n        yAxis.markDirtyExtremes();\r\n        xAxis.markDirtyExtremes();\r\n        this._colorize(series);\r\n    }\r\n    _colorize(series) {\r\n        const colorSet = this.get(\"colors\");\r\n        if (colorSet) {\r\n            if (series.get(\"fill\") == null) {\r\n                const color = colorSet.next();\r\n                series._setSoft(\"stroke\", color);\r\n                series._setSoft(\"fill\", color);\r\n            }\r\n        }\r\n    }\r\n    _handleCursorSelectEnd() {\r\n        const cursor = this.get(\"cursor\");\r\n        const behavior = cursor.get(\"behavior\");\r\n        const downPositionX = cursor.getPrivate(\"downPositionX\", 0);\r\n        const downPositionY = cursor.getPrivate(\"downPositionY\", 0);\r\n        const positionX = cursor.getPrivate(\"positionX\", 0.5);\r\n        const positionY = cursor.getPrivate(\"positionY\", 0.5);\r\n        this.xAxes.each((axis) => {\r\n            if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionX);\r\n                let position1 = axis.toAxisPosition(positionX);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionY);\r\n                let position1 = axis.toAxisPosition(positionY);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n    }\r\n    _handleScrollbar(axes, start, end, priority) {\r\n        axes.each((axis) => {\r\n            let axisStart = axis.fixPosition(start);\r\n            let axisEnd = axis.fixPosition(end);\r\n            let zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\r\n            const updateScrollbar = \"updateScrollbar\";\r\n            axis.setPrivateRaw(updateScrollbar, false);\r\n            if (zoomAnimation) {\r\n                zoomAnimation.events.on(\"stopped\", () => {\r\n                    axis.setPrivateRaw(updateScrollbar, true);\r\n                });\r\n            }\r\n            else {\r\n                axis.setPrivateRaw(updateScrollbar, true);\r\n            }\r\n        });\r\n    }\r\n    _processAxis(axes, container) {\r\n        return axes.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axis) => {\r\n                    this._removeAxis(axis);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                container.children.push(change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                container.children.setIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                container.children.insertIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxis(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                container.children.moveValue(change.value, change.newIndex);\r\n                change.value.processChart(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _removeAxis(axis) {\r\n        if (!axis.isDisposed()) {\r\n            const axisParent = axis.parent;\r\n            if (axisParent) {\r\n                axisParent.children.removeValue(axis);\r\n            }\r\n            const gridContainer = axis.gridContainer;\r\n            const gridParent = gridContainer.parent;\r\n            if (gridParent) {\r\n                gridParent.children.removeValue(gridContainer);\r\n            }\r\n            const topGridContainer = axis.topGridContainer;\r\n            const topGridParent = topGridContainer.parent;\r\n            if (topGridParent) {\r\n                topGridParent.children.removeValue(topGridContainer);\r\n            }\r\n        }\r\n    }\r\n    _updateChartLayout() {\r\n        const left = this.leftAxesContainer.width();\r\n        const right = this.rightAxesContainer.width();\r\n        const bottomAxesContainer = this.bottomAxesContainer;\r\n        bottomAxesContainer.set(\"paddingLeft\", left);\r\n        bottomAxesContainer.set(\"paddingRight\", right);\r\n        const topAxesContainer = this.topAxesContainer;\r\n        topAxesContainer.set(\"paddingLeft\", left);\r\n        topAxesContainer.set(\"paddingRight\", right);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis(axis) {\r\n        var cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            this.addDisposer(axis.on(\"start\", () => {\r\n                this._updateCursor();\r\n            }));\r\n            this.addDisposer(axis.on(\"end\", () => {\r\n                this._updateCursor();\r\n            }));\r\n        }\r\n    }\r\n    _handleAxisSelection(axis, force) {\r\n        let start = axis.fixPosition(axis.get(\"start\", 0));\r\n        let end = axis.fixPosition(axis.get(\"end\", 1));\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n        }\r\n        if (this.xAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarX.setRaw(\"start\", start);\r\n                    scrollbarX.setRaw(\"end\", end);\r\n                    scrollbarX.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        else if (this.yAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarY.setRaw(\"start\", start);\r\n                    scrollbarY.setRaw(\"end\", end);\r\n                    scrollbarY.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _handleZoomOut() {\r\n        let zoomOutButton = this.zoomOutButton;\r\n        if (zoomOutButton && zoomOutButton.parent) {\r\n            let visible = false;\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            if (visible) {\r\n                if (zoomOutButton.isHidden()) {\r\n                    zoomOutButton.show();\r\n                }\r\n            }\r\n            else {\r\n                zoomOutButton.hide();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if point is within plot area.\r\n     *\r\n     * @param   point  Reference point\r\n     * @return         Is within plot area?\r\n     */\r\n    inPlot(point) {\r\n        const plotContainer = this.plotContainer;\r\n        const otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\r\n        const global = plotContainer.toGlobal(point);\r\n        if (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\r\n            return true;\r\n        }\r\n        if (otherCharts) {\r\n            for (let i = otherCharts.length - 1; i >= 0; i--) {\r\n                const chart = otherCharts[i];\r\n                if (chart != this) {\r\n                    const chartPlotContainer = chart.plotContainer;\r\n                    const documentPoint = this._root.rootPointToDocument(global);\r\n                    const chartRoot = chart._root.documentPointToRoot(documentPoint);\r\n                    const local = chartPlotContainer.toLocal(chartRoot);\r\n                    if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    arrangeTooltips() {\r\n        const plotContainer = this.plotContainer;\r\n        const w = plotContainer.width();\r\n        const h = plotContainer.height();\r\n        const hh = this.height();\r\n        let plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\r\n        let plotB = plotContainer._display.toGlobal({ x: w, y: h });\r\n        const tooltips = [];\r\n        let sum = 0;\r\n        let minDistance = Infinity;\r\n        let movePoint = this._movePoint;\r\n        let maxTooltipDistance = this.get(\"maxTooltipDistance\");\r\n        let maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\r\n        let closest;\r\n        let closestPoint;\r\n        if ($type.isNumber(maxTooltipDistance)) {\r\n            this.series.each((series) => {\r\n                if (!series.isHidden()) {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            let distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\r\n                            if (maxTooltipDistanceBy == \"x\") {\r\n                                distance = Math.abs(movePoint.x - point.x);\r\n                            }\r\n                            else if (maxTooltipDistanceBy == \"y\") {\r\n                                distance = Math.abs(movePoint.y - point.y);\r\n                            }\r\n                            if (distance < minDistance) {\r\n                                minDistance = distance;\r\n                                closest = series;\r\n                                closestPoint = point;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        const tooltipSeries = [];\r\n        this.series.each((series) => {\r\n            const tooltip = series.get(\"tooltip\");\r\n            if (tooltip) {\r\n                let hidden = false;\r\n                let point = tooltip.get(\"pointTo\");\r\n                if (point) {\r\n                    if (maxTooltipDistance >= 0) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            if (series != closest) {\r\n                                let distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\r\n                                if (maxTooltipDistanceBy == \"x\") {\r\n                                    distance = Math.abs(closestPoint.x - point.x);\r\n                                }\r\n                                else if (maxTooltipDistanceBy == \"y\") {\r\n                                    distance = Math.abs(closestPoint.y - point.y);\r\n                                }\r\n                                if (distance > maxTooltipDistance) {\r\n                                    hidden = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (maxTooltipDistance == -1) {\r\n                        if (series != closest) {\r\n                            hidden = true;\r\n                        }\r\n                    }\r\n                    if (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\r\n                        hidden = true;\r\n                    }\r\n                    else {\r\n                        if (!hidden) {\r\n                            sum += point.y;\r\n                        }\r\n                    }\r\n                    if (hidden || series.isHidden() || series.isHiding()) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show();\r\n                        tooltips.push(tooltip);\r\n                        tooltipSeries.push(series);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.setPrivate(\"tooltipSeries\", tooltipSeries);\r\n        if (this.get(\"arrangeTooltips\")) {\r\n            const tooltipContainer = this._root.tooltipContainer;\r\n            const count = tooltips.length;\r\n            const average = sum / count;\r\n            if (average > h / 2 + plotT.y) {\r\n                tooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\").y, a.get(\"pointTo\").y));\r\n                let prevY = plotB.y;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    tooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    prevY = Math.min(prevY - height, tooltip._fy - height);\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                });\r\n                if (prevY < 0) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = prevY;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - prevY;\r\n                            let bottom = bounds.bottom - prevY;\r\n                            if (top < prevBottom) {\r\n                                top = prevBottom;\r\n                                bottom = top + tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                tooltips.reverse();\r\n                tooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y));\r\n                let prevY = 0;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) });\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                    prevY = Math.max(prevY + height, tooltip._fy + height);\r\n                });\r\n                if (prevY > hh) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = hh;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - (hh - prevY);\r\n                            let bottom = bounds.bottom - (hh - prevY);\r\n                            if (bottom > prevBottom) {\r\n                                bottom = prevBottom;\r\n                                top = bottom - tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _tooltipToLocal(point) {\r\n        return this.plotContainer.toLocal(point);\r\n    }\r\n    /**\r\n     * Fully zooms out the chart.\r\n     */\r\n    zoomOut() {\r\n        this.xAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(XYChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYChart\"\r\n});\r\nObject.defineProperty(XYChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([XYChart.className])\r\n});\r\n//# sourceMappingURL=XYChart.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\n/**\r\n * Creates an axis grid line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\r\n * @important\r\n */\r\nexport class Grid extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Grid, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Grid\"\r\n});\r\nObject.defineProperty(Grid, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Grid.className])\r\n});\r\n//# sourceMappingURL=Grid.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Grid } from \"./axes/Grid\";\r\n//import { Animations } from \"../core/util/Animation\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\r\nexport class XYCursor extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"x\"]\r\n            }))\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"y\"]\r\n            }))\r\n        });\r\n        /**\r\n         * An element that represents current selection.\r\n         *\r\n         * @default Graphics.new()\r\n         */\r\n        Object.defineProperty(this, \"selection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Graphics.new(this._root, {\r\n                themeTags: [\"selection\", \"cursor\"], layer: 30\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_tooltipX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_tooltipY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart cursor is attached to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\r\n        super._afterNew();\r\n        this.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\r\n        this.states.create(\"hidden\", { visible: true, opacity: 0 });\r\n        this._drawLines();\r\n        this.setPrivateRaw(\"visible\", false);\r\n        this._disposers.push(this.setTimeout(() => {\r\n            this.setPrivate(\"visible\", true);\r\n        }, 500));\r\n        this._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\r\n            this._handleXLine();\r\n        }));\r\n        this._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\r\n            this._handleYLine();\r\n        }));\r\n        this._disposers.push(this.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\r\n        this._disposers.push(this.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\r\n        this._disposers.push(this.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\r\n        this._disposers.push(this.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\r\n        if ($utils.supports(\"keyboardevents\")) {\r\n            this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                this._handleLineMove(ev.keyCode);\r\n            }));\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\r\n        }\r\n    }\r\n    _handleXLine() {\r\n        let x = this.lineX.x();\r\n        let visible = true;\r\n        if (x < 0 || x > this.width()) {\r\n            visible = false;\r\n        }\r\n        this.lineX.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleYLine() {\r\n        let y = this.lineY.y();\r\n        let visible = true;\r\n        if (y < 0 || y > this.height()) {\r\n            visible = false;\r\n        }\r\n        this.lineY.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleLineMove(keyCode) {\r\n        let dir = \"\";\r\n        let position = 0;\r\n        let increment = 0.1;\r\n        const chart = this.chart;\r\n        if (this._root.focused(this.lineX)) {\r\n            if (chart && chart.xAxes.length) {\r\n                increment = chart.xAxes.getIndex(0).getCellWidthPosition();\r\n            }\r\n            position = this.getPrivate(\"positionX\", 0);\r\n            dir = \"positionX\";\r\n            if (keyCode == 37) {\r\n                position -= increment;\r\n            }\r\n            else if (keyCode == 39) {\r\n                position += increment;\r\n            }\r\n        }\r\n        else if (this._root.focused(this.lineY)) {\r\n            if (chart && chart.yAxes.length) {\r\n                increment = chart.yAxes.getIndex(0).getCellWidthPosition();\r\n            }\r\n            position = this.getPrivate(\"positionY\", 0);\r\n            dir = \"positionY\";\r\n            if (keyCode == 38) {\r\n                position -= increment;\r\n            }\r\n            else if (keyCode == 40) {\r\n                position += increment;\r\n            }\r\n        }\r\n        if (position < 0) {\r\n            position = 0;\r\n        }\r\n        else if (position > 1) {\r\n            position = 1;\r\n        }\r\n        if (dir != \"\") {\r\n            this.set(dir, position);\r\n        }\r\n    }\r\n    _handleLineFocus(_line) {\r\n        this.setAll({\r\n            positionX: this.getPrivate(\"positionX\"),\r\n            positionY: this.getPrivate(\"positionY\"),\r\n            alwaysShow: true\r\n        });\r\n    }\r\n    _handleLineBlur(_line) {\r\n        this.setAll({\r\n            positionX: undefined,\r\n            positionY: undefined,\r\n            alwaysShow: false\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"xAxis\")) {\r\n            this._tooltipX = false;\r\n            const xAxis = this.get(\"xAxis\");\r\n            if (xAxis) {\r\n                const tooltip = xAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipX = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateXLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"yAxis\")) {\r\n            this._tooltipY = false;\r\n            const yAxis = this.get(\"yAxis\");\r\n            if (yAxis) {\r\n                const tooltip = yAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipY = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateYLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleSyncWith() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const syncWith = this.get(\"syncWith\");\r\n            const otherCharts = [];\r\n            if (syncWith) {\r\n                $array.each(syncWith, (cursor) => {\r\n                    const chart = cursor.chart;\r\n                    if (chart) {\r\n                        otherCharts.push(chart);\r\n                    }\r\n                });\r\n            }\r\n            chart._otherCharts = otherCharts;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._handleSyncWith();\r\n        if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\r\n            const positionX = this.get(\"positionX\");\r\n            const positionY = this.get(\"positionY\");\r\n            if (positionX == null && positionY == null) {\r\n                this.hide(0);\r\n            }\r\n            else {\r\n                this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n                this.handleMove();\r\n            }\r\n        }\r\n    }\r\n    _updateXLine(tooltip) {\r\n        let x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\r\n        if (this._toX != x) {\r\n            this.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toX = x;\r\n        }\r\n    }\r\n    _updateYLine(tooltip) {\r\n        let y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\r\n        if (this._toY != y) {\r\n            this.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toY = y;\r\n        }\r\n    }\r\n    _drawLines() {\r\n        this.lineX.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, this.height());\r\n        });\r\n        this.lineY.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(this.width(), 0);\r\n        });\r\n    }\r\n    updateCursor() {\r\n        if (this.get(\"alwaysShow\")) {\r\n            this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n        }\r\n        this.handleMove();\r\n    }\r\n    _setChart(chart) {\r\n        this.chart = chart;\r\n        this._handleSyncWith();\r\n        const plotContainer = chart.plotContainer;\r\n        this.events.on(\"boundschanged\", () => {\r\n            this._disposers.push(this.setTimeout(() => {\r\n                this.updateCursor();\r\n            }, 50));\r\n        });\r\n        //this._display.interactive = true;\r\n        if ($utils.supports(\"touchevents\")) {\r\n            this._disposers.push(plotContainer.events.on(\"click\", (event) => {\r\n                if ($utils.isTouchEvent(event.originalEvent)) {\r\n                    this._handleMove(event.originalEvent);\r\n                }\r\n            }));\r\n            this._setUpTouch();\r\n        }\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handleCursorDown(event.originalEvent);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handleCursorUp(event.originalEvent);\r\n            if (!event.native && !this.isHidden()) {\r\n                this._handleMove(event.originalEvent);\r\n            }\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            if (!this.get(\"syncWith\")) {\r\n                if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\r\n                    // Ignore mouse movement if it originates on outside element and\r\n                    // we're not dragging.\r\n                    return;\r\n                }\r\n            }\r\n            this._handleMove(event.originalEvent);\r\n        }));\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this.selection);\r\n        }\r\n    }\r\n    _inPlot(point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.inPlot(point);\r\n        }\r\n        return false;\r\n    }\r\n    _handleCursorDown(event) {\r\n        if (event.button == 2) {\r\n            return;\r\n        }\r\n        const rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n        let local = this._display.toLocal(rootPoint);\r\n        const chart = this.chart;\r\n        this.selection.set(\"draw\", () => { });\r\n        if (chart && this._inPlot(local)) {\r\n            this._downPoint = local;\r\n            if (this.get(\"behavior\") != \"none\") {\r\n                this.selection.show();\r\n                const type = \"selectstarted\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n            let positionX = this._getPosition(local).x;\r\n            let positionY = this._getPosition(local).y;\r\n            this.setPrivate(\"downPositionX\", positionX);\r\n            this.setPrivate(\"downPositionY\", positionY);\r\n        }\r\n    }\r\n    _handleCursorUp(event) {\r\n        // TODO: handle multitouch\r\n        if (this._downPoint) {\r\n            const behavior = this.get(\"behavior\", \"none\");\r\n            if (behavior != \"none\") {\r\n                if (behavior.charAt(0) === \"z\") {\r\n                    this.selection.hide();\r\n                }\r\n                const rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n                let local = this._display.toLocal(rootPoint);\r\n                const downPoint = this._downPoint;\r\n                const moveThreshold = this.get(\"moveThreshold\", 1);\r\n                if (local && downPoint) {\r\n                    let dispatch = false;\r\n                    if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.x - downPoint.x) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.y - downPoint.y) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (dispatch) {\r\n                        const type = \"selectended\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._downPoint = undefined;\r\n    }\r\n    _handleMove(event) {\r\n        if (this.getPrivate(\"visible\")) {\r\n            const chart = this.chart;\r\n            if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\r\n                this.set(\"forceHidden\", true);\r\n                return;\r\n            }\r\n            else {\r\n                this.set(\"forceHidden\", false);\r\n            }\r\n            // TODO: handle multitouch\r\n            const rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n            const lastPoint = this._lastPoint;\r\n            if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\r\n                return;\r\n            }\r\n            this._lastPoint = rootPoint;\r\n            this.setPrivate(\"lastPoint\", rootPoint);\r\n            this.handleMove({ x: rootPoint.x, y: rootPoint.y });\r\n        }\r\n    }\r\n    _getPosition(point) {\r\n        return { x: point.x / this.width(), y: point.y / this.height() };\r\n    }\r\n    /**\r\n     * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n     *\r\n     * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n     * the `\"cursormoved\"` event.\r\n     *\r\n     * @param  point      X/Y to move cursor to\r\n     * @param  skipEvent  Do not fire \"cursormoved\" event\r\n     */\r\n    handleMove(point, skipEvent) {\r\n        if (!point) {\r\n            point = this._movePoint;\r\n        }\r\n        const alwaysShow = this.get(\"alwaysShow\");\r\n        if (!point) {\r\n            this.hide(0);\r\n            return;\r\n        }\r\n        this._movePoint = point;\r\n        let local = this._display.toLocal(point);\r\n        let chart = this.chart;\r\n        if (chart && (this._inPlot(local) || this._downPoint)) {\r\n            chart._movePoint = point;\r\n            if (this.isHidden()) {\r\n                this.show();\r\n                const behavior = this.get(\"behavior\", \"\");\r\n                if (behavior.charAt(0) == \"z\") {\r\n                    this.selection.set(\"draw\", () => { });\r\n                }\r\n            }\r\n            let x = local.x;\r\n            let y = local.y;\r\n            let xyPos = this._getPosition(local);\r\n            this.setPrivate(\"point\", local);\r\n            let snapToSeries = this.get(\"snapToSeries\");\r\n            if (this._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            let userPositionX = this.get(\"positionX\");\r\n            let positionX = xyPos.x;\r\n            if ($type.isNumber(userPositionX)) {\r\n                positionX = userPositionX;\r\n            }\r\n            let userPositionY = this.get(\"positionY\");\r\n            let positionY = xyPos.y;\r\n            if ($type.isNumber(userPositionY)) {\r\n                positionY = userPositionY;\r\n            }\r\n            this.setPrivate(\"positionX\", positionX);\r\n            this.setPrivate(\"positionY\", positionY);\r\n            const xy = this._getPoint(positionX, positionY);\r\n            x = xy.x;\r\n            y = xy.y;\r\n            chart.xAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionX, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            chart.yAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionY, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            if (!skipEvent) {\r\n                chart._handleCursorPosition();\r\n                const type = \"cursormoved\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n            this._updateLines(x, y);\r\n            chart.arrangeTooltips();\r\n        }\r\n        else if (!this._downPoint) {\r\n            if (!alwaysShow) {\r\n                this.hide(0);\r\n                const type = \"cursorhidden\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n        }\r\n        if (this._downPoint && this.get(\"behavior\") != \"none\") {\r\n            this._updateSelection(local);\r\n        }\r\n    }\r\n    _getPoint(positionX, positionY) {\r\n        return { x: this.width() * positionX, y: this.height() * positionY };\r\n    }\r\n    _updateLines(x, y) {\r\n        if (!this._tooltipX) {\r\n            this.lineX.set(\"x\", x);\r\n        }\r\n        if (!this._tooltipY) {\r\n            this.lineY.set(\"y\", y);\r\n        }\r\n        this._drawLines();\r\n    }\r\n    _updateSelection(point) {\r\n        const selection = this.selection;\r\n        const behavior = this.get(\"behavior\");\r\n        const w = this.width();\r\n        const h = this.height();\r\n        if (point.x < 0) {\r\n            point.x = 0;\r\n        }\r\n        if (point.x > w) {\r\n            point.x = w;\r\n        }\r\n        if (point.y < 0) {\r\n            point.y = 0;\r\n        }\r\n        if (point.y > h) {\r\n            point.y = h;\r\n        }\r\n        selection.set(\"draw\", (display) => {\r\n            const downPoint = this._downPoint;\r\n            if (downPoint) {\r\n                if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\r\n                    display.moveTo(downPoint.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, point.y);\r\n                    display.lineTo(point.x, point.y);\r\n                    display.lineTo(point.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, downPoint.y);\r\n                }\r\n                else if (behavior === \"zoomX\" || behavior === \"selectX\") {\r\n                    display.moveTo(downPoint.x, 0);\r\n                    display.lineTo(downPoint.x, h);\r\n                    display.lineTo(point.x, h);\r\n                    display.lineTo(point.x, 0);\r\n                    display.lineTo(downPoint.x, 0);\r\n                }\r\n                else if (behavior === \"zoomY\" || behavior === \"selectY\") {\r\n                    display.moveTo(0, downPoint.y);\r\n                    display.lineTo(w, downPoint.y);\r\n                    display.lineTo(w, point.y);\r\n                    display.lineTo(0, point.y);\r\n                    display.lineTo(0, downPoint.y);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _onHide() {\r\n        if (this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.series.each((series) => {\r\n                    series.handleCursorHide();\r\n                });\r\n            }\r\n        }\r\n        super._onHide();\r\n    }\r\n    _onShow() {\r\n        if (!this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n            }\r\n        }\r\n        super._onShow();\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this.selection.dispose();\r\n    }\r\n}\r\nObject.defineProperty(XYCursor, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYCursor\"\r\n});\r\nObject.defineProperty(XYCursor, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([XYCursor.className])\r\n});\r\n//# sourceMappingURL=XYCursor.js.map","import { __awaiter } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Series } from \"../../../core/render/Series\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * @ignore\r\n */\r\nfunction min(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction max(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\r\nexport class XYSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_xField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_axesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_stackDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataSets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_mainContainerMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * A [[Container]] that us used to put series' elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"mainContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A list of axis ranges that affect the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_skipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_couldStackTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_reallyStackedTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_stackedSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_showBullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueX\",\r\n                \"openValueX\",\r\n                \"lowValueX\",\r\n                \"highValueX\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueY\",\r\n                \"openValueY\",\r\n                \"lowValueY\",\r\n                \"highValueY\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for full min/max\r\n        Object.defineProperty(this, \"_valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for selection (uses working)\r\n        Object.defineProperty(this, \"__valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"__valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_emptyDataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new DataItem(this, undefined, {})\r\n        });\r\n        Object.defineProperty(this, \"_dataSetId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posXDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posYDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\r\n        this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\r\n        this._setRawDefault(\"vcx\", 1);\r\n        this._setRawDefault(\"vcy\", 1);\r\n        // this can't go to themes, as data might be parsed before theme\r\n        this._setRawDefault(\"valueXShow\", \"valueXWorking\");\r\n        this._setRawDefault(\"valueYShow\", \"valueYWorking\");\r\n        this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\r\n        this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\r\n        this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\r\n        this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\r\n        this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\r\n        this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\r\n        this._setRawDefault(\"lowValueXGrouped\", \"low\");\r\n        this._setRawDefault(\"lowValueYGrouped\", \"low\");\r\n        this._setRawDefault(\"highValueXGrouped\", \"high\");\r\n        this._setRawDefault(\"highValueYGrouped\", \"high\");\r\n        super._afterNew();\r\n        this.set(\"maskContent\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axisRange) => {\r\n                    this._removeAxisRange(axisRange);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxisRange(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        this.states.create(\"hidden\", { opacity: 1, visible: false });\r\n        this._makeFieldNames();\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        const container = Container.new(this._root, {});\r\n        axisRange.container = container;\r\n        this.children.push(container);\r\n        axisRange.series = this;\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        axisDataItem.setRaw(\"isRange\", true);\r\n        const axis = axisDataItem.component;\r\n        if (axis) {\r\n            axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\r\n            const bullet = axisDataItem.get(\"bullet\");\r\n            if (bullet) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            }\r\n            const axisFill = axisDataItem.get(\"axisFill\");\r\n            if (axisFill) {\r\n                container.set(\"mask\", axisFill);\r\n            }\r\n            axis._seriesAxisRanges.push(axisDataItem);\r\n        }\r\n    }\r\n    _removeAxisRange(axisRange) {\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        const axis = axisDataItem.component;\r\n        axis.disposeDataItem(axisDataItem);\r\n        $array.remove(axis._seriesAxisRanges, axisDataItem);\r\n        const container = axisRange.container;\r\n        if (container) {\r\n            container.dispose();\r\n        }\r\n    }\r\n    _updateFields() {\r\n        super._updateFields();\r\n        this._valueXFields = [];\r\n        this._valueYFields = [];\r\n        this._valueXShowFields = [];\r\n        this._valueYShowFields = [];\r\n        this.__valueXShowFields = [];\r\n        this.__valueYShowFields = [];\r\n        if (this.valueXFields) {\r\n            $array.each(this.valueXFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueXFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueXShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueXShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueXShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.valueYFields) {\r\n            $array.each(this.valueYFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueYFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueYShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueYShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueYShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n        $array.removeFirst(this.get(\"xAxis\").series, this);\r\n        $array.removeFirst(this.get(\"yAxis\").series, this);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _min(key, value) {\r\n        let newValue = min(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _max(key, value) {\r\n        let newValue = max(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (!xAxis.inited || !yAxis.inited) {\r\n            return false;\r\n        }\r\n        const minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n        if (minBulletDistance > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let count = endIndex - startIndex;\r\n            if (xAxis == baseAxis) {\r\n                if (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (yAxis == baseAxis) {\r\n                if (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _makeFieldNames() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const xName = xAxis.getPrivate(\"name\");\r\n        const xCapName = $utils.capitalizeFirst(xName);\r\n        const yName = yAxis.getPrivate(\"name\");\r\n        const yCapName = $utils.capitalizeFirst(yName);\r\n        const xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const open = \"open\";\r\n        const low = \"low\";\r\n        const high = \"high\";\r\n        const show = \"Show\";\r\n        if (xAxis.className === \"ValueAxis\") {\r\n            this._xField = this.get((xName + xLetter + show));\r\n            this._xOpenField = this.get((open + xCapName + xLetter + show));\r\n            this._xLowField = this.get((low + xCapName + xLetter + show));\r\n            this._xHighField = this.get((high + xCapName + xLetter + show));\r\n        }\r\n        else {\r\n            this._xField = (xName + xLetter);\r\n            this._xOpenField = (open + xCapName + xLetter);\r\n            this._xLowField = (low + xCapName + xLetter);\r\n            this._xHighField = (high + xCapName + xLetter);\r\n        }\r\n        if (yAxis.className === \"ValueAxis\") {\r\n            this._yField = this.get((yName + yLetter + show));\r\n            this._yOpenField = this.get((open + yCapName + yLetter + show));\r\n            this._yLowField = this.get((low + yCapName + yLetter + show));\r\n            this._yHighField = this.get((high + yCapName + yLetter + show));\r\n        }\r\n        else {\r\n            this._yField = (yName + yLetter);\r\n            this._yOpenField = (open + yCapName + yLetter);\r\n            this._yLowField = (low + yCapName + yLetter);\r\n            this._yHighField = (high + yCapName + yLetter);\r\n        }\r\n    }\r\n    _fixVC() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const hiddenState = this.states.lookup(\"hidden\");\r\n        const sequencedInterpolation = this.get(\"sequencedInterpolation\");\r\n        if (hiddenState) {\r\n            let value = 0;\r\n            if (sequencedInterpolation) {\r\n                value = 0.999999999999; // makes animate, good for stacked\r\n            }\r\n            if (xAxis === baseAxis) {\r\n                hiddenState.set(\"vcy\", value);\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n            else {\r\n                hiddenState.set(\"vcy\", value);\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n        }\r\n    }\r\n    _handleMaskBullets() {\r\n        if (this.isDirty(\"maskBullets\")) {\r\n            this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\r\n        }\r\n    }\r\n    _fixPosition() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\r\n        this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\r\n        this.bulletsContainer.set(\"y\", this.y());\r\n        this.bulletsContainer.set(\"x\", this.x());\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\r\n            this._updateFields();\r\n            this._makeFieldNames();\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        this.set(\"width\", this.get(\"xAxis\").width());\r\n        this.set(\"height\", this.get(\"yAxis\").height());\r\n        this._handleMaskBullets();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const tooltipPositionX = this.get(\"tooltipPositionX\");\r\n        let tooltipFieldX;\r\n        switch (tooltipPositionX) {\r\n            case \"open\":\r\n                tooltipFieldX = this._xOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldX = this._xLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldX = this._xHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldX = this._xField;\r\n        }\r\n        this._tooltipFieldX = tooltipFieldX;\r\n        const tooltipPositionY = this.get(\"tooltipPositionY\");\r\n        let tooltipFieldY;\r\n        switch (tooltipPositionY) {\r\n            case \"open\":\r\n                tooltipFieldY = this._yOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldY = this._yLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldY = this._yHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldY = this._yField;\r\n        }\r\n        this._tooltipFieldY = tooltipFieldY;\r\n        if (this.isDirty(\"baseAxis\")) {\r\n            this._fixVC();\r\n        }\r\n        this._fixPosition();\r\n        const stacked = this.get(\"stacked\");\r\n        if (this.isDirty(\"stacked\")) {\r\n            if (stacked) {\r\n                if (this._valuesDirty && !this._dataProcessed) {\r\n                }\r\n                else {\r\n                    this._stack();\r\n                }\r\n            }\r\n            else {\r\n                this._unstack();\r\n            }\r\n        }\r\n        if (this._valuesDirty && !this._dataProcessed) {\r\n            this._dataProcessed = true;\r\n            if (stacked) {\r\n                this._stack();\r\n            }\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                $array.each(this._valueXShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedXValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minX\", value);\r\n                        this._max(\"maxX\", value);\r\n                    }\r\n                });\r\n                $array.each(this._valueYShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedYValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minY\", value);\r\n                        this._max(\"maxY\", value);\r\n                    }\r\n                });\r\n                xAxis.processSeriesDataItem(dataItem, this._valueXFields);\r\n                yAxis.processSeriesDataItem(dataItem, this._valueYFields);\r\n            });\r\n            xAxis._seriesValuesDirty = true;\r\n            yAxis._seriesValuesDirty = true;\r\n            if (!this.get(\"ignoreMinMax\")) {\r\n                if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\r\n                    xAxis.markDirtyExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\r\n                    yAxis.markDirtyExtremes();\r\n                }\r\n            }\r\n            this._markStakedDirtyStack();\r\n            //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\r\n            if (!this.get(\"tooltipDataItem\")) {\r\n                this.updateLegendValue(undefined);\r\n            }\r\n        }\r\n        if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\r\n            this._markStakedDirtyStack();\r\n        }\r\n        if (!this._dataGrouped) {\r\n            xAxis._groupSeriesData(this);\r\n            yAxis._groupSeriesData(this);\r\n            this._dataGrouped = true;\r\n        }\r\n        if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n            if (minBulletDistance > 0 && baseAxis) {\r\n                if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\r\n                    this._showBullets = true;\r\n                }\r\n                else {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\r\n                this._selectionProcessed = true;\r\n                const vcx = this.get(\"vcx\", 1);\r\n                const vcy = this.get(\"vcy\", 1);\r\n                const stacked = this.get(\"stacked\", false);\r\n                const outOfSelection = this.getPrivate(\"outOfSelection\");\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    yAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinY\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxY\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    xAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinX\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxX\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    if (this.get(\"valueYShow\") !== \"valueYWorking\") {\r\n                        const selectionMinY = this.getPrivate(\"selectionMinY\");\r\n                        if (selectionMinY != null) {\r\n                            this.setPrivateRaw(\"minY\", selectionMinY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxY = this.getPrivate(\"selectionMaxY\");\r\n                        if (selectionMaxY != null) {\r\n                            this.setPrivateRaw(\"maxY\", selectionMaxY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    if (this.get(\"valueXShow\") !== \"valueXWorking\") {\r\n                        const selectionMinX = this.getPrivate(\"selectionMinX\");\r\n                        if (selectionMinX != null) {\r\n                            this.setPrivateRaw(\"minX\", selectionMinX);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxX = this.getPrivate(\"selectionMaxX\");\r\n                        if (selectionMaxX != null) {\r\n                            this.setPrivateRaw(\"maxX\", selectionMaxX);\r\n                            xAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                // this.updateLegendValue(undefined); flickers while panning\r\n            }\r\n        }\r\n    }\r\n    _makeRangeMask() {\r\n        if (this.axisRanges.length > 0) {\r\n            let mainContainerMask = this._mainContainerMask;\r\n            if (mainContainerMask == null) {\r\n                mainContainerMask = this.children.push(Graphics.new(this._root, {}));\r\n                this._mainContainerMask = mainContainerMask;\r\n                mainContainerMask.set(\"draw\", (display, target) => {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        const w = this._root.container.width();\r\n                        const h = this._root.container.height();\r\n                        display.moveTo(-w, -h);\r\n                        display.lineTo(-w, h * 2);\r\n                        display.lineTo(w * 2, h * 2);\r\n                        display.lineTo(w * 2, -h);\r\n                        display.lineTo(-w, -h);\r\n                        this.axisRanges.each((axisRange) => {\r\n                            const fill = axisRange.axisDataItem.get(\"axisFill\");\r\n                            if (parent) {\r\n                                if (fill) {\r\n                                    let draw = fill.get(\"draw\");\r\n                                    if (draw) {\r\n                                        draw(display, target);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    this.mainContainer._display.mask = mainContainerMask._display;\r\n                });\r\n            }\r\n            mainContainerMask.markDirty();\r\n            mainContainerMask._markDirtyKey(\"fill\");\r\n        }\r\n        else {\r\n            this.mainContainer._display.mask = null;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        // save for performance\r\n        this._x = this.x();\r\n        this._y = this.y();\r\n        this._makeRangeMask();\r\n    }\r\n    _stack() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const seriesIndex = chart.series.indexOf(this);\r\n            this._couldStackTo = [];\r\n            if (seriesIndex > 0) {\r\n                let series;\r\n                for (let i = seriesIndex - 1; i >= 0; i--) {\r\n                    series = chart.series.getIndex(i);\r\n                    if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\r\n                        this._couldStackTo.push(series);\r\n                        if (!series.get(\"stacked\")) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._stackDataItems();\r\n        }\r\n    }\r\n    _unstack() {\r\n        $object.each(this._reallyStackedTo, (_key, value) => {\r\n            delete (value._stackedSeries[this.uid]);\r\n        });\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            dataItem.setRaw(\"stackToItemY\", undefined);\r\n            dataItem.setRaw(\"stackToItemX\", undefined);\r\n        });\r\n    }\r\n    _stackDataItems() {\r\n        // this works only with the same number of data @todo: search by date/category?\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        let field;\r\n        let stackToItemKey;\r\n        if (baseAxis === xAxis) {\r\n            field = \"valueY\";\r\n            stackToItemKey = \"stackToItemY\";\r\n        }\r\n        else if (baseAxis === yAxis) {\r\n            field = \"valueX\";\r\n            stackToItemKey = \"stackToItemX\";\r\n        }\r\n        let len = this._couldStackTo.length;\r\n        let index = 0;\r\n        const stackToNegative = this.get(\"stackToNegative\");\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            for (let s = 0; s < len; s++) {\r\n                let stackToSeries = this._couldStackTo[s];\r\n                let stackToItem = stackToSeries.dataItems[index];\r\n                let value = dataItem.get(field);\r\n                if (stackToItem) {\r\n                    let stackValue = stackToItem.get(field);\r\n                    if (stackToNegative) {\r\n                        if ($type.isNumber(value)) {\r\n                            if ($type.isNumber(stackValue)) {\r\n                                if (value >= 0 && stackValue >= 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                                if (value < 0 && stackValue < 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($type.isNumber(value) && $type.isNumber(stackValue)) {\r\n                            dataItem.setRaw(stackToItemKey, stackToItem);\r\n                            this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                            stackToSeries._stackedSeries[this.uid] = this;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            index++;\r\n        });\r\n    }\r\n    processXSelectionDataItem(dataItem, vcx, stacked) {\r\n        $array.each(this.__valueXShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedXValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinX\", value);\r\n                this._max(\"selectionMaxX\", value * vcx);\r\n            }\r\n        });\r\n    }\r\n    processYSelectionDataItem(dataItem, vcy, stacked) {\r\n        $array.each(this.__valueYShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedYValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinY\", value);\r\n                this._max(\"selectionMaxY\", value * vcy);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        this.updateLegendMarker();\r\n    }\r\n    _markDirtyAxes() {\r\n        this._axesDirty = true;\r\n        this.markDirty();\r\n    }\r\n    _markDataSetDirty() {\r\n        this._afterDataChange();\r\n        this._valuesDirty = true;\r\n        this._dataProcessed = false;\r\n        this._aggregatesCalculated = false;\r\n        this.markDirty();\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._axesDirty = false;\r\n        this._selectionProcessed = false;\r\n        this._stackDirty = false;\r\n        this._dataProcessed = false;\r\n    }\r\n    _positionBullet(bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            let dataItem = sprite.dataItem;\r\n            let locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            let locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            let xAxis = this.get(\"xAxis\");\r\n            let yAxis = this.get(\"yAxis\");\r\n            const positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\r\n            const positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1));\r\n            let point = this.getPoint(positionX, positionY);\r\n            let left = dataItem.get(\"left\", point.x);\r\n            let right = dataItem.get(\"right\", point.x);\r\n            let top = dataItem.get(\"top\", point.y);\r\n            let bottom = dataItem.get(\"bottom\", point.y);\r\n            if (this._shouldShowBullet(positionX, positionY)) {\r\n                if (!bullet.getPrivate(\"hidden\")) {\r\n                    sprite.setPrivate(\"visible\", true);\r\n                }\r\n                else {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n                let w = right - left;\r\n                let h = bottom - top;\r\n                if (sprite.isType(\"Label\")) {\r\n                    sprite.setPrivate(\"maxWidth\", Math.abs(w));\r\n                    sprite.setPrivate(\"maxHeight\", Math.abs(h));\r\n                }\r\n                let x = left + w * locationX;\r\n                let y = bottom - h * locationY;\r\n                sprite.set(\"x\", x);\r\n                sprite.set(\"y\", y);\r\n            }\r\n            else {\r\n                sprite.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n    }\r\n    _shouldShowBullet(_positionX, _positionY) {\r\n        return this._showBullets;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setDataSet(id) {\r\n        if (this._dataSets[id]) {\r\n            this._handleDataSetChange();\r\n            this._dataItems = this._dataSets[id];\r\n            this._markDataSetDirty();\r\n            this._dataSetId = id;\r\n            const type = \"datasetchanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this, id: id });\r\n            }\r\n        }\r\n    }\r\n    _handleDataSetChange() {\r\n        if (this.bullets.length > 0) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let bullets = dataItem.bullets;\r\n                if (bullets) {\r\n                    $array.each(bullets, (bullet) => {\r\n                        if (bullet) {\r\n                            let sprite = bullet.get(\"sprite\");\r\n                            if (sprite) {\r\n                                sprite.setPrivate(\"visible\", false);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        this._selectionProcessed = false; // for totals to be calculated\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration).then(() => {\r\n                this._isShowing = false;\r\n                let xAxis = this.get(\"xAxis\");\r\n                let yAxis = this.get(\"yAxis\");\r\n                let baseAxis = this.get(\"baseAxis\");\r\n                if (yAxis !== baseAxis) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (xAxis !== baseAxis) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n            }));\r\n            promises.push(this.bulletsContainer.show(duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration).then(() => {\r\n                this._isHiding = false;\r\n            }));\r\n            promises.push(this.bulletsContainer.hide(duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            $array.each(this._valueFields, (key) => {\r\n                promises.push(dataItem.animate({ key: key + \"Working\", to: dataItem.get(key), duration: duration, easing: easing }).waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const stacked = this.get(\"stacked\");\r\n            if (baseAxis === xAxis || !baseAxis) {\r\n                $array.each(this._valueYFields, (key) => {\r\n                    let min = yAxis.getPrivate(\"min\");\r\n                    let baseValue = yAxis.baseValue();\r\n                    if ($type.isNumber(min) && min > baseValue) {\r\n                        baseValue = min;\r\n                    }\r\n                    if (stacked) {\r\n                        baseValue = 0;\r\n                    }\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            if (baseAxis === yAxis || !baseAxis) {\r\n                let min = xAxis.getPrivate(\"min\");\r\n                let baseValue = xAxis.baseValue();\r\n                if ($type.isNumber(min) && min > baseValue) {\r\n                    baseValue = min;\r\n                }\r\n                if (stacked) {\r\n                    baseValue = 0;\r\n                }\r\n                $array.each(this._valueXFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _markDirtyStack() {\r\n        this._stackDirty = true;\r\n        this.markDirty();\r\n        this._markStakedDirtyStack();\r\n    }\r\n    _markStakedDirtyStack() {\r\n        const stackedSeries = this._stackedSeries;\r\n        if (stackedSeries) {\r\n            $object.each(stackedSeries, (_key, value) => {\r\n                if (!value._stackDirty) {\r\n                    value._markDirtyStack();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._skipped) {\r\n            this._markDirtyAxes();\r\n            this._skipped = false;\r\n        }\r\n    }\r\n    /**\r\n     * Shows a tooltip for specific data item.\r\n     *\r\n     * @param  dataItem  Data item\r\n     */\r\n    showDataItemTooltip(dataItem) {\r\n        this.updateLegendMarker(dataItem);\r\n        this.updateLegendValue(dataItem);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            if (!this.isHidden()) {\r\n                tooltip._setDataItem(dataItem);\r\n                if (dataItem) {\r\n                    let locationX = this.get(\"locationX\", 0);\r\n                    let locationY = this.get(\"locationY\", 1);\r\n                    let itemLocationX = dataItem.get(\"locationX\", locationX);\r\n                    let itemLocationY = dataItem.get(\"locationY\", locationY);\r\n                    const xAxis = this.get(\"xAxis\");\r\n                    const yAxis = this.get(\"yAxis\");\r\n                    const vcx = this.get(\"vcx\", 1);\r\n                    const vcy = this.get(\"vcy\", 1);\r\n                    const xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\r\n                    const yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\r\n                    const point = this.getPoint(xPos, yPos);\r\n                    let show = true;\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (dataItem.get(field) == null) {\r\n                            show = false;\r\n                        }\r\n                    });\r\n                    if (show) {\r\n                        const chart = this.chart;\r\n                        if (chart && chart.inPlot(point)) {\r\n                            tooltip.label.text.markDirtyText();\r\n                            tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\r\n                            tooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\r\n                        }\r\n                        else {\r\n                            tooltip._setDataItem(undefined);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.hideTooltip();\r\n            }\r\n        }\r\n    }\r\n    hideTooltip() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.set(\"tooltipTarget\", this);\r\n        }\r\n        return super.hideTooltip();\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets && bullets.length > 0) {\r\n                const bullet = bullets[0];\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    return sprite;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const label = legendDataItem.get(\"label\");\r\n            if (label) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\r\n                }\r\n                else {\r\n                    label._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\r\n                }\r\n                label.set(\"text\", txt);\r\n            }\r\n            const valueLabel = legendDataItem.get(\"valueLabel\");\r\n            if (valueLabel) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                else {\r\n                    valueLabel._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                valueLabel.set(\"text\", txt);\r\n            }\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        let text = \"X: {\" + this._xField;\r\n        if (this.get(\"xAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}; Y: {\" + this._yField;\r\n        if (this.get(\"yAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}\";\r\n        return text;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getPoint(positionX, positionY) {\r\n        let x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\r\n        let y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\r\n        // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\r\n        let max = 999999999;\r\n        if (y < -max) {\r\n            y = -max;\r\n        }\r\n        if (y > max) {\r\n            y = max;\r\n        }\r\n        if (x < -max) {\r\n            x = -max;\r\n        }\r\n        if (x > max) {\r\n            x = max;\r\n        }\r\n        return { x: x, y: y };\r\n    }\r\n    _shouldInclude(_position) {\r\n        return true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        this.hideTooltip();\r\n        this.updateLegendValue(undefined);\r\n        this.updateLegendMarker(undefined);\r\n    }\r\n    _afterDataChange() {\r\n        super._afterDataChange();\r\n        this.get(\"xAxis\")._markDirtyKey(\"start\");\r\n        this.get(\"yAxis\")._markDirtyKey(\"start\");\r\n        this.resetExtremes();\r\n    }\r\n    // todo description\r\n    resetExtremes() {\r\n        this.setPrivate(\"selectionMinX\", undefined);\r\n        this.setPrivate(\"selectionMaxX\", undefined);\r\n        this.setPrivate(\"selectionMinY\", undefined);\r\n        this.setPrivate(\"selectionMaxY\", undefined);\r\n        this.setPrivate(\"minX\", undefined);\r\n        this.setPrivate(\"minY\", undefined);\r\n        this.setPrivate(\"maxX\", undefined);\r\n        this.setPrivate(\"maxY\", undefined);\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push({\r\n            axisDataItem: axisDataItem\r\n        });\r\n    }\r\n    /**\r\n     * A list of series's main (ungrouped) data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get mainDataItems() {\r\n        return this._mainDataItems;\r\n    }\r\n}\r\nObject.defineProperty(XYSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYSeries\"\r\n});\r\nObject.defineProperty(XYSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([XYSeries.className])\r\n});\r\n//# sourceMappingURL=XYSeries.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Component } from \"../../../core/render/Component\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\r\nexport class Axis extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_isPanning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis label elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis grid and fill elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds axis grid elements which goes above the series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis bullet elements.\r\n         *\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }))\r\n        });\r\n        /**\r\n         * A referenece to the the chart the axis belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rangesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_panStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_panEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_sAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_eAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_skipSync\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A list of axis ranges.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         * @default new List()\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_seriesAxisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A control label that is invisible but is used to keep width the width of\r\n         * the axis constant.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n         */\r\n        Object.defineProperty(this, \"ghostLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_cursorPosition\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: -1\r\n        });\r\n        Object.defineProperty(this, \"_snapToSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_seriesValuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A container above the axis that can be used to add additional stuff into\r\n         * it. For example a legend, label, or an icon.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"axisHeader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                themeTags: [\"axis\", \"header\"],\r\n                position: \"absolute\",\r\n                background: Rectangle.new(this._root, {\r\n                    themeTags: [\"header\", \"background\"],\r\n                    fill: this._root.interfaceColors.get(\"background\")\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _dispose() {\r\n        // these could be in other parents, so disposing just in case\r\n        this.gridContainer.dispose();\r\n        this.topGridContainer.dispose();\r\n        this.bulletsContainer.dispose();\r\n        this.labelsContainer.dispose();\r\n        this.axisHeader.dispose();\r\n        super._dispose();\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.setPrivate(\"updateScrollbar\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (dataItem) => {\r\n                    this.disposeDataItem(dataItem);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this.disposeDataItem(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value, [\"range\"]);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        const renderer = this.get(\"renderer\");\r\n        if (renderer) {\r\n            renderer.axis = this;\r\n            renderer.processAxis();\r\n        }\r\n        this.children.push(renderer);\r\n        this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\r\n        this.ghostLabel.adapters.disable(\"text\");\r\n        this.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\r\n        this.ghostLabel.events.disable();\r\n    }\r\n    _updateFinals(_start, _end) {\r\n    }\r\n    /**\r\n     * Zooms the axis to relative locations.\r\n     *\r\n     * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n     *\r\n     * @param   start     Relative start\r\n     * @param   end       Relative end\r\n     * @param   duration  Duration of the zoom animation in milliseconds\r\n     * @return            Zoom animation\r\n     */\r\n    zoom(start, end, duration, priority) {\r\n        this._updateFinals(start, end);\r\n        if (this.get(\"start\") !== start || this.get(\"end\") != end) {\r\n            let sAnimation = this._sAnimation;\r\n            let eAnimation = this._eAnimation;\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                start = -maxDeviation;\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                end = 1 + maxDeviation;\r\n            }\r\n            if (start > end) {\r\n                [start, end] = [end, start];\r\n            }\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"interpolationDuration\", 0);\r\n            }\r\n            if (!priority) {\r\n                priority = \"end\";\r\n            }\r\n            let maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\r\n            let maxZoomFactorReal = maxZoomFactor;\r\n            if (end === 1 && start !== 0) {\r\n                if (start < this.get(\"start\")) {\r\n                    priority = \"start\";\r\n                }\r\n                else {\r\n                    priority = \"end\";\r\n                }\r\n            }\r\n            if (start === 0 && end !== 1) {\r\n                if (end > this.get(\"end\")) {\r\n                    priority = \"end\";\r\n                }\r\n                else {\r\n                    priority = \"start\";\r\n                }\r\n            }\r\n            let minZoomCount = this.get(\"minZoomCount\");\r\n            let maxZoomCount = this.get(\"maxZoomCount\");\r\n            if ($type.isNumber(minZoomCount)) {\r\n                maxZoomFactor = maxZoomFactorReal / minZoomCount;\r\n            }\r\n            let minZoomFactor = 1;\r\n            if ($type.isNumber(maxZoomCount)) {\r\n                minZoomFactor = maxZoomFactorReal / maxZoomCount;\r\n            }\r\n            // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n            if (priority === \"start\") {\r\n                if (maxZoomCount > 0) {\r\n                    // add to the end\r\n                    if (1 / (end - start) < minZoomFactor) {\r\n                        end = start + 1 / minZoomFactor;\r\n                    }\r\n                }\r\n                // add to the end\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                //unless end is > 0\r\n                if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                    //end = 1;\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n            }\r\n            // most likely we are dragging right, so we modify left\r\n            else {\r\n                if (maxZoomCount > 0) {\r\n                    // add to the end\r\n                    if (1 / (end - start) < minZoomFactor) {\r\n                        start = end - 1 / minZoomFactor;\r\n                    }\r\n                }\r\n                // remove from start\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                    //start = 0;\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n            }\r\n            if (1 / (end - start) > maxZoomFactor) {\r\n                end = start + 1 / maxZoomFactor;\r\n            }\r\n            if (1 / (end - start) > maxZoomFactor) {\r\n                start = end - 1 / maxZoomFactor;\r\n            }\r\n            if (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\r\n                const chart = this.chart;\r\n                if (chart) {\r\n                    chart._handleAxisSelection(this, true);\r\n                }\r\n            }\r\n            if (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\r\n                return;\r\n            }\r\n            if (duration > 0) {\r\n                let easing = this.get(\"interpolationEasing\");\r\n                let sAnimation, eAnimation;\r\n                if (this.get(\"start\") != start) {\r\n                    sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\r\n                }\r\n                if (this.get(\"end\") != end) {\r\n                    eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\r\n                }\r\n                this._sAnimation = sAnimation;\r\n                this._eAnimation = eAnimation;\r\n                if (sAnimation) {\r\n                    return sAnimation;\r\n                }\r\n                else if (eAnimation) {\r\n                    return eAnimation;\r\n                }\r\n            }\r\n            else {\r\n                this.set(\"start\", start);\r\n                this.set(\"end\", end);\r\n                // otherwise bullets and line out of sync, as series is not redrawn\r\n                this._root.events.once(\"frameended\", () => {\r\n                    this._markDirtyKey(\"start\");\r\n                    this._root._markDirty();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this._sAnimation) {\r\n                this._sAnimation.stop();\r\n            }\r\n            if (this._eAnimation) {\r\n                this._eAnimation.stop();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\r\n    get series() {\r\n        return this._series;\r\n    }\r\n    _processAxisRange(dataItem, themeTags) {\r\n        dataItem.setRaw(\"isRange\", true);\r\n        this._createAssets(dataItem, themeTags);\r\n        this._rangesDirty = true;\r\n        this._prepareDataItem(dataItem);\r\n        const above = dataItem.get(\"above\");\r\n        const container = this.topGridContainer;\r\n        const grid = dataItem.get(\"grid\");\r\n        if (above && grid) {\r\n            container.children.moveValue(grid);\r\n        }\r\n        const fill = dataItem.get(\"axisFill\");\r\n        if (above && fill) {\r\n            container.children.moveValue(fill);\r\n        }\r\n    }\r\n    _prepareDataItem(_dataItem, _index) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n    }\r\n    _calculateTotals() {\r\n    }\r\n    _updateAxisRanges() {\r\n        this._bullets = {};\r\n        this.axisRanges.each((axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n        $array.each(this._seriesAxisRanges, (axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.get(\"fixAxisSize\")) {\r\n            this.ghostLabel.set(\"visible\", true);\r\n        }\r\n        else {\r\n            this.ghostLabel.set(\"visible\", false);\r\n        }\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            this.chart._updateCursor();\r\n            let start = this.get(\"start\", 0);\r\n            let end = this.get(\"end\", 1);\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                let delta = start + maxDeviation;\r\n                start = -maxDeviation;\r\n                this.setRaw(\"start\", start);\r\n                if (this.isDirty(\"end\")) {\r\n                    this.setRaw(\"end\", end - delta);\r\n                }\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                let delta = end - 1 - maxDeviation;\r\n                end = 1 + maxDeviation;\r\n                this.setRaw(\"end\", end);\r\n                if (this.isDirty(\"start\")) {\r\n                    this.setRaw(\"start\", start - delta);\r\n                }\r\n            }\r\n        }\r\n        const renderer = this.get(\"renderer\");\r\n        renderer._start = this.get(\"start\");\r\n        renderer._end = this.get(\"end\");\r\n        renderer._inversed = renderer.get(\"inversed\", false);\r\n        renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\r\n        renderer._updateLC();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                const rendererTags = renderer.get(\"themeTags\");\r\n                tooltip.addTag(\"axis\");\r\n                tooltip.addTag(this.className.toLowerCase());\r\n                tooltip._applyThemes();\r\n                if (rendererTags) {\r\n                    tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\r\n                    tooltip.label._applyThemes();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipBounds() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            this.get(\"renderer\").updateTooltipBounds(tooltip);\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        super._updateBounds();\r\n        this._updateTooltipBounds();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processChart(chart) {\r\n        this.chart = chart;\r\n        const renderer = this.get(\"renderer\");\r\n        renderer.chart = chart;\r\n        chart.gridContainer.children.push(this.gridContainer);\r\n        chart.topGridContainer.children.push(this.topGridContainer);\r\n        chart.axisHeadersContainer.children.push(this.axisHeader);\r\n        this.on(\"start\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        this.on(\"end\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        chart.plotContainer.onPrivate(\"width\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.plotContainer.onPrivate(\"height\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.processAxis(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hideDataItem(dataItem) {\r\n        this._toggleDataItem(dataItem, false);\r\n        return super.hideDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    showDataItem(dataItem) {\r\n        this._toggleDataItem(dataItem, true);\r\n        return super.showDataItem(dataItem);\r\n    }\r\n    _toggleDataItem(dataItem, visible) {\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            label.setPrivate(\"visible\", visible);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.setPrivate(\"visible\", visible);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.setPrivate(\"visible\", visible);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.setPrivate(\"visible\", visible);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _createAssets(dataItem, tags) {\r\n        const renderer = this.get(\"renderer\");\r\n        if (!dataItem.get(\"label\")) {\r\n            renderer.makeLabel(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"grid\")) {\r\n            renderer.makeGrid(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"tick\")) {\r\n            renderer.makeTick(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"axisFill\")) {\r\n            renderer.makeAxisFill(dataItem, tags);\r\n        }\r\n        this._processBullet(dataItem);\r\n    }\r\n    _processBullet(dataItem) {\r\n        let bullet = dataItem.get(\"bullet\");\r\n        let axisBullet = this.get(\"bullet\");\r\n        if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\r\n            bullet = axisBullet(this._root, this, dataItem);\r\n        }\r\n        if (bullet) {\r\n            bullet.axis = this;\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                dataItem.setRaw(\"bullet\", bullet);\r\n                if (!sprite.parent) {\r\n                    this.bulletsContainer.children.push(sprite);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart._updateChartLayout();\r\n            chart.axisHeadersContainer.markDirtySize();\r\n        }\r\n        this.get(\"renderer\")._updatePositions();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const renderer = this.get(\"renderer\");\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            renderer.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            renderer.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            renderer.grid.removeValue(grid);\r\n            grid.dispose();\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            renderer.axisFills.removeValue(axisFill);\r\n            axisFill.dispose();\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            bullet.dispose();\r\n        }\r\n    }\r\n    _updateGhost() {\r\n        this.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\r\n        const ghostLabel = this.ghostLabel;\r\n        if (!ghostLabel.isHidden()) {\r\n            const bounds = ghostLabel.localBounds();\r\n            const gWidth = bounds.right - bounds.left;\r\n            let text = ghostLabel.get(\"text\");\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                const label = dataItem.get(\"label\");\r\n                if (label && !label.isHidden()) {\r\n                    const bounds = label.localBounds();\r\n                    const w = bounds.right - bounds.left;\r\n                    if (w > gWidth) {\r\n                        text = label.text._getText();\r\n                    }\r\n                }\r\n            });\r\n            ghostLabel.set(\"text\", text);\r\n        }\r\n        let start = this.get(\"start\", 0);\r\n        let end = this.get(\"end\", 1);\r\n        this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\r\n    }\r\n    _handleCursorPosition(position, snapToSeries) {\r\n        const renderer = this.get(\"renderer\");\r\n        position = renderer.toAxisPosition(position);\r\n        this._cursorPosition = position;\r\n        this._snapToSeries = snapToSeries;\r\n        this.updateTooltip();\r\n    }\r\n    /**\r\n     * Can be called when axis zoom changes and you need to update tooltip\r\n     * position.\r\n     */\r\n    updateTooltip() {\r\n        const snapToSeries = this._snapToSeries;\r\n        let position = this._cursorPosition;\r\n        const tooltip = this.get(\"tooltip\");\r\n        const renderer = this.get(\"renderer\");\r\n        if ($type.isNumber(position)) {\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    const dataItem = this.getSeriesItem(series, position, this.get(\"tooltipLocation\"));\r\n                    series.setRaw(\"tooltipDataItem\", dataItem);\r\n                    if (snapToSeries && snapToSeries.indexOf(series) != -1) {\r\n                        series.updateLegendMarker(dataItem);\r\n                        series.updateLegendValue(dataItem);\r\n                    }\r\n                    else {\r\n                        series.showDataItemTooltip(dataItem);\r\n                    }\r\n                }\r\n            });\r\n            if (tooltip) {\r\n                renderer.updateTooltipBounds(tooltip);\r\n                if (this.get(\"snapTooltip\")) {\r\n                    position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\r\n                }\r\n                if (!$type.isNaN(position)) {\r\n                    this.setPrivateRaw(\"tooltipPosition\", position);\r\n                    this._updateTooltipText(tooltip, position);\r\n                    renderer.positionTooltip(tooltip, position);\r\n                    if (position < this.get(\"start\") || position > this.get(\"end\")) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show(0);\r\n                    }\r\n                }\r\n                else {\r\n                    tooltip.hide(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip.label.set(\"text\", this.getTooltipText(position));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, _location) {\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorShow() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.show();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(_dataItem, _fields) {\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._rangesDirty = false;\r\n    }\r\n    /**\r\n     * Converts pixel coordinate to a relative position on axis.\r\n     *\r\n     * @param   coordinate  Coordinate\r\n     * @return              Relative position\r\n     */\r\n    coordinateToPosition(coordinate) {\r\n        const renderer = this.get(\"renderer\");\r\n        return renderer.toAxisPosition(coordinate / renderer.axisLength());\r\n    }\r\n    /**\r\n     * Converts relative position of the plot area to relative position of the\r\n     * axis with zoom taken into account.\r\n     *\r\n     * @param position Position\r\n     * @return Relative position\r\n     */\r\n    toAxisPosition(position) {\r\n        return this.get(\"renderer\").toAxisPosition(position);\r\n    }\r\n    /**\r\n     * Adjusts position with inversed taken into account.\r\n     *\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        return this.get(\"renderer\").fixPosition(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(_dataItem, _nextItem, _autoGapCount, _fieldName) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push(axisDataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _groupSeriesData(_series) { }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(Axis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Axis\"\r\n});\r\nObject.defineProperty(Axis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Axis.className])\r\n});\r\n//# sourceMappingURL=Axis.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Axis } from \"./Axis\";\r\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Creates a value axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\r\n * @important\r\n */\r\nexport class ValueAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dirtyExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirtySelectionExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_deltaMinMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_minReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_maxReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseValue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_syncDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minLogAdjusted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n        this._dirtyExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n        this._dirtySelectionExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.setPrivateRaw(\"name\", \"value\");\r\n        this.addTag(\"value\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"syncWithAxis\")) {\r\n            let previousValue = this._prevSettings.syncWithAxis;\r\n            if (previousValue) {\r\n                if (this._syncDp) {\r\n                    this._syncDp.dispose();\r\n                }\r\n            }\r\n            let syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                this._syncDp = new MultiDisposer([\r\n                    syncWithAxis.onPrivate(\"selectionMinFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    }),\r\n                    syncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n        //if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\r\n        if (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\r\n            this._getMinMax();\r\n            this.ghostLabel.set(\"text\", \"\");\r\n            this._dirtyExtremes = false;\r\n        }\r\n        if (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\r\n            this._getSelectionMinMax();\r\n            this._dirtySelectionExtremes = false;\r\n        }\r\n        this._groupData();\r\n        if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\r\n            this._handleRangeChange();\r\n            this._prepareAxisItems();\r\n            this._updateAxisRanges();\r\n        }\r\n        this._baseValue = this.baseValue();\r\n    }\r\n    _groupData() {\r\n    }\r\n    _formatText(value) {\r\n        const numberFormat = this.get(\"numberFormat\");\r\n        const formatter = this.getNumberFormatter();\r\n        let text = \"\";\r\n        if (numberFormat) {\r\n            text = formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            text = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\r\n        }\r\n        return text;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const logarithmic = this.get(\"logarithmic\");\r\n            const step = this.getPrivate(\"step\");\r\n            const selectionMin = this.getPrivate(\"selectionMin\");\r\n            const selectionMax = this.getPrivate(\"selectionMax\") + step;\r\n            let value = selectionMin - step;\r\n            let i = 0;\r\n            let differencePower = 1;\r\n            let minLog = min;\r\n            if (logarithmic) {\r\n                value = this._minLogAdjusted;\r\n                if (value < selectionMin) {\r\n                    while (value < selectionMin) {\r\n                        value += step;\r\n                    }\r\n                }\r\n                minLog = value;\r\n                if (minLog <= 0) {\r\n                    minLog = 1;\r\n                    if (step < 1) {\r\n                        minLog = step;\r\n                    }\r\n                }\r\n                differencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\r\n                if (differencePower > 2) {\r\n                    value = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\r\n                }\r\n            }\r\n            let previous = -Infinity;\r\n            while (value < selectionMax) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                if (dataItem.isHidden()) {\r\n                    dataItem.show();\r\n                }\r\n                dataItem.setRaw(\"value\", value);\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._formatText(value));\r\n                }\r\n                this._prepareDataItem(dataItem);\r\n                if (!logarithmic) {\r\n                    value += step;\r\n                }\r\n                else {\r\n                    if (differencePower > 2) {\r\n                        value = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\r\n                    }\r\n                    else {\r\n                        value += step;\r\n                    }\r\n                }\r\n                if (previous == value) {\r\n                    break;\r\n                }\r\n                let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n                if (stepPower < 1) {\r\n                    // exponent is less then 1 too. Count decimals of exponent\r\n                    let decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                    // round value to avoid floating point issues\r\n                    value = $math.round(value, decCount);\r\n                }\r\n                i++;\r\n                previous = value;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n            this._updateGhost();\r\n        }\r\n    }\r\n    _prepareDataItem(dataItem, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let value = dataItem.get(\"value\");\r\n        let endValue = dataItem.get(\"endValue\");\r\n        let position = this.valueToPosition(value);\r\n        let endPosition = position;\r\n        let fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\"));\r\n        if ($type.isNumber(endValue)) {\r\n            endPosition = this.valueToPosition(endValue);\r\n            fillEndPosition = endPosition;\r\n        }\r\n        if (dataItem.get(\"isRange\")) {\r\n            if (endValue == null) {\r\n                fillEndPosition = position;\r\n            }\r\n        }\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n        const grid = dataItem.get(\"grid\");\r\n        renderer.updateGrid(grid, position, endPosition);\r\n        if (grid) {\r\n            if (value == this.get(\"baseValue\", 0)) {\r\n                grid.addTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n            else if (grid.hasTag(\"base\")) {\r\n                grid.removeTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n        }\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        if (!dataItem.get(\"isRange\")) {\r\n            const fillRule = this.get(\"fillRule\");\r\n            if (fillRule) {\r\n                fillRule(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        let selectionMin = this.positionToValue(this.get(\"start\", 0));\r\n        let selectionMax = this.positionToValue(this.get(\"end\", 1));\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n        this.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\r\n        selectionMin = $math.round(selectionMin, stepDecimalPlaces);\r\n        selectionMax = $math.round(selectionMax, stepDecimalPlaces);\r\n        minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let step = minMaxStep.step;\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        if (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\r\n            // do not change to setPrivate, will cause SO\r\n            this.setPrivateRaw(\"selectionMin\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMax\", selectionMax);\r\n            this.setPrivateRaw(\"step\", step);\r\n        }\r\n    }\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    positionToValue(position) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return position * (max - min) + min;\r\n        }\r\n        else {\r\n            return Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\r\n        }\r\n    }\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    valueToPosition(value) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    valueToFinalPosition(value) {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getX(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getY(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * Returns relative position of axis' `baseValue`.\r\n     *\r\n     * @return  Base value position\r\n     */\r\n    basePosition() {\r\n        return this.valueToPosition(this.baseValue());\r\n    }\r\n    /**\r\n     * Base value of the [[ValueAxis]], which determines positive and negative\r\n     * values.\r\n     *\r\n     * @return Base value\r\n     */\r\n    baseValue() {\r\n        const min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\r\n        const max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\r\n        let baseValue = this.get(\"baseValue\", 0);\r\n        if (baseValue < min) {\r\n            baseValue = min;\r\n        }\r\n        if (baseValue > max) {\r\n            baseValue = max;\r\n        }\r\n        return baseValue;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    cellEndValue(value) {\r\n        return value;\r\n    }\r\n    fixSmallStep(step) {\r\n        // happens because of floating point error\r\n        if (1 + step === 1) {\r\n            step *= 2;\r\n            return this.fixSmallStep(step);\r\n        }\r\n        return step;\r\n    }\r\n    _fixMin(min) {\r\n        return min;\r\n    }\r\n    _fixMax(max) {\r\n        return max;\r\n    }\r\n    _calculateTotals() {\r\n        if (this.get(\"calculateTotals\")) {\r\n            let series = this.series[0];\r\n            if (series) {\r\n                let startIndex = series.startIndex();\r\n                if (series.dataItems.length > 0) {\r\n                    if (startIndex > 0) {\r\n                        startIndex--;\r\n                    }\r\n                    let endIndex = series.endIndex();\r\n                    if (endIndex < series.dataItems.length) {\r\n                        endIndex++;\r\n                    }\r\n                    let field;\r\n                    let vc;\r\n                    if (series.get(\"yAxis\") == this) {\r\n                        field = \"valueY\";\r\n                        vc = \"vcy\";\r\n                    }\r\n                    else if (series.get(\"xAxis\") == this) {\r\n                        field = \"valueX\";\r\n                        vc = \"vcx\";\r\n                    }\r\n                    let fieldWorking = field + \"Working\";\r\n                    if (field) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            let sum = 0;\r\n                            let total = 0;\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            sum += value;\r\n                                            total += Math.abs(value);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            dataItem.set((field + \"Total\"), total);\r\n                                            dataItem.set((field + \"Sum\"), sum);\r\n                                            dataItem.set((field + \"TotalPercent\"), value / total * 100);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getSelectionMinMax() {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        const minDefined = this.get(\"min\");\r\n        const maxDefined = this.get(\"max\");\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        const selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\r\n        const strictMinMax = this.get(\"strictMinMax\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            let selectionMin = max;\r\n            let selectionMax = min;\r\n            $array.each(this.series, (series) => {\r\n                if (!series.get(\"ignoreMinMax\")) {\r\n                    let seriesMin;\r\n                    let seriesMax;\r\n                    const outOfSelection = series.getPrivate(\"outOfSelection\");\r\n                    if (series.get(\"xAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            seriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\r\n                            seriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\r\n                        }\r\n                    }\r\n                    else if (series.get(\"yAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            seriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\r\n                            seriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\r\n                        }\r\n                    }\r\n                    if (!series.isHidden() && !series.isShowing()) {\r\n                        if ($type.isNumber(seriesMin)) {\r\n                            selectionMin = Math.min(selectionMin, seriesMin);\r\n                        }\r\n                        if ($type.isNumber(seriesMax)) {\r\n                            selectionMax = Math.max(selectionMax, seriesMax);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.axisRanges.each((range) => {\r\n                if (range.get(\"affectsMinMax\")) {\r\n                    let value = range.get(\"value\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                    value = range.get(\"endValue\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                }\r\n            });\r\n            if (selectionMin > selectionMax) {\r\n                [selectionMin, selectionMax] = [selectionMax, selectionMin];\r\n            }\r\n            if ($type.isNumber(minDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = min;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._minReal)) {\r\n                    selectionMin = this._minReal;\r\n                }\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._maxReal)) {\r\n                    selectionMax = this._maxReal;\r\n                }\r\n            }\r\n            if (selectionMin === selectionMax) {\r\n                selectionMin -= this._deltaMinMax;\r\n                selectionMax += this._deltaMinMax;\r\n                let minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\r\n                selectionMin = minMaxStep2.min;\r\n                selectionMax = minMaxStep2.max;\r\n            }\r\n            let selectionMinReal = selectionMin;\r\n            let selectionMaxReal = selectionMax;\r\n            selectionMin -= (selectionMax - selectionMin) * extraMin;\r\n            selectionMax += (selectionMax - selectionMin) * extraMax;\r\n            let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\r\n            selectionMin = minMaxStep.min;\r\n            selectionMax = minMaxStep.max;\r\n            selectionMin = $math.fitToRange(selectionMin, min, max);\r\n            selectionMax = $math.fitToRange(selectionMax, min, max);\r\n            // do it for the second time !important\t\t\t\r\n            minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            if (!strictMinMax) {\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            const syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                minMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = Math.max(selectionMin, minDefined);\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = Math.min(selectionMax, maxDefined);\r\n                }\r\n            }\r\n            if (selectionStrictMinMax) {\r\n                selectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\r\n                selectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\r\n            }\r\n            if (this.get(\"logarithmic\")) {\r\n                if (selectionMin <= 0) {\r\n                    selectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\r\n                }\r\n                if (selectionMin < min) {\r\n                    selectionMin = min;\r\n                }\r\n                if (selectionMax > max) {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            let len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\r\n            let start = $math.round(this.valueToFinalPosition(selectionMin), len);\r\n            let end = $math.round(this.valueToFinalPosition(selectionMax), len);\r\n            this.setPrivateRaw(\"selectionMinFinal\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\r\n            this.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\r\n            this.zoom(start, end);\r\n        }\r\n    }\r\n    _getMinMax() {\r\n        let minDefined = this.get(\"min\");\r\n        let maxDefined = this.get(\"max\");\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        let minDiff = Infinity;\r\n        $array.each(this.series, (series) => {\r\n            if (!series.get(\"ignoreMinMax\")) {\r\n                let seriesMin;\r\n                let seriesMax;\r\n                if (series.get(\"xAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minX\");\r\n                    seriesMax = series.getPrivate(\"maxX\");\r\n                }\r\n                else if (series.get(\"yAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minY\");\r\n                    seriesMax = series.getPrivate(\"maxY\");\r\n                }\r\n                if ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\r\n                    min = Math.min(min, seriesMin);\r\n                    max = Math.max(max, seriesMax);\r\n                    let diff = seriesMax - seriesMin;\r\n                    if (diff <= 0) {\r\n                        diff = Math.abs(seriesMax / 100);\r\n                    }\r\n                    if (diff < minDiff) {\r\n                        minDiff = diff;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.axisRanges.each((range) => {\r\n            if (range.get(\"affectsMinMax\")) {\r\n                let value = range.get(\"value\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n                value = range.get(\"endValue\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n            }\r\n        });\r\n        if (this.get(\"logarithmic\")) {\r\n            let treatZeroAs = this.get(\"treatZeroAs\");\r\n            if ($type.isNumber(treatZeroAs)) {\r\n                if (min <= 0) {\r\n                    min = treatZeroAs;\r\n                }\r\n            }\r\n            if (min <= 0) {\r\n                new Error(\"Logarithmic value axis can not have values <= 0.\");\r\n            }\r\n        }\r\n        if (min === 0 && max === 0) {\r\n            max = 0.9;\r\n            min = -0.9;\r\n        }\r\n        if ($type.isNumber(minDefined)) {\r\n            min = minDefined;\r\n        }\r\n        if ($type.isNumber(maxDefined)) {\r\n            max = maxDefined;\r\n        }\r\n        // meaning no min/max found on series/ranges and no min/max was defined\r\n        if (min === Infinity || max === -Infinity) {\r\n            this.setPrivate(\"minFinal\", undefined);\r\n            this.setPrivate(\"maxFinal\", undefined);\r\n            return;\r\n        }\r\n        const initialMin = min;\r\n        const initialMax = max;\r\n        // adapter\r\n        let minAdapted = this.adapters.fold(\"min\", min);\r\n        let maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        // DateAxis does some magic here\r\n        min = this._fixMin(min);\r\n        max = this._fixMax(max);\r\n        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\r\n        if (max - min <= 1 / Math.pow(10, 15)) {\r\n            if (max - min !== 0) {\r\n                this._deltaMinMax = (max - min) / 2;\r\n            }\r\n            else {\r\n                this._getDelta(max);\r\n            }\r\n            min -= this._deltaMinMax;\r\n            max += this._deltaMinMax;\r\n        }\r\n        // add extras\r\n        min -= (max - min) * extraMin;\r\n        max += (max - min) * extraMax;\r\n        if (this.get(\"logarithmic\")) {\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n        }\r\n        this._minReal = min;\r\n        this._maxReal = max;\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        let strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\r\n        if (strictMinMaxSelection) {\r\n            strictMinMax = strictMinMaxSelection;\r\n        }\r\n        let strict = strictMinMax;\r\n        if ($type.isNumber(maxDefined)) {\r\n            strict = true;\r\n        }\r\n        let gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(min, max, gridCount, strict);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // do it for the second time with strict true (importat!)\r\n        minMaxStep = this._adjustMinMax(min, max, gridCount, true);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // return min max if strict\r\n        if (strictMinMax) {\r\n            if ($type.isNumber(minDefined)) {\r\n                min = minDefined;\r\n            }\r\n            else {\r\n                min = this._minReal;\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                max = maxDefined;\r\n            }\r\n            else {\r\n                max = this._maxReal;\r\n            }\r\n            if (max - min <= 0.00000001) {\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            min -= (max - min) * extraMin;\r\n            max += (max - min) * extraMax;\r\n        }\r\n        minAdapted = this.adapters.fold(\"min\", min);\r\n        maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        if (minDiff == Infinity) {\r\n            minDiff = (max - min);\r\n        }\r\n        // this is to avoid floating point number error\r\n        let decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\r\n        min = $math.round(min, decCount);\r\n        max = $math.round(max, decCount);\r\n        const syncWithAxis = this.get(\"syncWithAxis\");\r\n        if (syncWithAxis) {\r\n            minMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n        }\r\n        this.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\r\n        this._fixZoomFactor();\r\n        if (this.get(\"logarithmic\")) {\r\n            this._minLogAdjusted = min;\r\n            min = this._minReal;\r\n            max = this._maxReal;\r\n            if (min <= 0) {\r\n                min = initialMin * (1 - Math.min(extraMin, 0.99));\r\n            }\r\n        }\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            if (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\r\n                this.setPrivate(\"minFinal\", min);\r\n                this.setPrivate(\"maxFinal\", max);\r\n                this._saveMinMax(min, max);\r\n                const duration = this.get(\"interpolationDuration\", 0);\r\n                const easing = this.get(\"interpolationEasing\");\r\n                this.animatePrivate({ key: \"min\", to: min, duration, easing });\r\n                this.animatePrivate({ key: \"max\", to: max, duration, easing });\r\n            }\r\n        }\r\n    }\r\n    _fixZoomFactor() {\r\n    }\r\n    _getDelta(max) {\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        this._deltaMinMax = power;\r\n    }\r\n    _saveMinMax(_min, _max) {\r\n    }\r\n    _adjustMinMax(min, max, gridCount, strictMode) {\r\n        // will fail if 0\r\n        if (gridCount <= 1) {\r\n            gridCount = 1;\r\n        }\r\n        gridCount = Math.round(gridCount);\r\n        let initialMin = min;\r\n        let initialMax = max;\r\n        let difference = max - min;\r\n        // in case min and max is the same, use max\r\n        if (difference === 0) {\r\n            difference = Math.abs(max);\r\n        }\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        let extra = power;\r\n        if (strictMode) {\r\n            extra = 0;\r\n        }\r\n        // round down min\r\n        if (strictMode) {\r\n            min = Math.floor(min / power) * power;\r\n            // round up max\r\n            max = Math.ceil(max / power) * power;\r\n        }\r\n        else {\r\n            min = Math.ceil(min / power) * power - extra;\r\n            // round up max\r\n            max = Math.floor(max / power) * power + extra;\r\n        }\r\n        // don't let min go below 0 if real min is >= 0\r\n        if (min < 0 && initialMin >= 0) {\r\n            min = 0;\r\n        }\r\n        // don't let max go above 0 if real max is <= 0\r\n        if (max > 0 && initialMax <= 0) {\r\n            max = 0;\r\n        }\r\n        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        power = Math.pow(10, Math.floor(exponent));\r\n        power = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\r\n        // approximate difference between two grid lines\r\n        let step = Math.ceil((difference / gridCount) / power) * power;\r\n        let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n        // the step should divide by  2, 5, and 10.\r\n        let stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n        if (stepDivisor > 5) {\r\n            stepDivisor = 10;\r\n        }\r\n        else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n            stepDivisor = 5;\r\n        }\r\n        // now get real step\r\n        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n        let maxPrecision = this.get(\"maxPrecision\");\r\n        if ($type.isNumber(maxPrecision)) {\r\n            let ceiledStep = $math.ceil(step, maxPrecision);\r\n            if (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\r\n                step = ceiledStep;\r\n            }\r\n        }\r\n        let decCount = 0;\r\n        // in case numbers are smaller than 1\r\n        if (stepPower < 1) {\r\n            // exponent is less then 1 too. Count decimals of exponent\r\n            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n            // round step\r\n            step = $math.round(step, decCount);\r\n        }\r\n        // final min and max\r\n        let minCount = Math.floor(min / step);\r\n        min = $math.round(step * minCount, decCount);\r\n        let maxCount;\r\n        if (!strictMode) {\r\n            maxCount = Math.ceil(max / step);\r\n        }\r\n        else {\r\n            maxCount = Math.floor(max / step);\r\n        }\r\n        if (maxCount === minCount) {\r\n            maxCount++;\r\n        }\r\n        max = $math.round(step * maxCount, decCount);\r\n        if (max < initialMax) {\r\n            max = max + step;\r\n        }\r\n        if (min > initialMin) {\r\n            min = min - step;\r\n        }\r\n        step = this.fixSmallStep(step);\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        const numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\r\n        const formatter = this.getNumberFormatter();\r\n        const extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n        const decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n        const value = $math.round(this.positionToValue(position), decimals);\r\n        if (numberFormat) {\r\n            return formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            return formatter.format(value, undefined, decimals);\r\n            //label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\r\n        }\r\n        // //@todo number formatter + tag\r\n        // return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        let index = undefined;\r\n        let oldDiff;\r\n        $array.each(series.dataItems, (dataItem, i) => {\r\n            const diff = Math.abs(dataItem.get(fieldName) - value);\r\n            if (index === undefined || diff < oldDiff) {\r\n                index = i;\r\n                oldDiff = diff;\r\n            }\r\n        });\r\n        if (index != null) {\r\n            return series.dataItems[index];\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"minFinal\", 0);\r\n        const max = this.getPrivate(\"maxFinal\", 0);\r\n        if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n            this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n        }\r\n    }\r\n    /**\r\n     * Syncs with a target axis.\r\n     *\r\n     * @param  min  Min\r\n     * @param  max  Max\r\n     * @param  step Step\r\n     */\r\n    _syncAxes(min, max, step, syncMin, syncMax, syncStep) {\r\n        let axis = this.get(\"syncWithAxis\");\r\n        if (axis) {\r\n            let count = Math.round(syncMax - syncMin) / syncStep;\r\n            let currentCount = Math.round((max - min) / step);\r\n            let gridCount = this.get(\"renderer\").gridCount();\r\n            if ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n                let synced = false;\r\n                let c = 0;\r\n                let diff = (max - min) * 0.01;\r\n                let omin = min;\r\n                let omax = max;\r\n                let ostep = step;\r\n                while (synced != true) {\r\n                    synced = this._checkSync(omin, omax, ostep, count);\r\n                    c++;\r\n                    if (c > 500) {\r\n                        synced = true;\r\n                    }\r\n                    if (!synced) {\r\n                        if (c / 3 == Math.round(c / 3)) {\r\n                            omin = min - diff * c;\r\n                            if (min >= 0 && omin < 0) {\r\n                                omin = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            omax = max + diff * c;\r\n                            if (omax <= 0 && omax > 0) {\r\n                                omax = 0;\r\n                            }\r\n                        }\r\n                        let minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\r\n                        omin = minMaxStep.min;\r\n                        omax = minMaxStep.max;\r\n                        ostep = minMaxStep.step;\r\n                    }\r\n                    else {\r\n                        min = omin;\r\n                        max = omax;\r\n                        step = ostep;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns `true` if axis needs to be resunced with some other axis.\r\n     */\r\n    _checkSync(min, max, step, count) {\r\n        let currentCount = (max - min) / step;\r\n        for (let i = 1; i < count; i++) {\r\n            if ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this.getPrivate(\"step\", 1) / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(ValueAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ValueAxis\"\r\n});\r\nObject.defineProperty(ValueAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([ValueAxis.className])\r\n});\r\n//# sourceMappingURL=ValueAxis.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $time from \"../../../core/util/Time\";\r\n/**\r\n * Creates a date axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\r\n * @important\r\n */\r\nexport class DateAxis extends ValueAxis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_seriesDataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_groupingCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_intervalDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_baseDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_intervalMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_intervalMin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        super._afterNew();\r\n        this._setBaseInterval(this.get(\"baseInterval\"));\r\n        this.on(\"baseInterval\", () => {\r\n            this._setBaseInterval(this.get(\"baseInterval\"));\r\n        });\r\n    }\r\n    _setBaseInterval(interval) {\r\n        this.setPrivateRaw(\"baseInterval\", interval);\r\n        this._baseDuration = $time.getIntervalDuration(interval);\r\n    }\r\n    _fixZoomFactor() {\r\n        const maxZoomFactor = this.get(\"maxZoomFactor\");\r\n        if (maxZoomFactor != null && maxZoomFactor != Infinity) {\r\n            this.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\r\n        }\r\n        else {\r\n            this.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\r\n        }\r\n    }\r\n    _groupData() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (($type.isNumber(min) && $type.isNumber(max))) {\r\n            this._fixZoomFactor();\r\n            const groupInterval = this.getPrivate(\"groupInterval\");\r\n            if (groupInterval) {\r\n                this._setBaseInterval(groupInterval);\r\n            }\r\n            else {\r\n                this._setBaseInterval(this.get(\"baseInterval\"));\r\n            }\r\n            if (this.isDirty(\"groupInterval\")) {\r\n                let groupInterval = this.get(\"groupInterval\");\r\n                if (groupInterval) {\r\n                    this.setRaw(\"groupIntervals\", [groupInterval]);\r\n                }\r\n            }\r\n            if (this.isDirty(\"groupData\")) {\r\n                if (!this._dataGrouped) {\r\n                    if (this.get(\"groupData\")) {\r\n                        $array.each(this.series, (series) => {\r\n                            this._groupSeriesData(series);\r\n                        });\r\n                        this._handleRangeChange();\r\n                    }\r\n                    else {\r\n                        let baseInterval = this.get(\"baseInterval\");\r\n                        let mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n                        $array.each(this.series, (series) => {\r\n                            series.setDataSet(mainDataSetId);\r\n                        });\r\n                        this._setBaseInterval(baseInterval);\r\n                        this.setPrivateRaw(\"groupInterval\", undefined);\r\n                        this.markDirtyExtremes();\r\n                    }\r\n                    this._dataGrouped = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _groupSeriesData(series) {\r\n        if (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\r\n            this._dataGrouped = true; // helps to avoid double grouping\r\n            this._seriesDataGrouped = true;\r\n            // make array of intervals which will be used;\r\n            let intervals = [];\r\n            let baseDuration = this.baseMainDuration();\r\n            let groupIntervals = this.get(\"groupIntervals\");\r\n            if (groupIntervals) { }\r\n            $array.each(groupIntervals, (interval) => {\r\n                let intervalDuration = $time.getIntervalDuration(interval);\r\n                if (intervalDuration > baseDuration) {\r\n                    intervals.push(interval);\r\n                }\r\n            });\r\n            series._dataSets = {};\r\n            const key = this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\");\r\n            let fields;\r\n            const baseAxis = series.get(\"baseAxis\");\r\n            if (series.get(\"xAxis\") === baseAxis) {\r\n                fields = series._valueYFields;\r\n            }\r\n            else if (series.get(\"yAxis\") === baseAxis) {\r\n                fields = series._valueXFields;\r\n            }\r\n            let dataItems = series._mainDataItems;\r\n            let baseInterval = this.get(\"baseInterval\");\r\n            let mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n            series._dataSets[mainDataSetId] = dataItems;\r\n            const groupCallback = series.get(\"groupDataCallback\");\r\n            let groupOriginals = series.get(\"groupDataWithOriginals\", false);\r\n            if (groupCallback) {\r\n                groupOriginals = true;\r\n            }\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            $array.each(intervals, (interval) => {\r\n                let previousTime = -Infinity;\r\n                let dataSetId = interval.timeUnit + interval.count;\r\n                series._dataSets[dataSetId] = [];\r\n                let newDataItem;\r\n                let sum = {};\r\n                let count = {};\r\n                let groupFieldValues = {};\r\n                let workingFields = {};\r\n                $array.each(fields, (field) => {\r\n                    sum[field] = 0;\r\n                    count[field] = 0;\r\n                    groupFieldValues[field] = series.get((field + \"Grouped\"));\r\n                    workingFields[field] = field + \"Working\";\r\n                });\r\n                let intervalDuration = $time.getDuration(interval.timeUnit);\r\n                let firstItem = dataItems[0];\r\n                let firstDate;\r\n                if (firstItem) {\r\n                    firstDate = new Date(dataItems[0].get(key));\r\n                }\r\n                let prevNewDataItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    let time = dataItem.get(key);\r\n                    let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\r\n                    let dataContext;\r\n                    if (previousTime < roundedTime - intervalDuration / 24) {\r\n                        dataContext = $object.copy(dataItem.dataContext);\r\n                        newDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\r\n                        newDataItem.setRaw(key, roundedTime);\r\n                        series._dataSets[dataSetId].push(newDataItem);\r\n                        $array.each(fields, (field) => {\r\n                            let value = dataItem.get(field);\r\n                            if ($type.isNumber(value)) {\r\n                                newDataItem.setRaw(field, value);\r\n                                newDataItem.setRaw(workingFields[field], value);\r\n                                count[field] = 1;\r\n                                sum[field] = value;\r\n                            }\r\n                            else {\r\n                                sum[field] = 0;\r\n                                count[field] = 0;\r\n                            }\r\n                        });\r\n                        if (groupOriginals) {\r\n                            newDataItem.set(\"originals\", [dataItem]);\r\n                        }\r\n                        if (groupCallback && prevNewDataItem) {\r\n                            groupCallback(prevNewDataItem, interval);\r\n                        }\r\n                        prevNewDataItem = newDataItem;\r\n                    }\r\n                    else {\r\n                        $array.each(fields, (field) => {\r\n                            let groupKey = groupFieldValues[field];\r\n                            let value = dataItem.get(field);\r\n                            if (value !== undefined) {\r\n                                let currentValue = newDataItem.get(field);\r\n                                switch (groupKey) {\r\n                                    case \"close\":\r\n                                        newDataItem.setRaw(field, value);\r\n                                        break;\r\n                                    case \"sum\":\r\n                                        if (value != null) {\r\n                                            newDataItem.setRaw(field, currentValue + value);\r\n                                        }\r\n                                        break;\r\n                                    case \"open\":\r\n                                        break;\r\n                                    case \"low\":\r\n                                        if (value < currentValue) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                    case \"high\":\r\n                                        if (value > currentValue) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                    case \"average\":\r\n                                        count[field]++;\r\n                                        sum[field] += value;\r\n                                        let average = sum[field] / count[field];\r\n                                        newDataItem.setRaw(field, average);\r\n                                        break;\r\n                                    case \"extreme\":\r\n                                        if (Math.abs(value) > Math.abs(currentValue)) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                newDataItem.setRaw(workingFields[field], newDataItem.get(field));\r\n                                let dataContext = $object.copy(dataItem.dataContext);\r\n                                dataContext[key] = roundedTime;\r\n                                newDataItem.dataContext = dataContext;\r\n                            }\r\n                        });\r\n                        if (groupOriginals) {\r\n                            newDataItem.get(\"originals\").push(dataItem);\r\n                        }\r\n                    }\r\n                    previousTime = roundedTime;\r\n                });\r\n                if (groupCallback && prevNewDataItem) {\r\n                    groupCallback(prevNewDataItem, interval);\r\n                }\r\n            });\r\n            if (series._dataSetId) {\r\n                series.setDataSet(series._dataSetId);\r\n            }\r\n            this.markDirtySize();\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._groupingCalculated = false;\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * Returns a time interval axis would group data to for a specified duration.\r\n     *\r\n     * @since 5.2.1\r\n     */\r\n    getGroupInterval(duration) {\r\n        let baseInterval = this.get(\"baseInterval\");\r\n        let groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\"));\r\n        if ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\r\n            groupInterval = Object.assign({}, baseInterval);\r\n        }\r\n        return groupInterval;\r\n    }\r\n    /**\r\n     * Return `max` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Max\r\n     */\r\n    getIntervalMax(interval) {\r\n        return this._intervalMax[interval.timeUnit + interval.count];\r\n    }\r\n    /**\r\n     * Return `min` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Min\r\n     */\r\n    getIntervalMin(interval) {\r\n        return this._intervalMin[interval.timeUnit + interval.count];\r\n    }\r\n    _handleRangeChange() {\r\n        super._handleRangeChange();\r\n        let selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n        let selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n        if ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\r\n            if (this.get(\"endLocation\") == 0) {\r\n                selectionMax += 1;\r\n            }\r\n            if (this.get(\"groupData\") && !this._groupingCalculated) {\r\n                this._groupingCalculated = true;\r\n                let modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\r\n                let groupInterval = this.get(\"groupInterval\");\r\n                if (!groupInterval) {\r\n                    groupInterval = this.getGroupInterval(modifiedDifference);\r\n                }\r\n                let current = this.getPrivate(\"groupInterval\");\r\n                if (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\r\n                    this._seriesDataGrouped = false;\r\n                    this.setPrivateRaw(\"groupInterval\", groupInterval);\r\n                    this._setBaseInterval(groupInterval);\r\n                    let newId = groupInterval.timeUnit + groupInterval.count;\r\n                    $array.each(this.series, (series) => {\r\n                        if (series.get(\"baseAxis\") === this) {\r\n                            series.setDataSet(newId);\r\n                        }\r\n                    });\r\n                    this.markDirtyExtremes();\r\n                    this._root.events.once(\"frameended\", () => {\r\n                        this._root.events.once(\"frameended\", () => {\r\n                            const type = \"groupintervalchanged\";\r\n                            if (this.events.isEnabled(type)) {\r\n                                this.events.dispatch(type, { type: type, target: this });\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n                    const start = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n                        return $order.compare(dataItem.get(fieldName), selectionMin);\r\n                    });\r\n                    let startIndex = start.index;\r\n                    if (startIndex > 0) {\r\n                        startIndex -= 1;\r\n                    }\r\n                    selectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\r\n                    const end = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n                        return $order.compare(dataItem.get(fieldName), selectionMax);\r\n                    });\r\n                    let endIndex = end.index;\r\n                    let endIndex2 = endIndex;\r\n                    if (endIndex2 > 1) {\r\n                        endIndex2--;\r\n                    }\r\n                    const firstDataItem = series.dataItems[startIndex];\r\n                    const lastDataItem = series.dataItems[endIndex2];\r\n                    let lastDate;\r\n                    let firstDate;\r\n                    if (firstDataItem) {\r\n                        firstDate = firstDataItem.get(fieldName);\r\n                    }\r\n                    if (lastDataItem) {\r\n                        lastDate = lastDataItem.get(fieldName);\r\n                    }\r\n                    let outOfSelection = false;\r\n                    if (lastDate != null && firstDate != null) {\r\n                        if (lastDate < selectionMin || firstDate > selectionMax) {\r\n                            outOfSelection = true;\r\n                        }\r\n                    }\r\n                    series.setPrivate(\"outOfSelection\", outOfSelection);\r\n                    series.setPrivate(\"startIndex\", startIndex);\r\n                    series.setPrivate(\"endIndex\", endIndex);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _adjustMinMax(min, max, gridCount, _strictMode) {\r\n        return { min: min, max: max, step: (max - min) / gridCount };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    intervalDuration() {\r\n        return this._intervalDuration;\r\n    }\r\n    _saveMinMax(min, max) {\r\n        let groupInterval = this.getPrivate(\"groupInterval\");\r\n        if (!groupInterval) {\r\n            groupInterval = this.get(\"baseInterval\");\r\n        }\r\n        let id = groupInterval.timeUnit + groupInterval.count;\r\n        this._intervalMin[id] = min;\r\n        this._intervalMax[id] = max;\r\n    }\r\n    _getM(timeUnit) {\r\n        if (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\r\n            return 1.05;\r\n        }\r\n        return 1.01;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n            const selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n            const renderer = this.get(\"renderer\");\r\n            const baseInterval = this.getPrivate(\"baseInterval\");\r\n            let value = selectionMin;\r\n            let i = 0;\r\n            const intervals = this.get(\"gridIntervals\");\r\n            let gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\r\n            if ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\r\n                gridInterval = Object.assign({}, baseInterval);\r\n            }\r\n            const intervalDuration = $time.getIntervalDuration(gridInterval);\r\n            this._intervalDuration = intervalDuration;\r\n            const nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\r\n            let previousValue = value - intervalDuration;\r\n            let format;\r\n            const formats = this.get(\"dateFormats\");\r\n            this.setPrivateRaw(\"gridInterval\", gridInterval);\r\n            while (value < selectionMax + intervalDuration) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                if (dataItem.isHidden()) {\r\n                    dataItem.show();\r\n                }\r\n                dataItem.setRaw(\"value\", value);\r\n                let endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\r\n                endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                dataItem.setRaw(\"endValue\", endValue);\r\n                let date = new Date(value);\r\n                format = formats[gridInterval.timeUnit];\r\n                if (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n                    if (gridInterval.timeUnit != \"year\") {\r\n                        if ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n                            format = this.get(\"periodChangeDateFormats\")[gridInterval.timeUnit];\r\n                        }\r\n                    }\r\n                }\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._root.dateFormatter.format(date, format));\r\n                }\r\n                this._prepareDataItem(dataItem, gridInterval.count);\r\n                previousValue = value;\r\n                value = endValue;\r\n                if (value == previousValue) {\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _updateFinals(start, end) {\r\n        this.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\r\n        this.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\r\n    }\r\n    _getDelta() {\r\n        this._deltaMinMax = this.baseDuration() / 2;\r\n    }\r\n    _fixMin(min) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        const firstDay = this._root.locale.firstDayOfWeek;\r\n        const timezone = this._root.timezone;\r\n        const utc = this._root.utc;\r\n        const timeUnit = baseInterval.timeUnit;\r\n        let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n        let endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit));\r\n        endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n        return startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\r\n    }\r\n    _fixMax(max) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        const firstDay = this._root.locale.firstDayOfWeek;\r\n        const timezone = this._root.timezone;\r\n        const utc = this._root.utc;\r\n        const timeUnit = baseInterval.timeUnit;\r\n        let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n        let endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit));\r\n        endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n        return startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\r\n    }\r\n    _updateDates(_date) {\r\n    }\r\n    /**\r\n     * Returns a duration of currently active `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    baseDuration() {\r\n        return this._baseDuration;\r\n        //return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\r\n    }\r\n    /**\r\n     * Returns a duration of user-defined `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    baseMainDuration() {\r\n        return $time.getIntervalDuration(this.get(\"baseInterval\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(dataItem, fields) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        if (!dataItem.open) {\r\n            dataItem.open = {};\r\n        }\r\n        if (!dataItem.close) {\r\n            dataItem.close = {};\r\n        }\r\n        $array.each(fields, (field) => {\r\n            let value = dataItem.get(field);\r\n            if ($type.isNumber(value)) {\r\n                let startTime = dataItem.open[field];\r\n                let endTime = dataItem.close[field];\r\n                // this is done to save cpu, as rounding is quite expensive, especially with timezone set. \r\n                // if value is between prev start and end, it means it didn't change, all is fine.\r\n                if (value >= startTime && value <= endTime) {\r\n                }\r\n                else {\r\n                    const firstDay = this._root.locale.firstDayOfWeek;\r\n                    const utc = this._root.utc;\r\n                    const timezone = this._root.timezone;\r\n                    const timeUnit = baseInterval.timeUnit;\r\n                    const count = baseInterval.count;\r\n                    startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n                    endTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\r\n                    endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                    dataItem.open[field] = startTime;\r\n                    dataItem.close[field] = endTime;\r\n                }\r\n                this._updateDates(startTime);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, axisLocation) {\r\n        let openValue;\r\n        let closeValue;\r\n        if (dataItem.open && dataItem.close) {\r\n            openValue = dataItem.open[field];\r\n            closeValue = dataItem.close[field];\r\n        }\r\n        else {\r\n            openValue = dataItem.get(field);\r\n            closeValue = openValue;\r\n        }\r\n        let value = openValue + (closeValue - openValue) * cellLocation;\r\n        value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, axisLocation) {\r\n        let openValue;\r\n        let closeValue;\r\n        if (dataItem.open && dataItem.close) {\r\n            openValue = dataItem.open[field];\r\n            closeValue = dataItem.close[field];\r\n        }\r\n        else {\r\n            openValue = dataItem.get(field);\r\n            closeValue = openValue;\r\n        }\r\n        let value = openValue + (closeValue - openValue) * cellLocation;\r\n        value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        let value = this.positionToValue(position);\r\n        value = value - (location - 0.5) * this.baseDuration();\r\n        let baseInterval = this.getPrivate(\"baseInterval\");\r\n        if (!$type.isNaN(value)) {\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const timeUnit = baseInterval.timeUnit;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            const count = baseInterval.count;\r\n            value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\r\n            let duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\r\n            if (timezone) {\r\n                value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\r\n                duration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\r\n            }\r\n            return this.valueToPosition(value + duration * location);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\r\n     * will adjust position by `tooltipIntervalOffset`.\r\n     *\r\n     * @param  position        Position\r\n     * @param  adjustPosition  Adjust position\r\n     * @return                 Tooltip text\r\n     */\r\n    getTooltipText(position, adjustPosition) {\r\n        //@todo number formatter + tag\r\n        if (this.getPrivate(\"min\") != null) {\r\n            let format = this.get(\"tooltipDateFormats\")[this.getPrivate(\"baseInterval\").timeUnit];\r\n            let value = this.positionToValue(position);\r\n            let date = new Date(value);\r\n            let baseInterval = this.getPrivate(\"baseInterval\");\r\n            let duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\r\n            if (adjustPosition !== false) {\r\n                date = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration);\r\n            }\r\n            return this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position, location) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        if (location == null) {\r\n            location = 0.5;\r\n        }\r\n        value = value - (location - 0.5) * this.baseDuration();\r\n        const result = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n            let diValue = 0;\r\n            if (dataItem.open) {\r\n                diValue = dataItem.open[fieldName];\r\n            }\r\n            return $order.compare(diValue, value);\r\n        });\r\n        if (series.get(\"snapTooltip\")) {\r\n            let first = series.dataItems[result.index - 1];\r\n            let second = series.dataItems[result.index];\r\n            if (first && second) {\r\n                if (first.open && second.close) {\r\n                    let open = first.open[fieldName];\r\n                    let close = second.close[fieldName];\r\n                    if (Math.abs(value - open) > Math.abs(value - close)) {\r\n                        return second;\r\n                    }\r\n                }\r\n            }\r\n            if (first) {\r\n                return first;\r\n            }\r\n            if (second) {\r\n                return second;\r\n            }\r\n        }\r\n        else {\r\n            // @todo check if is in range\r\n            const dataItem = series.dataItems[result.index - 1];\r\n            if (dataItem) {\r\n                if (dataItem.open && dataItem.close) {\r\n                    let open = dataItem.open[fieldName];\r\n                    let close = dataItem.close[fieldName];\r\n                    if (value >= open && value <= close) {\r\n                        return dataItem;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(dataItem, nextItem, autoGapCount, fieldName) {\r\n        const value1 = dataItem.get(fieldName);\r\n        const value2 = nextItem.get(fieldName);\r\n        if (value2 - value1 > this.baseDuration() * autoGapCount) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` dates.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start Date\r\n     * @param  end       End Date\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToDates(start, end, duration) {\r\n        this.zoomToValues(start.getTime(), end.getTime(), duration);\r\n    }\r\n    /**\r\n     * Returns a `Date` object corresponding to specific position within plot\r\n     * area.\r\n     *\r\n     * @param   position  Pposition\r\n     * @return            Date\r\n     */\r\n    positionToDate(position) {\r\n        return new Date(this.positionToValue(position));\r\n    }\r\n    /**\r\n     * Returns a relative position within plot area that corresponds to specific\r\n     * date.\r\n     *\r\n     * @param   date  Date\r\n     * @return        Position\r\n     */\r\n    dateToPosition(date) {\r\n        return this.valueToPosition(date.getTime());\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this._intervalDuration / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(DateAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"DateAxis\"\r\n});\r\nObject.defineProperty(DateAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: ValueAxis.classNames.concat([DateAxis.className])\r\n});\r\n//# sourceMappingURL=DateAxis.js.map","import { Label } from \"../../../core/render/Label\";\r\n/**\r\n * Draws an axis label.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisLabel\"\r\n});\r\nObject.defineProperty(AxisLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([AxisLabel.className])\r\n});\r\n//# sourceMappingURL=AxisLabel.js.map","import { Tick } from \"../../../core/render/Tick\";\r\n/**\r\n * Draws an axis tick.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\r\n * @important\r\n */\r\nexport class AxisTick extends Tick {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisTick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisTick\"\r\n});\r\nObject.defineProperty(AxisTick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Tick.classNames.concat([AxisTick.className])\r\n});\r\n//# sourceMappingURL=AxisTick.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\r\nexport class AxisRenderer extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        // save for quick access\r\n        Object.defineProperty(this, \"_axisLength\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 100\r\n        });\r\n        Object.defineProperty(this, \"_start\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_end\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_inversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_minSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * Chart the renderer is used in.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_ls\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_thumbDownPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A list of ticks in the axis.\r\n         *\r\n         * `ticks.template` can be used to configure ticks.\r\n         *\r\n         * @default new ListTemplate<AxisTick>\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisTick._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.ticks.template]))\r\n        });\r\n        /**\r\n         * A list of grid elements in the axis.\r\n         *\r\n         * `grid.template` can be used to configure grid.\r\n         *\r\n         * @default new ListTemplate<Grid>\r\n         */\r\n        Object.defineProperty(this, \"grid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Grid._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.grid.template]))\r\n        });\r\n        /**\r\n         * A list of fills in the axis.\r\n         *\r\n         * `axisFills.template` can be used to configure axis fills.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"axisFills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\r\n            }, [this.axisFills.template]))\r\n        });\r\n        /**\r\n         * A list of labels in the axis.\r\n         *\r\n         * `labels.template` can be used to configure axis labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabel>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisLabel._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * An [[Axis]] renderer is for.\r\n         */\r\n        Object.defineProperty(this, \"axis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem, themeTags) {\r\n        const tick = this.ticks.make();\r\n        tick._setDataItem(dataItem);\r\n        dataItem.setRaw(\"tick\", tick);\r\n        tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.push(tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeGrid(dataItem, themeTags) {\r\n        const grid = this.grid.make();\r\n        grid._setDataItem(dataItem);\r\n        dataItem.setRaw(\"grid\", grid);\r\n        grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(grid);\r\n        this.grid.push(grid);\r\n        return grid;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeAxisFill(dataItem, themeTags) {\r\n        const axisFill = this.axisFills.make();\r\n        axisFill._setDataItem(dataItem);\r\n        axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(axisFill);\r\n        dataItem.setRaw(\"axisFill\", axisFill);\r\n        this.axisFills.push(axisFill);\r\n        return axisFill;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem, themeTags) {\r\n        const label = this.labels.make();\r\n        label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.moveValue(label, 0);\r\n        label._setDataItem(dataItem);\r\n        dataItem.setRaw(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    axisLength() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    gridCount() {\r\n        return this.axisLength() / this.get(\"minGridDistance\", 50);\r\n    }\r\n    _updatePositions() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"isMeasured\", false);\r\n        const thumb = this.thumb;\r\n        if (thumb) {\r\n            this._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\r\n                this._handleThumbDown(event.originalEvent);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\r\n                this._handleThumbUp(event.originalEvent);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\r\n                this._handleThumbMove(event.originalEvent);\r\n            }));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pan\")) {\r\n            const thumb = this.thumb;\r\n            if (thumb) {\r\n                const labelsContainer = this.axis.labelsContainer;\r\n                const pan = this.get(\"pan\");\r\n                if (pan == \"zoom\") {\r\n                    labelsContainer.children.push(thumb);\r\n                }\r\n                else if (pan == \"none\") {\r\n                    labelsContainer.children.removeValue(thumb);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleThumbDown(event) {\r\n        this._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n        const axis = this.axis;\r\n        this._downStart = axis.get(\"start\");\r\n        this._downEnd = axis.get(\"end\");\r\n    }\r\n    _handleThumbUp(_event) {\r\n        this._thumbDownPoint = undefined;\r\n    }\r\n    _handleThumbMove(event) {\r\n        const downPoint = this._thumbDownPoint;\r\n        if (downPoint) {\r\n            const point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n            const downStart = this._downStart;\r\n            const downEnd = this._downEnd;\r\n            const extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\r\n            this.axis.setAll({ start: downStart - extra, end: downEnd + extra });\r\n        }\r\n    }\r\n    _getPan(_point1, _point2) {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(_tooltip) { }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position = position * (end - start);\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n    _updateLC() {\r\n    }\r\n    toggleVisibility(sprite, position, minPosition, maxPosition) {\r\n        let axis = this.axis;\r\n        const start = axis.get(\"start\", 0);\r\n        const end = axis.get(\"end\", 1);\r\n        let updatedStart = start + (end - start) * (minPosition - 0.0001);\r\n        let updatedEnd = start + (end - start) * (maxPosition + 0.0001);\r\n        if (position < updatedStart || position > updatedEnd) {\r\n            sprite.setPrivate(\"visible\", false);\r\n        }\r\n        else {\r\n            sprite.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    _positionTooltip(tooltip, point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            if (chart.inPlot(point)) {\r\n                tooltip.set(\"pointTo\", this._display.toGlobal(point));\r\n            }\r\n            else {\r\n                tooltip.hide();\r\n            }\r\n        }\r\n    }\r\n    processAxis() { }\r\n}\r\nObject.defineProperty(AxisRenderer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRenderer\"\r\n});\r\nObject.defineProperty(AxisRenderer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([AxisRenderer.className])\r\n});\r\n//# sourceMappingURL=AxisRenderer.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"X\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"height\", p100);\r\n        gridTemplate.set(\"width\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, graphics.height());\r\n        });\r\n        this.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"x\", -1000);\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const chart = this.chart;\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.topAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.insertIndex(0, axis);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                else {\r\n                    const children = chart.bottomAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point2.x - point1.x) / this.width();\r\n    }\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const w = parent.innerWidth();\r\n            this._lc = this.axisLength() / w;\r\n            this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\r\n        }\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0);\r\n        axis.gridContainer.set(\"x\", x);\r\n        axis.topGridContainer.set(\"x\", x);\r\n        axis.bulletsContainer.set(\"y\", this.y());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let width = axis.get(\"marginLeft\", 0);\r\n            let x = axis.x() - width;\r\n            const parent = axis.parent;\r\n            if (parent) {\r\n                x -= parent.get(\"paddingLeft\", 0);\r\n            }\r\n            if (axisHeader.children.length > 0) {\r\n                width = axis.axisHeader.width();\r\n                axis.set(\"marginLeft\", width + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"width\", width);\r\n            }\r\n            axisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        axis.set(\"width\", p100);\r\n        const verticalLayout = this._root.verticalLayout;\r\n        axis.set(\"layout\", verticalLayout);\r\n        axis.labelsContainer.set(\"width\", p100);\r\n        axis.axisHeader.setAll({ layout: verticalLayout });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.width();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: this.positionToCoordinate(position), y: 0 };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"x\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"y\", p100);\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                tick.set(\"y\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, length);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            const opposite = this.get(\"opposite\");\r\n            if (opposite) {\r\n                if (!inside) {\r\n                    label.set(\"position\", \"relative\");\r\n                    label.set(\"y\", p100);\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"absolute\");\r\n                    label.set(\"y\", 0);\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    label.set(\"y\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n                else {\r\n                    label.set(\"y\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = -1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = 1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"y\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"x\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let x0 = this.positionToCoordinate(position);\r\n            let x1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, x0, x1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, x0, x1) {\r\n        fill.set(\"draw\", (display) => {\r\n            //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\r\n            // using for holes, so can not be rectangle\r\n            const h = this.axis.gridContainer.height();\r\n            const w = this.width();\r\n            if (x1 < x0) {\r\n                [x1, x0] = [x0, x1];\r\n            }\r\n            if (x0 > w || x1 < 0) {\r\n                return;\r\n            }\r\n            /*\r\n            const limit = 10000;\r\n\r\n            x0 = Math.max(-limit, x0);\r\n            x1 = Math.min(limit, x1);\r\n            */\r\n            display.moveTo(x0, 0);\r\n            display.lineTo(x1, 0);\r\n            display.lineTo(x1, h);\r\n            display.lineTo(x0, h);\r\n            display.lineTo(x0, 0);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let x = global.x;\r\n        let y = 0;\r\n        let w = this.axisLength();\r\n        let h = num;\r\n        let pointerOrientation = \"up\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererX, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererX\"\r\n});\r\nObject.defineProperty(AxisRendererX, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\r\n});\r\n//# sourceMappingURL=AxisRendererX.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\r\n        if (this._settings.opposite) {\r\n            this._settings.themeTags.push(\"opposite\");\r\n        }\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"Y\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"width\", p100);\r\n        gridTemplate.set(\"height\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n        this.set(\"draw\", (display, renderer) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, renderer.height());\r\n        });\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point1.y - point2.y) / this.height();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"y\", -1000);\r\n        const thumb = this.thumb;\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        const chart = this.chart;\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.rightAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis, 0);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                else {\r\n                    const children = chart.leftAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        const w = axis.labelsContainer.width();\r\n        if (chart) {\r\n            if (this.get(opposite)) {\r\n                thumb.set(\"centerX\", 0);\r\n            }\r\n            else {\r\n                thumb.set(\"centerX\", w);\r\n            }\r\n        }\r\n        thumb.setPrivate(\"width\", w);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"height\") == null) {\r\n            axis.set(\"height\", p100);\r\n        }\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        axis.set(\"layout\", horizontalLayout);\r\n        axis.labelsContainer.set(\"height\", p100);\r\n        axis.axisHeader.set(\"layout\", horizontalLayout);\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\r\n        axis.gridContainer.set(\"y\", y);\r\n        axis.topGridContainer.set(\"y\", y);\r\n        axis.bulletsContainer.set(\"x\", this.x());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let height = axis.get(\"marginTop\", 0);\r\n            if (axisHeader.children.length > 0) {\r\n                height = axis.axisHeader.height();\r\n                axis.set(\"marginTop\", height + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"height\", height);\r\n            }\r\n            axisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.innerHeight();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: 0, y: this.positionToCoordinate(position) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            const opposite = this.get(\"opposite\");\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            if (opposite) {\r\n                label.set(\"x\", 0);\r\n                if (inside) {\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    label.set(\"x\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"x\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"y\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"x\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(length, 0);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = 1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = -1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"x\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"y\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let y0 = this.positionToCoordinate(position);\r\n            let y1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, y0, y1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, y0, y1) {\r\n        fill.set(\"draw\", (display) => {\r\n            // using for holes, so can not be rectangle\r\n            const w = this.axis.gridContainer.width();\r\n            const h = this.height();\r\n            if (y1 < y0) {\r\n                [y1, y0] = [y0, y1];\r\n            }\r\n            if (y0 > h || y1 < 0) {\r\n                return;\r\n            }\r\n            //y0 = Math.max(0, y0);\r\n            //y1 = Math.min(h, y1);\r\n            display.moveTo(0, y0);\r\n            display.lineTo(w, y0);\r\n            display.lineTo(w, y1);\r\n            display.lineTo(0, y1);\r\n            display.lineTo(0, y0);\r\n        });\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (!this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let y = global.y;\r\n        let x = 0;\r\n        let h = this.axisLength();\r\n        let w = num;\r\n        let pointerOrientation = \"right\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const h = parent.innerHeight();\r\n            this._lc = this.axisLength() / h;\r\n            this._ls = axis.y() / h;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (!this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererY, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererY\"\r\n});\r\nObject.defineProperty(AxisRendererY, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererY.className])\r\n});\r\n//# sourceMappingURL=AxisRendererY.js.map","import { XYSeries } from \"./XYSeries\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { line, area } from \"d3-shape\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { color } from \"../../../core/util/Color\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Used to plot line and/or area series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\r\n * @important\r\n */\r\nexport class LineSeries extends XYSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_endIndex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: line()\r\n        });\r\n        Object.defineProperty(this, \"_fillGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: area()\r\n        });\r\n        Object.defineProperty(this, \"_legendStroke\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_legendFill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all line segments in series.\r\n         *\r\n         * `strokes.template` can be used to set default settings for all line\r\n         * segments, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"strokes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\r\n            }, [this.strokes.template]))\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all segment fills in series.\r\n         *\r\n         * `fills.template` can be used to set default settings for all segment\r\n         * fills, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"fills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\r\n            }, [this.fills.template]))\r\n        });\r\n        // custom set from data\r\n        Object.defineProperty(this, \"_fillTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_previousPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [0, 0, 0, 0]\r\n        });\r\n        Object.defineProperty(this, \"_dindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_sindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._fillGenerator.y0(function (p) {\r\n            return p[3];\r\n        });\r\n        this._fillGenerator.x0(function (p) {\r\n            return p[2];\r\n        });\r\n        this._fillGenerator.y1(function (p) {\r\n            return p[1];\r\n        });\r\n        this._fillGenerator.x1(function (p) {\r\n            return p[0];\r\n        });\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeStroke(strokes) {\r\n        const stroke = this.mainContainer.children.push(strokes.make());\r\n        strokes.push(stroke);\r\n        return stroke;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeFill(fills) {\r\n        const fill = this.mainContainer.children.push(fills.make());\r\n        fills.push(fill);\r\n        return fill;\r\n    }\r\n    _updateChildren() {\r\n        this._strokeTemplate = undefined;\r\n        this._fillTemplate = undefined;\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        if (this.isDirty(\"stroke\")) {\r\n            const stroke = this.get(\"stroke\");\r\n            this.strokes.template.set(\"stroke\", stroke);\r\n            const legendStroke = this._legendStroke;\r\n            if (legendStroke) {\r\n                legendStroke.states.lookup(\"default\").set(\"stroke\", stroke);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\")) {\r\n            const fill = this.get(\"fill\");\r\n            this.fills.template.set(\"fill\", fill);\r\n            const legendFill = this._legendFill;\r\n            if (legendFill) {\r\n                legendFill.states.lookup(\"default\").set(\"fill\", fill);\r\n            }\r\n        }\r\n        if (this.isDirty(\"curveFactory\")) {\r\n            const curveFactory = this.get(\"curveFactory\");\r\n            if (curveFactory) {\r\n                this._strokeGenerator.curve(curveFactory);\r\n                this._fillGenerator.curve(curveFactory);\r\n            }\r\n        }\r\n        if (xAxis.inited && yAxis.inited) {\r\n            if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\r\n                this.fills.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.strokes.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.axisRanges.each((axisRange) => {\r\n                    let fills = axisRange.fills;\r\n                    if (fills) {\r\n                        fills.each((fill) => {\r\n                            fill.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                    let strokes = axisRange.strokes;\r\n                    if (strokes) {\r\n                        strokes.each((stroke) => {\r\n                            stroke.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                });\r\n                let startIndex = this.startIndex();\r\n                let strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n                let fillTemplateField = this.fills.template.get(\"templateField\");\r\n                let strokeTemplateFound = true;\r\n                let fillTemplateFound = true;\r\n                if (strokeTemplateField) {\r\n                    strokeTemplateFound = false;\r\n                }\r\n                if (fillTemplateField) {\r\n                    fillTemplateFound = false;\r\n                }\r\n                for (let i = startIndex - 1; i >= 0; i--) {\r\n                    let dataItem = this.dataItems[i];\r\n                    let hasValues = true;\r\n                    let dataContext = dataItem.dataContext;\r\n                    if (strokeTemplateField) {\r\n                        if (dataContext[strokeTemplateField]) {\r\n                            strokeTemplateFound = true;\r\n                        }\r\n                    }\r\n                    if (fillTemplateField) {\r\n                        if (dataContext[fillTemplateField]) {\r\n                            fillTemplateFound = true;\r\n                        }\r\n                    }\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (!$type.isNumber(dataItem.get(field))) {\r\n                            hasValues = false;\r\n                        }\r\n                    });\r\n                    if (hasValues && strokeTemplateFound && fillTemplateFound) {\r\n                        startIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                let len = this.dataItems.length;\r\n                let endIndex = this.endIndex();\r\n                if (endIndex < len) {\r\n                    endIndex++;\r\n                    for (let i = endIndex; i < len; i++) {\r\n                        let dataItem = this.dataItems[i];\r\n                        let hasValues = true;\r\n                        $array.each(this._valueFields, (field) => {\r\n                            if (!$type.isNumber(dataItem.get(field))) {\r\n                                hasValues = false;\r\n                            }\r\n                        });\r\n                        if (hasValues) {\r\n                            endIndex = i + 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                this._endIndex = endIndex;\r\n                this._clearGraphics();\r\n                this._sindex = 0;\r\n                this._dindex = startIndex;\r\n                if (this.dataItems.length == 1) {\r\n                    this._startSegment(0);\r\n                }\r\n                else {\r\n                    // this is done to avoid recursion with a lot of segments \r\n                    while (this._dindex < endIndex - 1) {\r\n                        this._startSegment(this._dindex);\r\n                        this._sindex++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._skipped = true;\r\n        }\r\n        super._updateChildren();\r\n    }\r\n    _clearGraphics() {\r\n        this.strokes.clear();\r\n        this.fills.clear();\r\n    }\r\n    _startSegment(dataItemIndex) {\r\n        let endIndex = this._endIndex;\r\n        let currentEndIndex = endIndex;\r\n        const autoGapCount = this.get(\"autoGapCount\");\r\n        const connect = this.get(\"connect\");\r\n        const fill = this.makeFill(this.fills);\r\n        const fillTemplate = this._fillTemplate;\r\n        const originalTemplate = this.fills.template;\r\n        if (fillTemplate && fillTemplate != originalTemplate) {\r\n            fill.template = fillTemplate;\r\n        }\r\n        fill.setPrivate(\"visible\", true);\r\n        const stroke = this.makeStroke(this.strokes);\r\n        const strokeTemplate = this._strokeTemplate;\r\n        if (strokeTemplate && strokeTemplate != this.strokes.template) {\r\n            stroke.template = strokeTemplate;\r\n        }\r\n        stroke.setPrivate(\"visible\", true);\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        let baseAxis = this.get(\"baseAxis\");\r\n        let vcx = this.get(\"vcx\", 1);\r\n        let vcy = this.get(\"vcy\", 1);\r\n        let xField = this._xField;\r\n        let yField = this._yField;\r\n        let xOpenField = this._xOpenField;\r\n        let yOpenField = this._yOpenField;\r\n        const xOpenFieldValue = this.get(\"openValueXField\");\r\n        const yOpenFieldValue = this.get(\"openValueYField\");\r\n        if (!xOpenFieldValue) {\r\n            xOpenField = this._xField;\r\n        }\r\n        if (!yOpenFieldValue) {\r\n            yOpenField = this._yField;\r\n        }\r\n        const stacked = this.get(\"stacked\");\r\n        const basePosX = xAxis.basePosition();\r\n        const basePosY = yAxis.basePosition();\r\n        let baseField;\r\n        if (baseAxis === yAxis) {\r\n            baseField = this._yField;\r\n        }\r\n        else {\r\n            baseField = this._xField;\r\n        }\r\n        const segments = [];\r\n        let points = [];\r\n        segments.push(points);\r\n        const strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n        const fillTemplateField = this.fills.template.get(\"templateField\");\r\n        let locationX = this.get(\"locationX\", 0.5);\r\n        let locationY = this.get(\"locationY\", 0.5);\r\n        let openLocationX = this.get(\"openLocationX\", locationX);\r\n        let openLocationY = this.get(\"openLocationY\", locationY);\r\n        const minDistance = this.get(\"minDistance\", 0);\r\n        let i;\r\n        let fillVisible = this.fills.template.get(\"visible\");\r\n        if (this.axisRanges.length > 0) {\r\n            fillVisible = true;\r\n        }\r\n        let getOpen = false;\r\n        if (stacked || xOpenFieldValue || yOpenFieldValue) {\r\n            getOpen = true;\r\n        }\r\n        const o = {\r\n            points, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\r\n        };\r\n        for (i = dataItemIndex; i < currentEndIndex; i++) {\r\n            this._dindex = i;\r\n            const dataItem = this._dataItems[i];\r\n            let valueX = dataItem.get(xField);\r\n            let valueY = dataItem.get(yField);\r\n            if (valueX == null || valueY == null) {\r\n                if (!connect) {\r\n                    points = [];\r\n                    segments.push(points);\r\n                    o.points = points;\r\n                }\r\n            }\r\n            else {\r\n                this._getPoints(dataItem, o);\r\n            }\r\n            if (strokeTemplateField) {\r\n                let strokeTemplate = dataItem.dataContext[strokeTemplateField];\r\n                if (strokeTemplate) {\r\n                    if (!(strokeTemplate instanceof Template)) {\r\n                        strokeTemplate = Template.new(strokeTemplate);\r\n                    }\r\n                    this._strokeTemplate = strokeTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        stroke.template = strokeTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (fillTemplateField) {\r\n                let fillTemplate = dataItem.dataContext[fillTemplateField];\r\n                if (fillTemplate) {\r\n                    if (!(fillTemplate instanceof Template)) {\r\n                        fillTemplate = Template.new(fillTemplate);\r\n                    }\r\n                    this._fillTemplate = fillTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        fill.template = fillTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (!connect) {\r\n                let nextItem = this.dataItems[i + 1];\r\n                if (nextItem) {\r\n                    if (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\r\n                        points = [];\r\n                        segments.push(points);\r\n                        o.points = points;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n        stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        if (i === endIndex) {\r\n            this._endLine(points, segments[0][0]);\r\n        }\r\n        if (stroke) {\r\n            this._drawStroke(stroke, segments);\r\n        }\r\n        if (fill) {\r\n            this._drawFill(fill, segments);\r\n        }\r\n        this.axisRanges.each((axisRange) => {\r\n            const container = axisRange.container;\r\n            const fills = axisRange.fills;\r\n            const fill = this.makeFill(fills);\r\n            if (container) {\r\n                container.children.push(fill);\r\n            }\r\n            fill.setPrivate(\"visible\", true);\r\n            this._drawFill(fill, segments);\r\n            const strokes = axisRange.strokes;\r\n            const stroke = this.makeStroke(strokes);\r\n            if (container) {\r\n                container.children.push(stroke);\r\n            }\r\n            stroke.setPrivate(\"visible\", true);\r\n            this._drawStroke(stroke, segments);\r\n            fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n            stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        });\r\n    }\r\n    _getPoints(dataItem, o) {\r\n        let points = o.points;\r\n        let itemLocationX = dataItem.get(\"locationX\", o.locationX);\r\n        let itemLocationY = dataItem.get(\"locationY\", o.locationY);\r\n        let xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\r\n        let yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\r\n        if (this._shouldInclude(xPos)) {\r\n            const iPoint = this.getPoint(xPos, yPos);\r\n            const point = [iPoint.x, iPoint.y];\r\n            iPoint.x += this._x;\r\n            iPoint.y += this._y;\r\n            dataItem.set(\"point\", iPoint);\r\n            if (o.fillVisible) {\r\n                let xPos0 = xPos;\r\n                let yPos0 = yPos;\r\n                if (o.baseAxis === o.xAxis) {\r\n                    yPos0 = o.basePosY;\r\n                }\r\n                else if (o.baseAxis === o.yAxis) {\r\n                    xPos0 = o.basePosX;\r\n                }\r\n                if (o.getOpen) {\r\n                    let valueX = dataItem.get(o.xOpenField);\r\n                    let valueY = dataItem.get(o.yOpenField);\r\n                    if (valueX != null && valueY != null) {\r\n                        let itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\r\n                        let itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\r\n                        if (o.stacked) {\r\n                            let stackToItemX = dataItem.get(\"stackToItemX\");\r\n                            let stackToItemY = dataItem.get(\"stackToItemY\");\r\n                            if (stackToItemX) {\r\n                                xPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, stackToItemX.component.get(\"vcx\"));\r\n                                if ($type.isNaN(xPos0)) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.yAxis === o.baseAxis) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                                else {\r\n                                    xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\r\n                                }\r\n                            }\r\n                            if (stackToItemY) {\r\n                                yPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, stackToItemY.component.get(\"vcy\"));\r\n                                if ($type.isNaN(yPos0)) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.xAxis === o.baseAxis) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                                else {\r\n                                    yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\r\n                            yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\r\n                        }\r\n                    }\r\n                }\r\n                let closeIPoint = this.getPoint(xPos0, yPos0);\r\n                point[2] = closeIPoint.x;\r\n                point[3] = closeIPoint.y;\r\n            }\r\n            if (o.minDistance > 0) {\r\n                const p0 = point[0];\r\n                const p1 = point[1];\r\n                const p2 = point[2];\r\n                const p3 = point[3];\r\n                const prev = this._previousPoint;\r\n                const pp0 = prev[0];\r\n                const pp1 = prev[1];\r\n                const pp2 = prev[2];\r\n                const pp3 = prev[3];\r\n                if (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\r\n                    points.push(point);\r\n                    this._previousPoint = point;\r\n                }\r\n            }\r\n            else {\r\n                points.push(point);\r\n            }\r\n        }\r\n    }\r\n    _endLine(_points, _firstPoint) {\r\n    }\r\n    _drawStroke(graphics, segments) {\r\n        if (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._strokeGenerator.context(display);\r\n                    this._strokeGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _drawFill(graphics, segments) {\r\n        if (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._fillGenerator.context(display);\r\n                    this._fillGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.fills = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.fills.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\r\n        }, [this.fills.template, axisRange.fills.template]));\r\n        axisRange.strokes = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\r\n        }, [this.strokes.template, axisRange.strokes.template]));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const marker = legendDataItem.get(\"marker\");\r\n            const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n            if (markerRectangle) {\r\n                markerRectangle.setPrivate(\"visible\", false);\r\n            }\r\n            marker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }));\r\n            const legendStroke = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\r\n            }, [this.strokes.template]));\r\n            this._legendStroke = legendStroke;\r\n            const legendFill = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\r\n            }, [this.fills.template]));\r\n            this._legendFill = legendFill;\r\n            const disabledColor = this._root.interfaceColors.get(\"disabled\");\r\n            legendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            legendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            if (this.bullets.length > 0) {\r\n                const bulletFunction = this.bullets.getIndex(0);\r\n                if (bulletFunction) {\r\n                    const bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\r\n                    if (bullet) {\r\n                        const sprite = bullet.get(\"sprite\");\r\n                        if (sprite instanceof Graphics) {\r\n                            sprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n                        }\r\n                        if (sprite) {\r\n                            sprite.set(\"tooltipText\", undefined);\r\n                            sprite.set(\"tooltipHTML\", undefined);\r\n                            marker.children.push(sprite);\r\n                            sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(LineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LineSeries\"\r\n});\r\nObject.defineProperty(LineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: XYSeries.classNames.concat([LineSeries.className])\r\n});\r\n//# sourceMappingURL=LineSeries.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $ease from \"../../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport class FlowDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/flow\r\n         * ========================================================================\r\n         */\r\n        r(\"Flow\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            hiddenSize: 0.05,\r\n            minSize: 0,\r\n            minHiddenValue: 0\r\n        });\r\n        r(\"FlowNodes\").setAll({\r\n            colors: ColorSet.new(this._root, {}),\r\n            legendLabelText: \"{name}\",\r\n            legendValueText: \"{sumOutgoing.formatNumber('#.#')}\"\r\n        });\r\n        r(\"FlowNode\").setAll({\r\n            setStateOnChildren: true,\r\n            cursorOverStyle: \"pointer\",\r\n            toggleKey: \"disabled\"\r\n        });\r\n        r(\"FlowNode\").states.create(\"disabled\", {}); // do not remove\r\n        r(\"FlowNode\", [\"unknown\"]).setAll({\r\n            draggable: false,\r\n            opacity: 0\r\n        });\r\n        r(\"Label\", [\"flow\"]).states.create(\"disabled\", {\r\n            fill: ic.get(\"disabled\")\r\n        });\r\n        r(\"RadialLabel\", [\"flow\", \"node\"]).setAll({\r\n            text: \"{name}\",\r\n            populateText: true\r\n        });\r\n        r(\"FlowLink\").setAll({\r\n            fillStyle: \"gradient\",\r\n            strokeStyle: \"gradient\"\r\n        });\r\n        r(\"FlowLink\", [\"source\", \"unknown\"]).setAll({});\r\n        r(\"FlowLink\", [\"target\", \"unknown\"]).setAll({});\r\n        r(\"FlowNode\").events.on(\"pointerover\", (e) => {\r\n            const dataItem = e.target.dataItem;\r\n            if (dataItem) {\r\n                const outgoing = dataItem.get(\"outgoingLinks\");\r\n                if (outgoing) {\r\n                    $array.each(outgoing, (linkDataItem) => {\r\n                        const link = linkDataItem.get(\"link\");\r\n                        link.hover();\r\n                        link.hideTooltip();\r\n                    });\r\n                }\r\n                const incoming = dataItem.get(\"incomingLinks\");\r\n                if (incoming) {\r\n                    $array.each(incoming, (linkDataItem) => {\r\n                        const link = linkDataItem.get(\"link\");\r\n                        link.hover();\r\n                        link.hideTooltip();\r\n                    });\r\n                }\r\n            }\r\n            let rectangle = dataItem.get(\"slice\") || dataItem.get(\"rectangle\");\r\n            if (rectangle && rectangle.get(\"tooltipText\")) {\r\n                rectangle.showTooltip();\r\n            }\r\n        });\r\n        r(\"FlowNode\").events.on(\"pointerout\", (e) => {\r\n            const dataItem = e.target.dataItem;\r\n            if (dataItem) {\r\n                const outgoing = dataItem.get(\"outgoingLinks\");\r\n                if (outgoing) {\r\n                    $array.each(outgoing, (linkDataItem) => {\r\n                        linkDataItem.get(\"link\").unhover();\r\n                    });\r\n                }\r\n                const incoming = dataItem.get(\"incomingLinks\");\r\n                if (incoming) {\r\n                    $array.each(incoming, (linkDataItem) => {\r\n                        linkDataItem.get(\"link\").unhover();\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/flow: Sankey\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sankey\").setAll({\r\n            orientation: \"horizontal\",\r\n            nodeAlign: \"justify\",\r\n            linkTension: 0.5,\r\n            nodePadding: 10,\r\n            nodeWidth: 10\r\n        });\r\n        // Class: RoundedRectangle\r\n        r(\"RoundedRectangle\", [\"sankey\", \"node\", \"shape\"]).setAll({\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"shape\"]).states.create(\"disabled\", {\r\n            fill: ic.get(\"disabled\")\r\n        });\r\n        r(\"SankeyLink\").setAll({\r\n            controlPointDistance: 0.2\r\n        });\r\n        r(\"FlowNode\", [\"sankey\"]).setAll({\r\n            draggable: true\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"sankey\", \"link\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.2,\r\n                strokeOpacity: 0,\r\n                interactive: true,\r\n                tooltipText: \"{sourceId} - {targetId}: {value}\"\r\n            });\r\n            setColor(rule, \"fill\", ic, \"grid\");\r\n        }\r\n        r(\"Graphics\", [\"sankey\", \"link\"]).states.create(\"hover\", { fillOpacity: 0.5 });\r\n        r(\"Label\", [\"sankey\", \"node\"]).setAll({\r\n            text: \"{name}\",\r\n            populateText: true\r\n        });\r\n        r(\"Label\", [\"sankey\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            paddingLeft: 15\r\n        });\r\n        r(\"Label\", [\"sankey\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            centerX: p50,\r\n            paddingTop: 15\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/flow: Chord\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Chord\").setAll({\r\n            radius: percent(90),\r\n            nodeWidth: 10,\r\n            padAngle: 1,\r\n            startAngle: 0,\r\n            sort: \"none\"\r\n        });\r\n        r(\"ChordDirected\").setAll({\r\n            linkHeadRadius: 10\r\n        });\r\n        r(\"ChordNodes\").setAll({\r\n            x: p50,\r\n            y: p50\r\n        });\r\n        r(\"FlowNode\", [\"chord\"]).setAll({\r\n            draggable: true\r\n        });\r\n        r(\"ChordLink\").setAll({\r\n            sourceRadius: p100,\r\n            targetRadius: p100,\r\n            fillStyle: \"solid\",\r\n            strokeStyle: \"solid\",\r\n            tooltipText: \"{sourceId} - {targetId}: {value}\"\r\n        });\r\n        r(\"Slice\", [\"chord\", \"node\", \"shape\"]).setAll({\r\n            cornerRadius: 0\r\n        });\r\n        r(\"Slice\", [\"shape\"]).states.create(\"disabled\", {\r\n            fill: ic.get(\"disabled\")\r\n        });\r\n        r(\"RadialLabel\", [\"chord\", \"node\"]).setAll({\r\n            radius: 5,\r\n            textType: \"circular\"\r\n        });\r\n        r(\"ChordLinkDirected\").setAll({\r\n            headRadius: 10\r\n        });\r\n        // Class: Graphics\r\n        {\r\n            const rule = r(\"Graphics\", [\"chord\", \"link\", \"shape\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.2,\r\n                strokeOpacity: 0,\r\n                interactive: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"grid\");\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Graphics\", [\"chord\", \"link\", \"shape\"]).states.create(\"hover\", { fillOpacity: 0.5 });\r\n        r(\"ChordNonRibbon\").setAll({\r\n            linkType: \"curve\" // \"line\" | \"curve\"\r\n        });\r\n        r(\"ChordLink\", [\"basic\"]).setAll({\r\n            fillStyle: \"none\",\r\n            strokeStyle: \"source\"\r\n        });\r\n        r(\"Graphics\", [\"chord\", \"link\", \"shape\", \"basic\"]).setAll({\r\n            strokeOpacity: 0.4\r\n        });\r\n        r(\"Graphics\", [\"chord\", \"link\", \"shape\", \"basic\"]).states.create(\"hover\", { strokeWidth: 2, strokeOpacity: 1 });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/flow: ArcDiagram\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"ArcDiagram\").setAll({\r\n            orientation: \"horizontal\",\r\n            nodePadding: 5,\r\n            minRadius: 5,\r\n            radiusKey: \"sum\",\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"ArcDiagramNodes\", [\"horizontal\"]).setAll({\r\n            y: p100,\r\n            centerY: p100\r\n        });\r\n        r(\"ArcDiagramNodes\", [\"vertical\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"Circle\", [\"arcdiagram\", \"node\", \"shape\"]).setAll({\r\n            tooltipText: \"{name}: {sum}\"\r\n        });\r\n        r(\"Circle\", [\"arcdiagram\", \"node\", \"shape\"]).states.create(\"disabled\", {\r\n            fill: ic.get(\"disabled\")\r\n        });\r\n        {\r\n            const rule = r(\"ArcDiagramLink\", [\"link\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.15,\r\n                strokeStyle: \"solid\",\r\n                fillStyle: \"none\",\r\n                isMeasured: false\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"ArcDiagramLink\", [\"link\", \"shape\"]).states.create(\"hover\", {\r\n            strokeOpacity: 1\r\n        });\r\n        r(\"Label\", [\"arcdiagram\", \"node\"]).setAll({\r\n            text: \"{name}\",\r\n            populateText: true\r\n        });\r\n        r(\"Label\", [\"arcdiagram\", \"horizontal\"]).setAll({\r\n            y: 0,\r\n            centerY: p50,\r\n            centerX: p100,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"arcdiagram\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: p100,\r\n            paddingRight: 15\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=FlowDefaultTheme.js.map","import { __awaiter } from \"tslib\";\r\nimport { FlowDefaultTheme } from \"./FlowDefaultTheme\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * A base class for all flow type series: [[Sankey]] and [[Chord]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more info\r\n */\r\nexport class Flow extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Container series will place their links in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"linksContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        Object.defineProperty(this, \"_nodesData\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_linksData\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_nodesDataSet\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_linksByIndex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(FlowDefaultTheme.new(this._root));\r\n        this.fields.push(\"disabled\", \"sourceId\", \"targetId\");\r\n        if (this.nodes) {\r\n            this.nodes.flow = this;\r\n        }\r\n        super._afterNew();\r\n        this.children.push(this.bulletsContainer);\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const nodes = this.nodes;\r\n        if (nodes) {\r\n            let unknown = false;\r\n            let sourceId = dataItem.get(\"sourceId\");\r\n            let sourceDataItem = nodes.getDataItemById(sourceId);\r\n            if (!sourceDataItem) {\r\n                if (sourceId == null) {\r\n                    sourceId = \"undefined\" + this._index;\r\n                    this._index++;\r\n                    unknown = true;\r\n                }\r\n                nodes.data.push({ id: sourceId, unknown: unknown });\r\n                sourceDataItem = nodes.getDataItemById(sourceId);\r\n                if (!unknown) {\r\n                    sourceDataItem.set(\"name\", sourceId);\r\n                }\r\n            }\r\n            unknown = false;\r\n            let targetId = dataItem.get(\"targetId\");\r\n            let targetDataItem = nodes.getDataItemById(targetId);\r\n            if (!targetDataItem) {\r\n                if (targetId == null) {\r\n                    targetId = \"undefined\" + this._index;\r\n                    this._index++;\r\n                    unknown = true;\r\n                }\r\n                nodes.data.push({ id: targetId, unknown: unknown });\r\n                targetDataItem = nodes.getDataItemById(targetId);\r\n                if (!unknown) {\r\n                    targetDataItem.set(\"name\", targetId);\r\n                }\r\n            }\r\n            if (sourceDataItem) {\r\n                dataItem.set(\"source\", sourceDataItem);\r\n                nodes.addOutgoingLink(sourceDataItem, dataItem);\r\n            }\r\n            if (targetDataItem) {\r\n                dataItem.set(\"target\", targetDataItem);\r\n                nodes.addincomingLink(targetDataItem, dataItem);\r\n            }\r\n            dataItem.set(\"link\", this.makeLink(dataItem));\r\n            const sourceIndex = this.nodes.dataItems.indexOf(sourceDataItem);\r\n            const targetIndex = this.nodes.dataItems.indexOf(targetDataItem);\r\n            this._linksByIndex[sourceIndex + \"_\" + targetIndex] = dataItem;\r\n            if (sourceDataItem.get(\"unknown\")) {\r\n                if (targetDataItem) {\r\n                    sourceDataItem.set(\"fill\", targetDataItem.get(\"fill\"));\r\n                }\r\n                dataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\r\n            }\r\n            if (targetDataItem.get(\"unknown\")) {\r\n                if (sourceDataItem) {\r\n                    targetDataItem.set(\"fill\", sourceDataItem.get(\"fill\"));\r\n                }\r\n                dataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\r\n            }\r\n            this._updateLinkColor(dataItem);\r\n        }\r\n    }\r\n    _onDataClear() {\r\n        if (!this.nodes._userDataSet) {\r\n            this.nodes.data.setAll([]);\r\n            this.nodes._userDataSet = false;\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let valueLow = Infinity;\r\n        let valueHigh = -Infinity;\r\n        let valueSum = 0;\r\n        if (this._valuesDirty) {\r\n            this._nodesData = [];\r\n            const nodes = this.nodes;\r\n            if (nodes) {\r\n                $array.each(nodes.dataItems, (dataItem) => {\r\n                    const d3SankeyNode = dataItem.get(\"d3SankeyNode\");\r\n                    this._nodesData.push(d3SankeyNode);\r\n                    const incoming = dataItem.get(\"incomingLinks\");\r\n                    let sumIncoming = 0;\r\n                    let sumIncomingWorking = 0;\r\n                    if (incoming) {\r\n                        $array.each(incoming, (link) => {\r\n                            const value = link.get(\"value\");\r\n                            const workingValue = link.get(\"valueWorking\");\r\n                            sumIncoming += value;\r\n                            sumIncomingWorking += workingValue;\r\n                        });\r\n                    }\r\n                    dataItem.set(\"sumIncoming\", sumIncoming);\r\n                    dataItem.set(\"sumIncomingWorking\", sumIncomingWorking);\r\n                    const outgoing = dataItem.get(\"outgoingLinks\");\r\n                    let sumOutgoing = 0;\r\n                    let sumOutgoingWorking = 0;\r\n                    if (outgoing) {\r\n                        $array.each(outgoing, (link) => {\r\n                            const value = link.get(\"value\");\r\n                            const workingValue = link.get(\"valueWorking\");\r\n                            sumOutgoing += value;\r\n                            sumOutgoingWorking += workingValue;\r\n                        });\r\n                    }\r\n                    dataItem.set(\"sumOutgoing\", sumOutgoing);\r\n                    dataItem.set(\"sumOutgoingWorking\", sumOutgoingWorking);\r\n                    dataItem.set(\"sum\", sumIncoming + sumOutgoing);\r\n                    dataItem.set(\"sumWorking\", sumIncomingWorking + sumOutgoingWorking);\r\n                    nodes.updateLegendValue(dataItem);\r\n                });\r\n            }\r\n            this._linksData = [];\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                let value = dataItem.get(\"value\");\r\n                if ($type.isNumber(value)) {\r\n                    if (value < valueLow) {\r\n                        valueLow = value;\r\n                    }\r\n                    if (value > valueHigh) {\r\n                        valueHigh = value;\r\n                    }\r\n                    valueSum += value;\r\n                }\r\n            });\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                let value = dataItem.get(\"value\");\r\n                if ($type.isNumber(value)) {\r\n                    let valueWorking = dataItem.get(\"valueWorking\");\r\n                    let minSize = this.get(\"minSize\", 0);\r\n                    if (minSize > 0) {\r\n                        if (valueWorking < minSize * valueSum) {\r\n                            valueWorking = minSize * valueSum;\r\n                        }\r\n                    }\r\n                    let d3SankeyLink = { source: dataItem.get(\"source\").get(\"d3SankeyNode\"), target: dataItem.get(\"target\").get(\"d3SankeyNode\"), value: valueWorking };\r\n                    dataItem.setRaw(\"d3SankeyLink\", d3SankeyLink);\r\n                    this._linksData.push(d3SankeyLink);\r\n                    this.updateLegendValue(dataItem);\r\n                }\r\n            });\r\n            this.setPrivateRaw(\"valueHigh\", valueHigh);\r\n            this.setPrivateRaw(\"valueLow\", valueLow);\r\n            this.setPrivateRaw(\"valueSum\", valueSum);\r\n        }\r\n    }\r\n    _updateLinkColor(dataItem) {\r\n        const link = dataItem.get(\"link\");\r\n        const fillStyle = link.get(\"fillStyle\");\r\n        const strokeStyle = link.get(\"strokeStyle\");\r\n        const source = dataItem.get(\"source\");\r\n        const target = dataItem.get(\"target\");\r\n        const sourceFill = source.get(\"fill\");\r\n        const targetFill = target.get(\"fill\");\r\n        link.remove(\"fillGradient\");\r\n        link.remove(\"strokeGradient\");\r\n        switch (fillStyle) {\r\n            case \"solid\":\r\n                link._applyTemplates();\r\n                break;\r\n            case \"source\":\r\n                link.set(\"fill\", sourceFill);\r\n                break;\r\n            case \"target\":\r\n                link.set(\"fill\", targetFill);\r\n                break;\r\n            case \"gradient\":\r\n                let gradient = link._fillGradient;\r\n                if (!gradient) {\r\n                    gradient = LinearGradient.new(this._root, {});\r\n                    const sourceStop = { color: sourceFill };\r\n                    if (source.get(\"unknown\")) {\r\n                        sourceStop.opacity = 0;\r\n                    }\r\n                    const targetStop = { color: targetFill };\r\n                    if (target.get(\"unknown\")) {\r\n                        targetStop.opacity = 0;\r\n                    }\r\n                    gradient.set(\"stops\", [sourceStop, targetStop]);\r\n                    link._fillGradient = gradient;\r\n                }\r\n                link.set(\"fillGradient\", gradient);\r\n                break;\r\n            case \"none\":\r\n                link.set(\"fill\", undefined); // do not use remove!\r\n                break;\r\n        }\r\n        switch (strokeStyle) {\r\n            case \"solid\":\r\n                link._applyTemplates();\r\n                break;\r\n            case \"source\":\r\n                link.set(\"stroke\", sourceFill);\r\n                break;\r\n            case \"target\":\r\n                link.set(\"stroke\", targetFill);\r\n                break;\r\n            case \"gradient\":\r\n                let gradient = link._strokeGradient;\r\n                if (!gradient) {\r\n                    gradient = LinearGradient.new(this._root, {});\r\n                    const sourceStop = { color: sourceFill };\r\n                    if (source.get(\"unknown\")) {\r\n                        sourceStop.opacity = 0;\r\n                    }\r\n                    const targetStop = { color: targetFill };\r\n                    if (target.get(\"unknown\")) {\r\n                        targetStop.opacity = 0;\r\n                    }\r\n                    gradient.set(\"stops\", [sourceStop, targetStop]);\r\n                    link._strokeGradient = gradient;\r\n                }\r\n                link.set(\"strokeGradient\", gradient);\r\n                break;\r\n            case \"none\":\r\n                link.remove(\"stroke\");\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let link = dataItem.get(\"link\");\r\n        if (link) {\r\n            this.links.removeValue(link);\r\n            link.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * Shows diagram's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            const stateAnimationDuration = \"stateAnimationDuration\";\r\n            const stateAnimationEasing = \"stateAnimationEasing\";\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\r\n            }\r\n            const easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\r\n            promises.push(dataItem.animate({\r\n                key: \"valueWorking\",\r\n                to: Math.max(this.get(\"minHiddenValue\", 0), this.get(\"hiddenSize\", 0) * dataItem.get(\"value\")),\r\n                duration: duration,\r\n                easing: easing\r\n            }).waitForStop());\r\n            const linkGraphics = dataItem.get(\"link\");\r\n            linkGraphics.hide();\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows diagram's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            promises.push(dataItem.animate({ key: \"valueWorking\", to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\r\n            const linkGraphics = dataItem.get(\"link\");\r\n            linkGraphics.show();\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            if (dataItem) {\r\n                const link = dataItem.get(\"link\");\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    const point = link.getPoint(this._getBulletLocation(bullet));\r\n                    sprite.setAll({ x: point.x, y: point.y });\r\n                    if (bullet.get(\"autoRotate\")) {\r\n                        sprite.set(\"rotation\", point.angle + bullet.get(\"autoRotateAngle\", 0));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getBulletLocation(bullet) {\r\n        return bullet.get(\"locationY\", 0);\r\n    }\r\n}\r\nObject.defineProperty(Flow, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Flow\"\r\n});\r\nObject.defineProperty(Flow, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Flow.className])\r\n});\r\n//# sourceMappingURL=Flow.js.map","export var abs = Math.abs;\nexport var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\nexport var epsilon = 1e-12;\n","import {max, tau} from \"./math.js\";\n\nfunction range(i, j) {\n  return Array.from({length: j - i}, (_, k) => i + k);\n}\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  return chord(false, false);\n}\n\nexport function chordTranspose() {\n  return chord(false, true);\n}\n\nexport function chordDirected() {\n  return chord(true, false);\n}\n\nfunction chord(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0, dx;\n\n    matrix = Float64Array.from({length: n * n}, transpose\n        ? (_, i) => matrix[i % n][i / n | 0]\n        : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        } else {\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {abs, cos, epsilon, halfPi, sin} from \"./math.js\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    if (ap > epsilon) {\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\n      else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\n      else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function(_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function(_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function(_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexport default function() {\n  return ribbon();\n}\n\nexport function ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import { Container } from \"../../core/render/Container\";\r\n/**\r\n * Base class for flow chart nodes.\r\n */\r\nexport class FlowNode extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Related series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(FlowNode, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"FlowNode\"\r\n});\r\nObject.defineProperty(FlowNode, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([FlowNode.className])\r\n});\r\n//# sourceMappingURL=FlowNode.js.map","import { __awaiter } from \"tslib\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { FlowNode } from \"./FlowNode\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * Holds instances of nodes for a [[Flow]] series.\r\n */\r\nexport class FlowNodes extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of label elements.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Label._new(this._root, { themeTags: [\"flow\"] }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * List of node elements.\r\n         *\r\n         * @default new ListTemplate<FlowNode>\r\n         */\r\n        Object.defineProperty(this, \"nodes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => FlowNode._new(this._root, { themeTags: [\"node\"] }, [this.nodes.template]))\r\n        });\r\n        Object.defineProperty(this, \"_userDataSet\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"unknown\", \"name\", \"fill\");\r\n        this.set(\"idField\", \"id\");\r\n        this.set(\"nameField\", \"id\");\r\n        this.set(\"fillField\", \"fill\");\r\n        this.set(\"unknownField\", \"unknown\");\r\n        this.children.push(this.bulletsContainer);\r\n        super._afterNew();\r\n    }\r\n    _onDataClear() {\r\n        const colors = this.get(\"colors\");\r\n        if (colors) {\r\n            colors.reset();\r\n        }\r\n        this._userDataSet = true;\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        dataItem.setRaw(\"d3SankeyNode\", { name: dataItem.get(\"id\"), dataItem: dataItem });\r\n        if (dataItem.get(\"fill\") == null) {\r\n            let colors = this.get(\"colors\");\r\n            if (colors) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n            }\r\n        }\r\n        dataItem.setRaw(\"node\", this.makeNode(dataItem));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeNode(dataItem, themeTag) {\r\n        const node = this.nodes.make();\r\n        this.nodes.push(node);\r\n        if (themeTag) {\r\n            node.addTag(themeTag);\r\n        }\r\n        if (dataItem.get(\"unknown\")) {\r\n            node.addTag(\"unknown\");\r\n        }\r\n        this.children.push(node);\r\n        node._setDataItem(dataItem);\r\n        node.series = this;\r\n        node.events.on(\"click\", (e) => {\r\n            const node = e.target;\r\n            if (node.get(\"toggleKey\") == \"disabled\") {\r\n                const dataItem = node.dataItem;\r\n                if (dataItem) {\r\n                    if (dataItem.isHidden()) {\r\n                        this.enableDataItem(dataItem);\r\n                    }\r\n                    else {\r\n                        this.disableDataItem(dataItem);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        dataItem.set(\"node\", node);\r\n        return node;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let node = dataItem.get(\"node\");\r\n        if (node) {\r\n            this.nodes.removeValue(node);\r\n            node.dispose();\r\n        }\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addincomingLink(dataItem, link) {\r\n        let incoming = dataItem.get(\"incomingLinks\");\r\n        if (!incoming) {\r\n            incoming = [];\r\n            dataItem.set(\"incomingLinks\", incoming);\r\n        }\r\n        incoming.push(link);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addOutgoingLink(dataItem, link) {\r\n        let outgoing = dataItem.get(\"outgoingLinks\");\r\n        if (!outgoing) {\r\n            outgoing = [];\r\n            dataItem.set(\"outgoingLinks\", outgoing);\r\n        }\r\n        outgoing.push(link);\r\n    }\r\n    /**\r\n     * Shows node's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const flow = this.flow;\r\n            const node = dataItem.get(\"node\");\r\n            if (node) {\r\n                node.show();\r\n            }\r\n            if (flow) {\r\n                let label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.show(duration);\r\n                }\r\n                let links = dataItem.get(\"outgoingLinks\");\r\n                if (links) {\r\n                    $array.each(links, (link) => {\r\n                        flow.showDataItem(link, duration);\r\n                    });\r\n                }\r\n                links = dataItem.get(\"incomingLinks\");\r\n                if (links) {\r\n                    $array.each(links, (link) => {\r\n                        flow.showDataItem(link, duration);\r\n                    });\r\n                }\r\n            }\r\n            yield promises;\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const flow = this.flow;\r\n            const node = dataItem.get(\"node\");\r\n            if (node) {\r\n                node.hide();\r\n            }\r\n            if (flow) {\r\n                let label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.hide(duration);\r\n                }\r\n                let links = dataItem.get(\"outgoingLinks\");\r\n                if (links) {\r\n                    $array.each(links, (link) => {\r\n                        flow.hideDataItem(link, duration);\r\n                    });\r\n                }\r\n                links = dataItem.get(\"incomingLinks\");\r\n                if (links) {\r\n                    $array.each(links, (link) => {\r\n                        flow.hideDataItem(link, duration);\r\n                    });\r\n                }\r\n            }\r\n            yield promises;\r\n        });\r\n    }\r\n    /**\r\n     * Shows node's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    enableDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const flow = this.flow;\r\n            if (flow) {\r\n                let label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"disabled\", false);\r\n                }\r\n                let links = dataItem.get(\"outgoingLinks\");\r\n                if (links) {\r\n                    $array.each(links, (link) => {\r\n                        flow.showDataItem(link, duration);\r\n                    });\r\n                }\r\n                links = dataItem.get(\"incomingLinks\");\r\n                if (links) {\r\n                    $array.each(links, (link) => {\r\n                        flow.showDataItem(link, duration);\r\n                    });\r\n                }\r\n            }\r\n            yield promises;\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    disableDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const flow = this.flow;\r\n            if (flow) {\r\n                let label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"disabled\", true);\r\n                }\r\n                let links = dataItem.get(\"outgoingLinks\");\r\n                if (links) {\r\n                    $array.each(links, (link) => {\r\n                        flow.hideDataItem(link, duration);\r\n                    });\r\n                }\r\n                links = dataItem.get(\"incomingLinks\");\r\n                if (links) {\r\n                    $array.each(links, (link) => {\r\n                        flow.hideDataItem(link, duration);\r\n                    });\r\n                }\r\n            }\r\n            yield promises;\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(FlowNodes, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"FlowNodes\"\r\n});\r\nObject.defineProperty(FlowNodes, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([FlowNodes.className])\r\n});\r\n//# sourceMappingURL=FlowNodes.js.map","import { FlowNodes } from \"./FlowNodes\";\r\nimport { Slice } from \"../../core/render/Slice\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Holds instances of nodes for a [[Chord]] series.\r\n */\r\nexport class ChordNodes extends FlowNodes {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of label elements.\r\n         *\r\n         * @default new ListTemplate<RadialLabel>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => RadialLabel._new(this._root, {}, [this.labels.template]))\r\n        });\r\n        /**\r\n         * Related [[Chord]] series.\r\n         */\r\n        Object.defineProperty(this, \"flow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * List of slice elements.\r\n         *\r\n         * @default new ListTemplate<Slice>\r\n         */\r\n        Object.defineProperty(this, \"slices\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Slice._new(this._root, { themeTags: [\"shape\"] }, [this.slices.template]))\r\n        });\r\n        /**\r\n         * @ignore\r\n         * added to solve old naming bug\r\n         */\r\n        Object.defineProperty(this, \"rectangles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.slices\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeNode(dataItem) {\r\n        const node = super.makeNode(dataItem, \"chord\");\r\n        const slice = node.children.insertIndex(0, this.slices.make());\r\n        dataItem.set(\"slice\", slice);\r\n        slice._setSoft(\"fill\", dataItem.get(\"fill\"));\r\n        const label = this.labels.make();\r\n        this.labels.push(label);\r\n        label.addTag(\"flow\");\r\n        label.addTag(\"chord\");\r\n        label.addTag(\"node\");\r\n        node.children.push(label);\r\n        dataItem.set(\"label\", label);\r\n        node.events.on(\"dragstart\", (e) => {\r\n            let point = this.toLocal(e.point);\r\n            const angle = $math.getAngle({ x: 0, y: 0 }, point);\r\n            if (this.flow) {\r\n                this._dAngle = this.flow.get(\"startAngle\", 0) - angle;\r\n            }\r\n        });\r\n        node.events.on(\"dragged\", (e) => {\r\n            let point = this.toLocal(e.point);\r\n            const angle = $math.getAngle({ x: 0, y: 0 }, point);\r\n            node.setAll({ x: 0, y: 0 });\r\n            if (this.flow) {\r\n                this.flow.set(\"startAngle\", angle + this._dAngle);\r\n            }\r\n        });\r\n        label._setDataItem(dataItem);\r\n        slice._setDataItem(dataItem);\r\n        return node;\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            if (dataItem) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    const slice = dataItem.get(\"slice\");\r\n                    const locationX = bullet.get(\"locationX\", 0.5);\r\n                    const locationY = bullet.get(\"locationY\", 0.5);\r\n                    if (slice) {\r\n                        const radius = slice.get(\"radius\", 0);\r\n                        const innerRadius = slice.get(\"innerRadius\", 0);\r\n                        const bulletRadius = innerRadius + (radius - innerRadius) * locationY;\r\n                        const angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\r\n                        sprite.setAll({ x: bulletRadius * $math.cos(angle), y: bulletRadius * $math.sin(angle) });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            this.slices.removeValue(slice);\r\n            slice.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(ChordNodes, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ChordNodes\"\r\n});\r\nObject.defineProperty(ChordNodes, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: FlowNodes.classNames.concat([ChordNodes.className])\r\n});\r\n//# sourceMappingURL=ChordNodes.js.map","import { Graphics } from \"../../core/render/Graphics\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for a flow link.\r\n */\r\nexport class FlowLink extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillGradient\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeGradient\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"fillStyle\")) {\r\n            const series = this.series;\r\n            const dataItem = this.dataItem;\r\n            if (series && dataItem) {\r\n                series._updateLinkColor(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        let tooltipY = this.get(\"tooltipY\");\r\n        let position = 0.5;\r\n        if (tooltipY instanceof Percent) {\r\n            position = tooltipY.value;\r\n        }\r\n        return this.getPoint(position);\r\n    }\r\n}\r\nObject.defineProperty(FlowLink, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"FlowLink\"\r\n});\r\nObject.defineProperty(FlowLink, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([FlowLink.className])\r\n});\r\n//# sourceMappingURL=FlowLink.js.map","import { FlowLink } from \"./FlowLink\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * A link element used in [[Chord]] chart.\r\n */\r\nexport class ChordLink extends FlowLink {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_p0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_p1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_type\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    getPoint(location) {\r\n        if (this._p0 && this._p1) {\r\n            if (this._type === \"line\") {\r\n                let p = $math.getPointOnLine(this._p0, this._p1, location);\r\n                return { x: p.x, y: p.y, angle: $math.getAngle(this._p0, this._p1) };\r\n            }\r\n            else {\r\n                let p0 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.max(0, location - 0.01));\r\n                let p1 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.min(1, location + 0.01));\r\n                let p = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, location);\r\n                return { x: p.x, y: p.y, angle: $math.getAngle(p0, p1) };\r\n            }\r\n        }\r\n        return { x: 0, y: 0, angle: 0 };\r\n    }\r\n}\r\nObject.defineProperty(ChordLink, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ChordLink\"\r\n});\r\nObject.defineProperty(ChordLink, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: FlowLink.classNames.concat([ChordLink.className])\r\n});\r\n//# sourceMappingURL=ChordLink.js.map","import { Flow } from \"./Flow\";\r\nimport { chord, ribbon } from \"d3-chord\";\r\nimport { ascending, descending } from \"d3\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { ChordNodes } from \"./ChordNodes\";\r\nimport { ChordLink } from \"./ChordLink\";\r\nimport { p100, p50 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Regular chord series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\r\n * @important\r\n */\r\nexport class Chord extends Flow {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of link elements.\r\n         *\r\n         * @default new ListTemplate<ChordLink>\r\n         */\r\n        Object.defineProperty(this, \"links\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => ChordLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template]))\r\n        });\r\n        /**\r\n         * A series for all chord nodes.\r\n         *\r\n         * @default ChordNodes.new()\r\n         */\r\n        Object.defineProperty(this, \"nodes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(ChordNodes.new(this._root, {}))\r\n        });\r\n        Object.defineProperty(this, \"_d3chord\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: chord()\r\n        });\r\n        Object.defineProperty(this, \"_chordLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_ribbon\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ribbon()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\"]);\r\n        this.linksContainer.setAll({ x: p50, y: p50 });\r\n        this.bulletsContainer.setAll({ x: p50, y: p50 });\r\n        super._afterNew();\r\n    }\r\n    _fixRibbon(ribbon) {\r\n        ribbon.startAngle((d) => {\r\n            return d.startAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\r\n        });\r\n        ribbon.endAngle((d) => {\r\n            return d.endAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLink(dataItem) {\r\n        const link = this.linksContainer.children.push(this.links.make());\r\n        this.links.push(link);\r\n        link._setDataItem(dataItem);\r\n        link.set(\"source\", dataItem.get(\"source\"));\r\n        link.set(\"target\", dataItem.get(\"target\"));\r\n        link.series = this;\r\n        return link;\r\n    }\r\n    _makeMatrix() {\r\n        const matrix = [];\r\n        $array.each(this.nodes.dataItems, (sourceDataItem) => {\r\n            const group = [];\r\n            matrix.push(group);\r\n            let outgoing = sourceDataItem.get(\"outgoingLinks\");\r\n            $array.each(this.nodes.dataItems, (targetDataItem) => {\r\n                let value = 0;\r\n                if (outgoing) {\r\n                    $array.each(outgoing, (outgoingLink) => {\r\n                        if (outgoingLink.get(\"target\") === targetDataItem) {\r\n                            value = outgoingLink.get(\"valueWorking\");\r\n                        }\r\n                        let valueSum = this.getPrivate(\"valueSum\", 0);\r\n                        let minSize = this.get(\"minSize\", 0);\r\n                        if (value > 0 && minSize > 0) {\r\n                            if (value < valueSum * minSize) {\r\n                                value = valueSum * minSize;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                group.push(value);\r\n            });\r\n        });\r\n        return matrix;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._fixRibbon(this._ribbon);\r\n        let chordChanged = false;\r\n        if (this._valuesDirty || this._sizeDirty || this.isDirty(\"padAngle\") || this.isDirty(\"startAngle\")) {\r\n            const matrix = this._makeMatrix();\r\n            this._d3chord.padAngle(this.get(\"padAngle\", 0) * $math.RADIANS);\r\n            const sort = this.get(\"sort\");\r\n            if (sort === \"ascending\") {\r\n                this._d3chord.sortGroups(ascending);\r\n            }\r\n            else if (sort === \"descending\") {\r\n                this._d3chord.sortGroups(descending);\r\n            }\r\n            /*\r\n                        this._d3chord.sortSubgroups((a, b)=>{\r\n                            if (a != Math.round(a)) return false\r\n                            if (b != Math.round(b)) return true\r\n                            return b < a ? -1 : b > a ? 1 : 0;\r\n                        })\r\n            */\r\n            this._chordLayout = this._d3chord(matrix);\r\n            chordChanged = true;\r\n        }\r\n        if (chordChanged || this.isDirty(\"radius\") || this.isDirty(\"nodeWidth\")) {\r\n            let radius = $utils.relativeToValue(this.get(\"radius\", 0), Math.min(this.innerWidth(), this.innerHeight())) / 2;\r\n            let i = 0;\r\n            const chordStartAngle = this.get(\"startAngle\", 0);\r\n            const nodeWidth = this.get(\"nodeWidth\", 0);\r\n            $array.each(this.nodes.dataItems, (dataItem) => {\r\n                const slice = dataItem.get(\"slice\");\r\n                const chordGroup = this._chordLayout.groups[i];\r\n                const startAngle = chordGroup.startAngle * $math.DEGREES + chordStartAngle;\r\n                const endAngle = chordGroup.endAngle * $math.DEGREES + chordStartAngle;\r\n                slice.setAll({ radius: radius, innerRadius: radius - nodeWidth, startAngle: startAngle, arc: endAngle - startAngle });\r\n                const label = dataItem.get(\"label\");\r\n                label.setAll({ labelAngle: startAngle + (endAngle - startAngle) / 2 });\r\n                label.setPrivate(\"radius\", radius);\r\n                label.setPrivate(\"innerRadius\", 0.1);\r\n                i++;\r\n            });\r\n            const linkRadius = radius - this.get(\"nodeWidth\", 0);\r\n            $array.each(this._chordLayout, (chord) => {\r\n                let dataItem = this._linksByIndex[chord.source.index + \"_\" + chord.target.index];\r\n                if (!dataItem) {\r\n                    dataItem = this._linksByIndex[chord.target.index + \"_\" + chord.source.index];\r\n                }\r\n                if (dataItem) {\r\n                    const link = dataItem.get(\"link\");\r\n                    this._getLinkPoints(link, linkRadius, chord);\r\n                    this._updateLink(this._ribbon, link, linkRadius, chord);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _getLinkPoints(link, linkRadius, chordLayoutItem) {\r\n        const source = chordLayoutItem.source;\r\n        const target = chordLayoutItem.target;\r\n        const chordStartAngle = this.get(\"startAngle\", 0) * $math.RADIANS;\r\n        if (source && target) {\r\n            const startAngle0 = source.startAngle;\r\n            const endAngle0 = source.endAngle;\r\n            const angle0 = startAngle0 + (endAngle0 - startAngle0) / 2 + chordStartAngle;\r\n            const startAngle1 = target.startAngle;\r\n            const endAngle1 = target.endAngle;\r\n            const angle1 = startAngle1 + (endAngle1 - startAngle1) / 2 + chordStartAngle;\r\n            link._p0 = { x: linkRadius * Math.cos(angle0), y: linkRadius * Math.sin(angle0) };\r\n            link._p1 = { x: linkRadius * Math.cos(angle1), y: linkRadius * Math.sin(angle1) };\r\n        }\r\n    }\r\n    _updateLink(ribbon, link, linkRadius, chordLayoutItem) {\r\n        if (chordLayoutItem) {\r\n            ribbon.sourceRadius($utils.relativeToValue(link.get(\"sourceRadius\", p100), linkRadius));\r\n            ribbon.targetRadius($utils.relativeToValue(link.get(\"targetRadius\", p100), linkRadius));\r\n            link.set(\"draw\", (display) => {\r\n                ribbon.context(display);\r\n                ribbon(chordLayoutItem);\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Chord, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chord\"\r\n});\r\nObject.defineProperty(Chord, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Flow.classNames.concat([Chord.className])\r\n});\r\n//# sourceMappingURL=Chord.js.map","import { ChordLink } from \"./ChordLink\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * A link element used in [[ChordDirected]] chart.\r\n */\r\nexport class ChordLinkDirected extends ChordLink {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"link\", \"directed\"]);\r\n        super._afterNew();\r\n    }\r\n}\r\nObject.defineProperty(ChordLinkDirected, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ChordLinkDirected\"\r\n});\r\nObject.defineProperty(ChordLinkDirected, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: ChordLink.classNames.concat([ChordLinkDirected.className])\r\n});\r\n//# sourceMappingURL=ChordLinkDirected.js.map","import { Chord } from \"./Chord\";\r\nimport { ChordLinkDirected } from \"./ChordLinkDirected\";\r\nimport { chordDirected, ribbonArrow, ribbon } from \"d3-chord\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Directed chord series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\r\n * @important\r\n */\r\nexport class ChordDirected extends Chord {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_d3chord\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: chordDirected()\r\n        });\r\n        Object.defineProperty(this, \"_ribbonArrow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ribbonArrow()\r\n        });\r\n        /**\r\n         * List of link elements.\r\n         *\r\n         * @default new ListTemplate<ChordLinkDirected>\r\n         */\r\n        Object.defineProperty(this, \"links\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => ChordLinkDirected._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template]))\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLink(dataItem) {\r\n        const link = this.linksContainer.children.push(this.links.make());\r\n        link._setDataItem(dataItem);\r\n        link.set(\"source\", dataItem.get(\"source\"));\r\n        link.set(\"target\", dataItem.get(\"target\"));\r\n        link.series = this;\r\n        return link;\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"directed\"]);\r\n        super._afterNew();\r\n        this._markDirtyKey(\"linkHeadRadius\");\r\n    }\r\n    _prepareChildren() {\r\n        const linkHeadRadius = \"linkHeadRadius\";\r\n        if (this.isDirty(linkHeadRadius)) {\r\n            const headRadius = this.get(linkHeadRadius);\r\n            if (headRadius == null) {\r\n                this._ribbon = ribbon();\r\n            }\r\n            else {\r\n                let ribbon = ribbonArrow();\r\n                ribbon.headRadius(headRadius);\r\n                this._ribbon = ribbon;\r\n            }\r\n        }\r\n        super._prepareChildren();\r\n    }\r\n}\r\nObject.defineProperty(ChordDirected, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ChordDirected\"\r\n});\r\nObject.defineProperty(ChordDirected, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chord.classNames.concat([ChordDirected.className])\r\n});\r\n//# sourceMappingURL=ChordDirected.js.map"],"names":["pi","tau","epsilon","tauEpsilon","Path","path","x","y","x1","y1","x2","y2","r","x0","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","l","t01","t21","a0","a1","ccw","dx","dy","cw","da","w","h","constant$1","abs","atan2","cos","max","min","sin","sqrt","halfPi","acos","asin","arcInnerRadius","d","arcOuterRadius","arcStartAngle","arcEndAngle","arcPadAngle","intersect","x3","y3","x10","y10","x32","y32","t","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","arc","innerRadius","outerRadius","cornerRadius","constant","padRadius","startAngle","endAngle","padAngle","context","buffer","r0","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","t0","t1","p0","p1","oc","ax","ay","bx","by","kc","lc","a","_","Linear","ur","p","line$1","pointX","pointY","defined","curve","curveLinear","output","line","data","i","n","defined0","area","j","k","x0z","y0z","arealine","slice","noop","point","that","Basis","er","BasisClosed","rr","BasisOpen","tr","Bundle","beta","ir","custom","bundle","Cardinal","tension","curveCardinal","cardinal","CardinalClosed","or","CardinalOpen","ar","b","m","CatmullRom","alpha","x23","y23","lr","catmullRom","CatmullRomClosed","sr","CatmullRomOpen","dr","LinearClosed","cr","sign","slope3","h0","h1","s0","s1","slope2","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","px","controlPoints","py","i0","i1","hr","Step","gr","stepBefore","stepAfter","xr","series","order","qr","o","stackValue","key","A","keys","orderNone","offset","offsetNone","value","stack","kz","sz","oz","ki","si","sij","_r","none","yp","yn","Or","Wr","s2","sij0","sij1","s3","sk","skj0","skj1","appearance","peaks","peak","vi","vj","yr","sums","sum","s","v","vr","ascending","Rr","top","bottom","tops","bottoms","kr","define","constructor","factory","prototype","extend","parent","definition","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","color","channels","color_formatHex","color_formatHex8","color_formatHsl","color_formatRgb","hslConvert","format","rgbn","Rgb","rgba","hsla","g","rgbConvert","rgb","opacity","clampi","clampa","rgb_formatHex","rgb_formatHex8","rgb_formatRgb","hex","Hsl","hsl","m2","m1","hsl2rgb","clamph","clampt","isNaN","getType","toNumber","isNumber","converted","isString","toDate","isDate","num","numberToString","negative","parsed","digits","decimals","res","exponent","zeros","repeat","string","amount","isObject","PLACEHOLDER","PLACEHOLDER2","indexOf","array","length","any","test","map","fn","each","eachReverse","eachContinue","remove","element","found","index","removeFirst","move","toIndex","removeIndex","pushOne","copy","insertIndex","findIndex","matches","findIndexReverse","find","findReverse","getSortedIndex","ordering","start","end","pivot","getFirstSortedIndex","keepIf","keep","DisposerClass","Disposer","dispose","ArrayDisposer","$array.each","MultiDisposer","disposers","CounterDisposer","EventDispatcher","type","$array.any","listener","once","callback","info","$array.findIndex","count","$type.isNumber","killed","event","shouldClone","dispatch","_type","source","checkBounds","len","List","initial","$array.indexOf","newValue","oldValue","oldIndex","newIndex","oldValues","$array.insertIndex","value_a","value_b","$array.removeIndex","values","newArray","old","f","$array.eachReverse","ListAutoDispose","ListTemplate","template","make","Children","container","change","child","childrenDisplay","Percent","percent","p100","p50","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","reject","fulfilled","step","e","rejected","result","object","keysOrdered","hasKey","removeElement","el","addEventListener","dom","options","onZoom","_ev","supports","cap","getPointerId","blur","input","focus","getRendererEvent","isTouchEvent","ev","setStyle","property","getStyle","getEventTarget","contains","cursor","isLocalEvent","target","setInteractive","interactive","iOS","getSafeResolution","relativeToValue","full","decimalPlaces","number","match","padString","char","trimLeft","text","trimRight","trim","cleanFormat","stripTags","escapeForRgex","getYearDay","date","utc","diff","oneDay","getWeek","_utc","day","firstDay","getWeekYear","getMonthWeek","firstWeek","currentWeek","getDayFromWeek","week","year","weekday","get12Hours","hours","base","getTimeZone","long","savings","wotz","wtz","getTimezoneOffset","timezone","utcDate","capitalizeFirst","hslToRgb","hue2rgb","q","rgbToHsl","lighten","getLightnessStep","brighten","isLight","saturate","saturation","alternativeColor","lightAlternative","darkAlternative","light","dark","mergeTags","tags1","tags2","self","sameBounds","string2hex","rgba2hex","val","$utils.padString","$utils.rgbToHsl","$utils.hslToRgb","$type.isString","$utils.alternativeColor","from","to","mode","fromHSL","toHSL","range","$utils.lighten","$utils.brighten","$utils.saturate","waitForAnimations","animations","promises","$object.each","animation","defaultInterpolate","percentInterpolate","colorInterpolate","getInterpolate","PI","RADIANS","DEGREES","round","precision","floor","ceil","fitToRange","angle","normalizeAngle","getArcBounds","cx","cy","radius","minX","minY","maxX","maxY","bpoints","getArcPoint","fromAngle","toAngle","pt","getAngle","point1","point2","diffX","diffY","getPointOnQuadraticCurve","pointA","pointB","controlPoint","position","getPointOnLine","linear","cubic","out","ease","State","entity","settings","fallback","$object.keys","seen","defaultState","duration","easing","$ease.cubic","States","name","state","newState","Registry","registry","compare","left","right","compareArray","leftLength","rightLength","compareNumber","Adapters","callbacks","$array.removeFirst","Animation","loops","startingTime","_reject","stopped","currentTime","counter","Settings","playing","_key","events","$ease.linear","Entity","root","isReal","templates","shouldApply","disposer","_name","_duration","other","$array.findReverse","$array.find","isConnected","defaults","themes","themeTags","tags","tag","theme","allRules","rules","rule","$array.getFirstSortedIndex","$order.compare","$order.compareArray","id","prevId","delay","$array.remove","locale","rest","TemplateState","TemplateStates","TemplateAdapters","Template","_value","SpriteEventDispatcher","sprite","rendererEvent","Sprite","field","dataItem","oldDataItem","eventType","$array.pushOne","bounds","centerX","$utils.relativeToValue","centerY","previous","tooltipMoveDp","tooltipPointerDp","display","draggable","tooltipText","tooltipHTML","showTooltipOn","$utils.addEventListener","toggleKey","wheelable","$utils.isTouchEvent","pointerId","$utils.getPointerId","downPoint","dragEvent","dragPoint","$math.cos","$math.sin","depth","oldBounds","newBounds","minWidth","minHeight","privateWidth","privateHeight","tooltip","tooltipPosition","tooltipTarget","promise","timeout","_x","xx","yy","_y","p2","p3","success","_error","width","maxWidth","maxHeight","height","updateChildren","prevParent","$object.keysOrdered","Pattern","repetition","fill","fillOpacity","PicturePattern","image","patternWidth","patternHeight","fit","centered","src","BlendMode","Graphics","gradient","gradientTarget","strokeDasharray","strokeDashoffset","blendMode","draw","svgPath","fillGradient","fillPattern","stroke","strokeGradient","strokePattern","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","changed","pattern","stops","stop","strokeOpacity","strokeWidth","lineJoin","Rectangle","eachChildren","Layout","HorizontalLayout","paddingLeft","availableWidth","totalPercent","childWidth","prevX","marginLeft","marginRight","VerticalLayout","paddingTop","availableHeight","childHeight","prevY","marginTop","marginBottom","GridLayout","paddingRight","minCellWidth","maxCellWidth","$math.fitToRange","columnCount","columnWidths","column","maxColumnHeight","totalWidth","TextFormatter","quotedBlocks","noFormatting","chunks","chunk","$type.PLACEHOLDER","chunks2","i2","chunk2","style","populateString","getTagValue","tagName","parts","reg","dateFields","numericFields","durationFields","params","$utils.trim","reg2","matches2","getTagValueFromObject","$type.isObject","dataContext","getCustomDataValue","prop","customData","current","formatApplied","part","tmp","numberValue","$type.toNumber","dateValue","$type.toDate","$type.isDate","$type.isNaN","durationValue","formatParts","Container","contentMask","background","verticalScrollbar","bg","visible","pWidth","pHeight","layout","horizontal","vertical","paddingBottom","childBounds","childX","childY","cl","ct","cb","innerWidth","innerHeight","html","wheelEvent","$utils.isLocalEvent","shiftY","mask","updated","Text","textStyle","styleName","Native","entries","entry","$array.keepIf","Raf","lastTime","loop","newSize","size","observer","makeSensor","ResizeSensor","$utils.onZoom","InterfaceColors","Label","propValue","textAlign","rotation","PointedRectangle","bwh","xtl","ytl","xtr","ytr","xbr","ybr","xbl","ybl","d1","stemX","stemY","Tooltip","$utils.mergeTags","htmlElement","outEvent","ch","parentW","parentH","tooltipContainer","layerMargin","pointTo","pointerOrientation","pointerLength","bgStrokeSizeY","bgStrokeSizeX","pointerX","pointerY","boundsW","boundsH","animationDuration","animationEasing","NumberFormatter","bns","sns","bs","formatted","$utils.cleanFormat","details","$object.copy","language","thousandSeparator","decimalSeparator","$type.PLACEHOLDER2","_part","item","partFormat","mods","prefix","suffix","ol","exp","$type.numberToString","ints","ip","intsr","c","decs","prefixes","force","newvalue","applied","parseDate","month","hour","minute","second","millisecond","toUTCDate","Timezone","userOffset","newUserOffset","dtf","DateFormatter","locales","fullYear","minutes","seconds","milliseconds","timestamp","$utils.getWeekYear","$utils.getWeek","$utils.getMonthWeek","$utils.getYearDay","$utils.get12Hours","$utils.getTimeZone","$utils.getTimezoneOffset","tz","tzh","tzm","dateFormat","parsedIndexes","resValues","indexAdjust","regex","$utils.getDayFromWeek","ts","zone","dir","originalOffset","list","$utils.escapeForRgex","DurationFormatter","dmillisecond","dsecond","dminute","dhour","dday","dweek","dmonth","dyear","asecond","aminute","ahour","aday","aweek","amonth","ayear","baseUnit","dirs","tstamp","unit","code","maxValue","maxUnit","currentUnit","ms","$object.eachContinue","timeUnit","en","Language","prompt","translation","localeTarget","translations","$array.map","Theme","themeClass","$array.getSortedIndex","setColor","ic","DefaultTheme","horizontalLayout","verticalLayout","$ease.out","Matrix","tx","ty","pivotX","pivotY","scale","origin","matrix","b1","c1","tx1","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_i","_s","err","TAU","mapToEllipse","_ref","rx","ry","cosphi","sinphi","centerx","centery","xp","approxUnitArc","ang1","ang2","vectorAngle","ux","uy","vx","vy","dot","getArcCenter","largeArcFlag","sweepFlag","pxp","pyp","rxsq","rysq","pxpsq","pypsq","radicant","centerxp","centeryp","vx1","vy1","vx2","vy2","arcToBezier","_ref2","_ref2$xAxisRotation","xAxisRotation","_ref2$largeArcFlag","_ref2$sweepFlag","curves","lambda","_getArcCenter","_getArcCenter2","ratio","segments","_mapToEllipse","_mapToEllipse2","_mapToEllipse3","checkArgs","actual","expected","checkMinArgs","checkEvenArgs","splitArcFlags","args","flag","assertBinary","distributeId","eachTargets","hitTarget","onPointerEvent","$utils.getRendererEvent","$utils.getEventTarget","touches","$array.copy","isTainted","canvas","clearCanvas","view","CanvasPivot","CanvasDisplayObject","renderer","margin","$utils.setInteractive","_bounds","resolution","layer","parentLayer","layers","ghostLayer","ghostContext","CanvasContainer","deep","setPoint","Op","_context","_forceColor","BeginPath","BeginFill","forceColor","EndFill","clearShadow","EndStroke","LineStyle","LineDash","dash","LineDashOffset","dashOffset","DrawRect","DrawCircle","DrawEllipse","radiusX","radiusY","Arc","anticlockwise","arcBounds","$math.getArcBounds","$math.DEGREES","ArcTo","LineTo","MoveTo","ClosePath","BezierCurveTo","cpX","cpY","cpX2","cpY2","toX","toY","QuadraticCurveTo","Shadow","offsetX","offsetY","GraphicsImage","CanvasGraphics","op","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","relative","layerDirty","CanvasText","ignoreGhost","ignoreFontWeight","fontStyle","style2","_index","thickness","fontSize","rtl","oversizedBehavior","truncate","wrap","refText","lines","styleRestored","currentStyle","lineInfo","metrics","currentFormat","currentDecoration","currentFill","currentChunkWidth","skipFurtherText","firstTextChunk","leftoverChunks","currentVerticalAlign","$array.eachContinue","chunkWidth","breakWords","ellipsis","ellipsisMetrics","ellipsisWidth","excessWidth","tmpText","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","currentChunkOffset","maxW","maxH","fallbackBreakWords","fakeMetrics","div","bbox","CanvasTextStyle","CanvasRadialText","deltaAngle","orientation","inward","inside","align","kerning","clockwise","shouldReverse","maxAngle","midAngle","$math.normalizeAngle","textHeight","lineStartAngle","angleShift","charWidth","chars","CanvasImage","CanvasRendererEvent","originalPoint","$utils.supports","CanvasRenderer","GhostLayer","prevent","obj","radius1","radius2","graphics","canvasWidth","canvasHeight","domWidth","domHeight","willReadFrequently","CanvasLayer","existingLayer","layerIndex","next","native","originalEvent","adjustPoint","pixel","colorId","dispatched","originalTarget","button","dragged","$utils.setStyle","$utils.getStyle","clickevent","timer","clear","mouseup","pointercancel","mousedown","mousemove","minScale","maxScale","canvases","forceRender","needRerender","extraX","extraY","rAF","fps","Root","$utils.getSafeResolution","inner","tooltipContainerBounds","logo","rect","realWidth","realHeight","rootContainer","htmlElementContainer","readerAlertElement","focusElementContainer","tooltipElementContainer","focusedSprite","$utils.blur","dragOffsetX","dragOffsetY","downEvent","moveEvent","keyCode","upEvent","group","items","lastIndex","$utils.focus","allParents","objects","depths","dirtyPositions","now","endTime","$utils.removeElement","$utils.stripTags","interfaceColors","tooltipContainerSettings","aindex","bindex","groups","focusElement","role","ariaLabel","label","ariaLive","ariaChecked","ariaOrientation","ariaValueNow","ariaValueMin","ariaValueMax","ariaValueText","ariaControls","focused","direction","focusableElements","tooltipElement","styles","fontHash","setting","Bullet","RoundedRectangle","wSign","hSign","minSide","crtl","crtr","crbr","crbl","maxcr","Button","icon","Circle","ListData","DataItem","component","Component","dataItems","properties","_dataItem","Gradient","_target","_offset","_color","LinearGradient","longer","sleep","timeUnitDurations","getNextUnit","getDuration","getIntervalDuration","interval","getDateIntervalDuration","firstDateOfWeek","firstTime","checkChange","timeOne","timeTwo","dateOne","dateTwo","timeZoneOffset1","timeZoneOffset2","nextUnit","firstDate","timeZoneOffset","difference","unitCount","wday","weekDay","newTimeZoneOffset","tzoffset","parsedDate","newOffset","chooseInterval","gridCount","intervals","gridInterval","intervalDuration","Series","bullets","bullet","bulletFunction","startIndex","endIndex","baseValueSeries","markerRectangle","legendDataItem","fields","absSum","low","high","open","close","average","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","minValue","propertyValue","_bullet","chart","bulletsContainer","_super","show","realDuration","$time.sleep","valueLabel","txt","Legend","itemContainer","marker","nameField","fillField","strokeField","clickTarget","useDefaultMarker","clickContainer","targetA","targetB","indexA","indexB","labelText","segmentedLine","firstGroup","firstPoint","points","Line","$draw.segmentedLine","RadialText","$math.RADIANS","RadialLabel","radiusPrivate","innerRadiusPrivate","baseRadius","textType","labelAngle","Slice","tooltipX","tooltipY","dRadius","dInnerRadius","middleAngle","shiftRadius","Chart","SerialChart","children","colors","Tick","ColorSet","pass","passOptions","reuse","currentStep","AnimatedTheme","XYChartDefaultTheme","axisFill","gridIntervals","dateFormats","periodChangeDateFormats","tooltipDateFormats","axis","endValue","baseInterval","$time.round","$math.round","XYChart","zoomOutButton","plotContainer","xAxis","yAxis","snapToSeries","wheelX","wheelY","plotPoint","wheelStep","shiftX","wheelZoomPositionX","wheelZoomPositionY","newStart","newEnd","delta","se","local","panX","panY","scrollbarX","panStart","panEnd","deltaX","scrollbarY","deltaY","downPoints","movePoints","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","initialDistance","currentDistance","sa","ea","downStartY","downEndY","cursorPoint","snapToSeriesBy","tooltipDataItem","minDistance","closestItem","distance","$array.move","colorSet","behavior","downPositionX","downPositionY","positionX","positionY","position0","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","axisParent","gridContainer","gridParent","topGridContainer","topGridParent","bottomAxesContainer","topAxesContainer","otherCharts","global","chartPlotContainer","documentPoint","chartRoot","hh","plotT","plotB","tooltips","maxTooltipDistance","maxTooltipDistanceBy","closest","closestPoint","tooltipSeries","hidden","$order.compareNumber","prevBottom","Grid","XYCursor","increment","_line","syncWith","rootPoint","moveThreshold","lastPoint","skipEvent","alwaysShow","xyPos","userPositionX","userPositionY","xy","selection","XYSeries","axisRange","axisDataItem","baseAxis","minBulletDistance","xName","xCapName","$utils.capitalizeFirst","yName","yCapName","xLetter","yLetter","hiddenState","sequencedInterpolation","tooltipPositionX","tooltipFieldX","tooltipPositionY","tooltipFieldY","stacked","vcx","vcy","outOfSelection","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","mainContainerMask","seriesIndex","stackToItemKey","stackToNegative","stackToSeries","stackToItem","stackedToSeries","locationX","locationY","_positionX","_positionY","baseValue","stackedSeries","itemLocationX","itemLocationY","xPos","yPos","_position","Axis","_start","_end","sAnimation","eAnimation","maxDeviation","maxZoomFactor","maxZoomFactorReal","minZoomCount","maxZoomCount","minZoomFactor","above","grid","rendererTags","tick","axisBullet","ghostLabel","gWidth","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","_series","ValueAxis","syncWithAxis","numberFormat","formatter","logarithmic","selectionMin","selectionMax","differencePower","minLog","stepPower","decCount","endPosition","fillEndPosition","fillRule","minMaxStep","stepDecimalPlaces","$utils.decimalPlaces","treatZeroAs","location","_cellLocation","axisLocation","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","strictMinMax","seriesMin","seriesMax","minMaxStep2","selectionMinReal","selectionMaxReal","minDiff","initialMin","initialMax","minAdapted","maxAdapted","strictMinMaxSelection","strict","power","_min","_max","strictMode","extra","stepDivisor","maxPrecision","ceiledStep","$math.ceil","minCount","maxCount","_adjustPosition","extraDecimals","fieldName","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","DateAxis","$time.getIntervalDuration","groupInterval","mainDataSetId","baseDuration","groupIntervals","groupCallback","groupOriginals","previousTime","dataSetId","newDataItem","groupFieldValues","workingFields","$time.getDuration","firstItem","prevNewDataItem","time","roundedTime","groupKey","currentValue","$time.chooseInterval","modifiedDifference","newId","endIndex2","firstDataItem","lastDataItem","lastDate","_strictMode","nextGridUnit","$time.getNextUnit","previousValue","formats","$time.checkChange","startTime","_date","cellLocation","openValue","closeValue","$time.getDateIntervalDuration","adjustPosition","diValue","first","nextItem","autoGapCount","value1","AxisLabel","AxisTick","AxisRenderer","thumb","labelsContainer","pan","_event","downStart","downEnd","_point1","_point2","_tooltip","minPosition","maxPosition","updatedStart","updatedEnd","AxisRendererX","gridTemplate","opposite","axisChildren","axisHeader","bulletPosition","previousBullet","previousSprite","$utils.sameBounds","AxisRendererY","LineSeries","strokes","fills","legendStroke","legendFill","curveFactory","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataItemIndex","currentEndIndex","connect","fillTemplate","originalTemplate","strokeTemplate","xField","yField","xOpenField","yOpenField","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","openLocationX","openLocationY","fillVisible","getOpen","valueX","valueY","iPoint","xPos0","yPos0","stackToItemX","stackToItemY","closeIPoint","prev","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","disabledColor","FlowDefaultTheme","outgoing","linkDataItem","link","incoming","rectangle","Flow","nodes","unknown","sourceId","sourceDataItem","targetId","targetDataItem","sourceIndex","targetIndex","valueLow","valueHigh","valueSum","d3SankeyNode","sumIncoming","sumIncomingWorking","workingValue","sumOutgoing","sumOutgoingWorking","valueWorking","minSize","d3SankeyLink","fillStyle","strokeStyle","sourceFill","targetFill","sourceStop","targetStop","stateAnimationDuration","stateAnimationEasing","compareValue","chord","chordDirected","directed","transpose","sortGroups","sortSubgroups","sortChords","groupSums","groupIndex","chords","subgroupIndex","append","strings","appendRound","defaultSource","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","defaultPadAngle","defaultArrowheadRadius","ribbon","headRadius","sourceRadius","targetRadius","argv","sa0","sa1","ta0","ta1","tr2","ta2","ribbon$1","ribbonArrow","descending","Transform","FlowNode","FlowNodes","themeTag","node","flow","links","ChordNodes","$math.getAngle","bulletRadius","FlowLink","ChordLink","$math.getPointOnLine","$math.getPointOnQuadraticCurve","Chord","outgoingLink","chordChanged","sort","chordStartAngle","nodeWidth","chordGroup","linkRadius","chordLayoutItem","startAngle0","endAngle0","angle0","startAngle1","endAngle1","angle1","ChordLinkDirected","ChordDirected","linkHeadRadius"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141]}
